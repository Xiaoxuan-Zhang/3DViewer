{"version":3,"sources":["webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/createClass.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/inherits.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/typeof.js","webpack://webgl_webpack/./src/style/style.scss","webpack://webgl_webpack/./node_modules/css-loader/dist/runtime/api.js","webpack://webgl_webpack/./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack://webgl_webpack/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://webgl_webpack/./node_modules/webgl-obj-loader/dist/webgl-obj-loader.min.js","webpack://webgl_webpack/webpack/bootstrap","webpack://webgl_webpack/webpack/runtime/compat get default export","webpack://webgl_webpack/webpack/runtime/define property getters","webpack://webgl_webpack/webpack/runtime/hasOwnProperty shorthand","webpack://webgl_webpack/webpack/runtime/publicPath","webpack://webgl_webpack/./src/WebGL/lib/webgl-utils.js","webpack://webgl_webpack/./src/WebGL/lib/webglFunctions.js","webpack://webgl_webpack/./src/WebGL/material.js","webpack://webgl_webpack/./src/WebGL/lib/cuon-matrix.js","webpack://webgl_webpack/./src/WebGL/geometries/geometry.js","webpack://webgl_webpack/./src/WebGL/geometries/square.js","webpack://webgl_webpack/./src/WebGL/shaders/finalPass.js","webpack://webgl_webpack/./src/WebGL/renderer.js","webpack://webgl_webpack/./src/GUI/Components/UIComponent.js","webpack://webgl_webpack/./src/GUI/Components/Sidebar.js","webpack://webgl_webpack/./src/GUI/Components/TextWidget.js","webpack://webgl_webpack/./src/GUI/Components/Accordion.js","webpack://webgl_webpack/./src/GUI/Components/FileUploader.js","webpack://webgl_webpack/./src/GUI/Components/Dropdown.js","webpack://webgl_webpack/./src/GUI/Components/Tabs.js","webpack://webgl_webpack/./src/GUI/UI.js","webpack://webgl_webpack/./src/style/style.scss?747e","webpack://webgl_webpack/./src/external/models/Cat-1/Cat.obj","webpack://webgl_webpack/./src/store.js","webpack://webgl_webpack/./src/WebGL/shaders/basicLight.js","webpack://webgl_webpack/./src/WebGL/shaders/simpleColor.js","webpack://webgl_webpack/./src/WebGL/shaders/sky.js","webpack://webgl_webpack/./src/WebGL/shaders/fullscreen.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_zentime.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_thatcat.js","webpack://webgl_webpack/./src/WebGL/scene.js","webpack://webgl_webpack/./src/WebGL/camera.js","webpack://webgl_webpack/./src/WebGL/texture.js","webpack://webgl_webpack/./src/WebGL/simpleLight.js","webpack://webgl_webpack/./src/WebGL/geometries/cube.js","webpack://webgl_webpack/./src/WebGL/geometries/object.js","webpack://webgl_webpack/./src/app.js","webpack://webgl_webpack/./src/index.js"],"names":["module","exports","self","ReferenceError","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","create","constructor","_typeof","assertThisInitialized","call","_setPrototypeOf","p","Symbol","iterator","___CSS_LOADER_EXPORT___","push","id","cssWithMappingToString","list","toString","this","map","item","content","concat","join","modules","mediaQuery","dedupe","alreadyImportedModules","_i","_arrayLikeToArray","arr","len","arr2","Array","_item","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","next","done","err","_iterableToArrayLimit","minLen","n","slice","name","from","test","_unsupportedIterableToArray","_nonIterableRest","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","memo","getTarget","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","index","css","media","sourceMap","references","updater","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","replacement","filter","Boolean","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","firstChild","singleton","singletonCounter","update","styleIndex","bind","parentNode","removeStyleElement","newObj","all","atob","lastIdentifiers","newList","newLastIdentifiers","_index","splice","t","a","r","l","m","c","d","get","__esModule","default","hasOwnProperty","s","Layout","arguments","u","f","h","sizeOfType","attribute","size","type","normalized","offset","sizeInBytes","Math","max","return","stride","v","y","M","message","POSITION","NORMAL","TANGENT","BITANGENT","UV","MATERIAL_INDEX","MATERIAL_ENABLED","AMBIENT","DIFFUSE","SPECULAR","SPECULAR_EXPONENT","EMISSIVE","TRANSMISSION_FILTER","DISSOLVE","ILLUMINATION","REFRACTION_INDEX","SHARPNESS","MAP_DIFFUSE","MAP_AMBIENT","MAP_SPECULAR","MAP_SPECULAR_EXPONENT","MAP_DISSOLVE","ANTI_ALIASING","MAP_BUMP","MAP_DISPLACEMENT","MAP_DECAL","MAP_EMISSIVE","materials","enableWTextureCoord","indicesPerMaterial","vertices","vertexNormals","textures","indices","textureStride","verts","norms","hashindices","materialIndices","b","x","split","I","A","trim","startsWith","_","shift","apply","k","T","w","F","S","E","g","O","B","L","vertexMaterialIndices","materialNames","materialsByIndex","calcTangentsAndBitangents","calculateTangentsAndBitangents","tangents","bitangents","N","R","P","abs","D","C","U","j","z","H","W","G","V","K","q","X","Y","J","Q","Z","ee","te","re","ae","ne","ie","se","le","oe","ue","ce","fe","sqrt","he","pe","ve","de","ye","me","Me","be","xe","Ie","Ae","ke","Te","we","Fe","Se","ArrayBuffer","numItems","DataView","setFloat32","setInt16","ambient","diffuse","specular","specularExponent","emissive","transmissionFilter","dissolve","illumination","refractionIndex","sharpness","antiAliasing","Uint16Array","Material","transparency","mapDiffuse","mapAmbient","mapSpecular","mapSpecularExponent","mapDissolve","mapBump","mapDisplacement","mapDecal","mapEmissive","mapReflections","MaterialLibrary","currentMaterial","parse","parseFloat","parseColor","pop","parseInt","colorCorrection","horizontalBlending","verticalBlending","boostMipMapSharpness","modifyTextureMap","brightness","contrast","parse_ost","scale","turbulence","textureResolution","clamp","bumpMultiplier","imfChan","reflectionType","reverse","substr","parseOptions","filename","parseMap","parse_map_bump","version","deleteMeshBuffers","initMeshBuffers","downloadMeshes","downloadModels","Mesh","endsWith","fetch","then","ok","blob","Image","src","URL","createObjectURL","texture","Promise","onload","catch","replace","resolve","text","mtl","downloadMtlTextures","mtlTextureRoot","lastIndexOf","addMaterialLibrary","normalBuffer","ARRAY_BUFFER","textureBuffer","vertexBuffer","indexBuffer","ELEMENT_ARRAY_BUFFER","deleteBuffer","createBuffer","Float32Array","bindBuffer","bufferData","STATIC_DRAW","itemSize","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","definition","prop","handleCreationError","msg","container","getElementsByTagName","str","WebGLRenderingContext","innerHTML","makeFailHTML","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","cancelAnimationFrame","cancelRequestAnimationFrame","webkitCancelAnimationFrame","webkitCancelRequestAnimationFrame","mozCancelAnimationFrame","mozCancelRequestAnimationFrame","msCancelAnimationFrame","msCancelRequestAnimationFrame","oCancelAnimationFrame","oCancelRequestAnimationFrame","clearTimeout","createShader","gl","vshader","fshader","transformFeedbackProperties","program","createProgram","console","log","useShader","useProgram","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","transformFeedbackVaryings","INTERLEAVED_ATTRIBS","linkProgram","linked","getProgramParameter","LINK_STATUS","error","getProgramInfoLog","deleteProgram","deleteShader","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","send2DTextureToGLSL","val","textureUnit","uniformName","loc","getUniformLocation","uniform1i","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","sendCubemapToGLSL","TEXTURE_CUBE_MAP","create2DTexture","image","magParam","minParam","wrapSParam","wrapTParam","createTexture","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","width","height","UNSIGNED_BYTE","createNullTexture","internalFormat","format","border","dataType","updateNullTexture","createBufferData","bufferObj","sendAttributeBufferToGLSL","buffer","dataCount","attribName","FLOAT","attribLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","sendUniformFloatToGLSL","val_loc","uniform1f","sendUniformVec4ToGLSL","uniform4f","sendUniformVec3ToGLSL","uniform3f","sendUniformVec2ToGLSL","uniform2f","sendUniformMat4ToGLSL","uniformMatrix4fv","elements","uniforms","shaders","shaderProgram","textureUnitCount","Matrix4","opt_src","setIdentity","set","other","ai0","ai1","ai2","ai3","multiply","multiplyVector3","pos","Vector3","multiplyVector4","Vector4","transpose","setInverseOf","inv","det","invert","setOrtho","left","right","bottom","top","near","far","rw","rh","rd","ortho","setFrustum","frustum","setPerspective","fovy","aspect","ct","PI","sin","cos","perspective","setScale","setTranslate","translate","setRotate","angle","rlen","nc","xy","yz","zx","xs","ys","zs","rotate","setLookAt","eyeX","eyeY","eyeZ","centerX","centerY","centerZ","upX","upY","upZ","fx","fy","fz","rlf","sx","sy","sz","rls","ux","uy","uz","lookAt","dropShadow","plane","light","mat","dot","dropShadowDirectionally","normX","normY","normZ","planeX","planeY","planeZ","lightX","lightY","lightZ","normalize","pow","normals","UVs","modelMatrix","normalMatrix","translateValue","scaleValue","rotation","rotationAxis","autoRotate","visible","material","now","performance","materialObj","binded","attr","coords","degree","axis","elapsed","generateSquareVertices","Geometry","vertex","fragment","divId","models","framebuffer","scene","camera","multiPassEnabled","frameBufferTexture","fogNear","fogFar","fogAmount","fogColor","isMousedown","lastMouse","deltaMouse","mousePos","domElement","getElementById","canvas","optAttribs","optOnError","errorHandler","addEventListener","event","statusMessage","context","names","ii","getContext","create3DContext","setupWebGL","_initFramebuffers","_initEventHandelers","_initWebGLContext","_createTextures","_compileShaders","_createFinalSquad","_createBufferData","resizeCanvas","realToCSSPixels","devicePixelRatio","displayWidth","floor","clientWidth","displayHeight","clientHeight","viewport","updateProjectionMatrix","_updateRenderTexture","enabled","updateAnimation","bindFramebuffer","FRAMEBUFFER","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","geometries","geo","_renderObject","flush","skybox","disable","CULL_FACE","depthFunc","LEQUAL","LESS","enable","clearColor","DEPTH_TEST","frontFace","CCW","fb0","createFramebuffer","colorTexture","WebGLFunc","NEAREST","CLAMP_TO_EDGE","depthTexture","DEPTH_COMPONENT24","DEPTH_COMPONENT","UNSIGNED_INT","framebufferTexture2D","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","onmouseup","ev","onmousedown","_handleMouseClick","onmousemove","clientX","clientY","rect","getBoundingClientRect","move","rotateWithMouse","WebGLUtils","setBuffer","properties","Square","u_near","u_far","u_fog","u_fogColor","u_sample","textureObj","u_depth","finalPassShader","addMaterial","uniform1ui","getTextureUnit","res","viewMatrix","projectionMatrix","position","viewProjectionInvMatrix","color","specularColor","renderObj","pointCount","_sendMaterialUniforms","_sendCameraUniforms","_sendLightUniforms","drawElements","TRIANGLES","UNSIGNED_SHORT","drawArrays","element","className","UIComponent","title","textAreaId","submitId","editor","eventType","targetId","ele","checkboxId","newItem","input","inputId","_registerCheckboxId","label","contentDiv","currId","accept","fileName","stopPropagation","preventDefault","file","files","innerText","items","wrapperDiv","selector","option","toLowerCase","selected","_createContent","querySelectorAll","node","display","updateTextureToStore","store","fileObj","model","getById","img","setDataById","updateObjToStore","createModelEditor","modelEditorDiv","sceneSelector","Dropdown","getElement","divider","modelLoader","loaderDiv","loaders","ul","fileLoaders","FileLoader","bindEvent","objHandler","reader","FileReader","readAsText","processObj","imageHandler","readAsDataURL","processImage","li","createModelLoader","submitBtn","listeners","rootElement","body","sidebar","Sidebar","modelOptions","shaderOptions","currentShader","shaderEditorDiv","typeLower","wrapper","shaderItems","current","textWidget","TextWidget","tabs","Tabs","createShaderEditor","accordion","Accordion","addItem","sessionStorage","setItem","btn","selectedScene","selectedIndex","shaderSelector","selectedShader","func","div2d","div3d","addListener","listener","mesh","materialLibrary","appData","path","catDiffuse","desc","catNormal","catSpecular","images","noise64","wood","appStore","assign","newData","freeze","sceneObjects","particleSystem","object","geometry","particles","Camera","worldUp","up","front","yaw","pitch","fov","aspectRatio","deltaTime","lastTime","rotationSpeed","speed","sensitivity","setPosition","updateViewMatrix","setTarget","direction","velocity","deltaX","deltaY","zoom","cosPitch","sinPitch","cosYaw","sinYaw","getRight","getUp","updateViewProjectionInvMatrix","getFront","ax","ay","az","bx","by","bz","out","getViewDistance","getViewDistanceXZ","currTime","generateCubeVertices","_createCube","rotateDegree","rotateAxis","Cube","texImg","u_model","u_normalMatrix","Texture","lightShader","create3DScene","Scene","storeData","modelType","customObj","CustomObject","maps","_createObject","modelData","addGeometry","cube","colorShader","ground","u_color","skyShader","u_noisemap","u_time","_createSkybox","SimpleLight","setLight","createFullScreenSquad","u_mouse","u_resolution","promiseList","Store","reject","renderer","ui","WebGLRenderer","UI","init","currShaders","animate","render","load"],"mappings":"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","file":"main.bundle.js","sourcesContent":["function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".tabs{border-radius:0px;overflow:hidden;box-shadow:0 4px 4px -2px rgba(0,0,0,.5)}.tab{width:100%;color:#fff;overflow:hidden}.tab-input{position:absolute;opacity:0;z-index:-1}.tab-label{display:flex;justify-content:space-between;padding:.5em;background:#161313;font-weight:bold;cursor:pointer}.tab-label:hover{background:#363945}.tab-label::after{content:\\\"❯\\\";width:1em;height:1em;text-align:center;transition:all .25s}.tab-content{max-height:0;padding:0 1em;color:#2c3e50;background:#161313;transition:all .35s}.tab-close{display:flex;justify-content:flex-end;padding:1em;font-size:.75em;background:#161313;cursor:pointer}.tab-close:hover{background:#363945}input:checked+.tab-label{background:#363945}input:checked+.tab-label::after{transform:rotate(90deg)}input:checked~.tab-content{display:block;max-height:100vh;padding:1em}.text-editor{margin:0px}.textbox{height:60vh;max-height:500px}html body{font-family:\\\"Roboto\\\",sans-serif;font-size:16px;line-height:1.15}#webgl-canvas{width:100%;height:100%;position:absolute;top:0;left:0;z-index:0}.side-bar-right{position:absolute;right:0;top:0;width:30%;height:calc(100vh);overflow-y:auto;background-color:rgba(0,0,0,0)}.float-right{float:right}.bd-light-purple{border-color:#a463f2}select{border-width:0px}.divider{border-top:.1rem solid #555}.model-loader-wrapper{display:flex;flex-direction:column}textarea{color:#d3d3d3;background-color:#161313}.cursor-pointer{cursor:pointer}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style/style.scss\",\"webpack://./src/style/accordion.scss\",\"webpack://./src/style/_variables.scss\",\"webpack://./src/style/textWidget.scss\"],\"names\":[],\"mappings\":\"AAAA,MCEA,iBACI,CAAA,eACA,CAAA,wCACA,CAAA,KAEJ,UACI,CAAA,UACA,CAAA,eACA,CAAA,WACA,iBACI,CAAA,SACA,CAAA,UACA,CAAA,WAEJ,YACI,CAAA,6BACA,CAAA,YACA,CAAA,kBCnBG,CAAA,gBDqBH,CAAA,cACA,CAAA,iBAEA,kBCvBE,CAAA,kBD0BF,WACI,CAAA,SACA,CAAA,UACA,CAAA,iBACA,CAAA,mBACA,CAAA,aAGR,YACI,CAAA,aACA,CAAA,aChCK,CAAA,kBALF,CAAA,mBDwCH,CAAA,WAEJ,YACI,CAAA,wBACA,CAAA,WACA,CAAA,eACA,CAAA,kBC9CG,CAAA,cDgDH,CAAA,iBACA,kBChDE,CAAA,yBDwDN,kBCxDM,CAAA,gCD0DF,uBACI,CAAA,2BAGR,aACI,CAAA,gBACA,CAAA,WACA,CAAA,aElER,UACI,CAAA,SAGJ,WACI,CAAA,gBACA,CAAA,UHFJ,+BACE,CAAA,cACA,CAAA,gBACA,CAAA,cAGF,UACE,CAAA,WACA,CAAA,iBACA,CAAA,KACA,CAAA,MACA,CAAA,SACA,CAAA,gBAGF,iBACE,CAAA,OACA,CAAA,KACA,CAAA,SACA,CAAA,kBACA,CAAA,eACA,CAAA,8BEtBe,CAAA,aF0BjB,WACE,CAAA,iBAGF,oBE1Be,CAAA,OF8Bf,gBACE,CAAA,SAGF,2BACE,CAAA,sBAGF,YACE,CAAA,qBACA,CAAA,SAGF,aE5CkB,CAAA,wBANP,CAAA,gBFuDX,cACE\",\"sourcesContent\":[\"@import \\\"./variables\\\";\\n@import \\\"./accordion.scss\\\";\\n@import \\\"./textWidget.scss\\\";\\n\\nhtml body {\\n  font-family: 'Roboto', sans-serif;\\n  font-size: 16px;\\n  line-height: 1.15;\\n}\\n\\n#webgl-canvas {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: 0;\\n}\\n\\n.side-bar-right {\\n  position:absolute;\\n  right: 0;\\n  top: 0;\\n  width: 30%;\\n  height: calc(100vh);\\n  overflow-y: auto;\\n  background-color: $bg-transparent;\\n}\\n\\n.float-right {\\n  float: right;\\n}\\n\\n.bd-light-purple {\\n  border-color: $light-purple;\\n}\\n\\nselect {\\n  border-width: 0px;\\n}\\n\\n.divider {\\n  border-top: 0.1rem solid $light-grey;\\n}\\n\\n.model-loader-wrapper {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\ntextarea {\\n  color: $font-light-gray;\\n  background-color: $bg-black;\\n}\\n\\n.cursor-pointer {\\n  cursor: pointer\\n}\\n\\n\",\"\\n/* Accordion styles */\\n.tabs {\\n    border-radius: 0px;\\n    overflow: hidden;\\n    box-shadow: 0 4px 4px -2px rgba(0,0,0,0.5);\\n  }\\n.tab {\\n    width: 100%;\\n    color: white;\\n    overflow: hidden;\\n    &-input {\\n        position: absolute;\\n        opacity: 0;\\n        z-index: -1;\\n    }\\n    &-label {\\n        display: flex;\\n        justify-content: space-between;\\n        padding: 0.5em;\\n        background: $bg-black;\\n        font-weight: bold;\\n        cursor: pointer;\\n        /* Icon */\\n        &:hover {\\n            background: $bg-grey;\\n        }\\n        &::after {\\n            content: \\\"\\\\276F\\\";\\n            width: 1em;\\n            height: 1em;\\n            text-align: center;\\n            transition: all .25s;\\n        }\\n    }\\n    &-content {\\n        max-height: 0;\\n        padding: 0 1em;\\n        color: $font-black;\\n        background: $bg-black;\\n        transition: all .35s;\\n    }\\n    &-close {\\n        display: flex;\\n        justify-content: flex-end;\\n        padding: 1em;\\n        font-size: 0.75em;\\n        background: $bg-black;\\n        cursor: pointer;\\n        &:hover {\\n            background: $bg-grey;\\n        }\\n    }\\n}\\n  \\n// :checked\\ninput:checked {\\n    + .tab-label {\\n        background: $bg-grey;\\n        &::after {\\n            transform: rotate(90deg);\\n        }\\n    }\\n    ~ .tab-content {\\n        display:block;\\n        max-height: 100vh;\\n        padding: 1em;\\n    }\\n}\",\"$bg-black: #161313;\\n$bg-grey: #363945;\\n$bg-black-trasparent: rgba(54, 57, 69, 0.7);\\n$bg-transparent: rgba(0, 0, 0, 0);\\n$font-white: #FFFFFF;\\n$font-black: #2c3e50;\\n$font-light-gray: lightgray;\\n$light-purple: #a463f2;\\n$light-grey: #555;\\n\",\".text-editor {\\n    margin: 0px;\\n}\\n\\n.textbox {\\n    height: 60vh;\\n    max-height: 500px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (typeof btoa === 'function') {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n};","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"OBJ\",[],t):\"object\"==typeof exports?exports.OBJ=t():e.OBJ=t()}(\"undefined\"!=typeof self?self:this,function(){return function(e){function t(a){if(r[a])return r[a].exports;var n=r[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,t),n.l=!0,n.exports}var r={};return t.m=e,t.c=r,t.d=function(exports,e,r){t.o(exports,e)||Object.defineProperty(exports,e,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=3)}([function(e,exports,t){\"use strict\";function r(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function a(e){switch(e){case\"BYTE\":case\"UNSIGNED_BYTE\":return 1;case\"SHORT\":case\"UNSIGNED_SHORT\":return 2;case\"FLOAT\":return 4}}Object.defineProperty(exports,\"__esModule\",{value:!0});var n=exports.Layout=function e(){r(this,e);for(var t=arguments.length,a=Array(t),n=0;n<t;n++)a[n]=arguments[n];this.attributes=a;var s=0,l=0,o=!0,u=!1,c=void 0;try{for(var f,h=a[Symbol.iterator]();!(o=(f=h.next()).done);o=!0){var p=f.value;if(this[p.key])throw new i(p);s%p.sizeOfType!=0&&(s+=p.sizeOfType-s%p.sizeOfType),this[p.key]={attribute:p,size:p.size,type:p.type,normalized:p.normalized,offset:s},s+=p.sizeInBytes,l=Math.max(l,p.sizeOfType)}}catch(e){u=!0,c=e}finally{try{!o&&h.return&&h.return()}finally{if(u)throw c}}s%l!=0&&(s+=l-s%l),this.stride=s;var v=!0,d=!1,y=void 0;try{for(var m,M=a[Symbol.iterator]();!(v=(m=M.next()).done);v=!0){this[m.value.key].stride=this.stride}}catch(e){d=!0,y=e}finally{try{!v&&M.return&&M.return()}finally{if(d)throw y}}},i=function e(t){r(this,e),this.message=\"found duplicate attribute: \"+t.key},s=function e(t,n,i){arguments.length>3&&void 0!==arguments[3]&&arguments[3];r(this,e),this.key=t,this.size=n,this.type=i,this.normalized=!1,this.sizeOfType=a(i),this.sizeInBytes=this.sizeOfType*n};n.POSITION=new s(\"position\",3,\"FLOAT\"),n.NORMAL=new s(\"normal\",3,\"FLOAT\"),n.TANGENT=new s(\"tangent\",3,\"FLOAT\"),n.BITANGENT=new s(\"bitangent\",3,\"FLOAT\"),n.UV=new s(\"uv\",2,\"FLOAT\"),n.MATERIAL_INDEX=new s(\"materialIndex\",1,\"SHORT\"),n.MATERIAL_ENABLED=new s(\"materialEnabled\",1,\"UNSIGNED_SHORT\"),n.AMBIENT=new s(\"ambient\",3,\"FLOAT\"),n.DIFFUSE=new s(\"diffuse\",3,\"FLOAT\"),n.SPECULAR=new s(\"specular\",3,\"FLOAT\"),n.SPECULAR_EXPONENT=new s(\"specularExponent\",3,\"FLOAT\"),n.EMISSIVE=new s(\"emissive\",3,\"FLOAT\"),n.TRANSMISSION_FILTER=new s(\"transmissionFilter\",3,\"FLOAT\"),n.DISSOLVE=new s(\"dissolve\",1,\"FLOAT\"),n.ILLUMINATION=new s(\"illumination\",1,\"UNSIGNED_SHORT\"),n.REFRACTION_INDEX=new s(\"refractionIndex\",1,\"FLOAT\"),n.SHARPNESS=new s(\"sharpness\",1,\"FLOAT\"),n.MAP_DIFFUSE=new s(\"mapDiffuse\",1,\"SHORT\"),n.MAP_AMBIENT=new s(\"mapAmbient\",1,\"SHORT\"),n.MAP_SPECULAR=new s(\"mapSpecular\",1,\"SHORT\"),n.MAP_SPECULAR_EXPONENT=new s(\"mapSpecularExponent\",1,\"SHORT\"),n.MAP_DISSOLVE=new s(\"mapDissolve\",1,\"SHORT\"),n.ANTI_ALIASING=new s(\"antiAliasing\",1,\"UNSIGNED_SHORT\"),n.MAP_BUMP=new s(\"mapBump\",1,\"SHORT\"),n.MAP_DISPLACEMENT=new s(\"mapDisplacement\",1,\"SHORT\"),n.MAP_DECAL=new s(\"mapDecal\",1,\"SHORT\"),n.MAP_EMISSIVE=new s(\"mapEmissive\",1,\"SHORT\")},function(e,exports,t){\"use strict\";function r(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function a(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(exports,\"__esModule\",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}(),i=t(0),s=function(){function e(t,n){a(this,e),n=n||{},n.materials=n.materials||{},n.enableWTextureCoord=!!n.enableWTextureCoord,n.indicesPerMaterial=!!n.indicesPerMaterial;var i=this;i.vertices=[],i.vertexNormals=[],i.textures=[],i.indices=[],i.textureStride=n.enableWTextureCoord?3:2,this.name=\"\";var s=[],l=[],o=[],u={},c=[],f={},h=-1,p=0;u.verts=[],u.norms=[],u.textures=[],u.hashindices={},u.indices=[[]],u.materialIndices=[],u.index=0;for(var v=/^v\\s/,d=/^vn\\s/,y=/^vt\\s/,m=/^f\\s/,M=/\\s+/,b=/^usemtl/,x=t.split(\"\\n\"),I=0;I<x.length;I++){var A=x[I].trim();if(A&&!A.startsWith(\"#\")){var _=A.split(M);if(_.shift(),v.test(A))s.push.apply(s,r(_));else if(d.test(A))l.push.apply(l,r(_));else if(y.test(A)){var k=_;_.length>2&&!n.enableWTextureCoord?k=_.slice(0,2):2===_.length&&n.enableWTextureCoord&&k.push(0),o.push.apply(o,r(k))}else if(b.test(A)){var T=_[0];T in f||(c.push(T),f[T]=c.length-1,n.indicesPerMaterial&&f[T]>0&&u.indices.push([])),h=f[T],n.indicesPerMaterial&&(p=h)}else if(m.test(A))for(var w=!1,F=0,S=_.length;F<S;F++){3!==F||w||(F=2,w=!0);var E=_[0]+\",\"+h,g=_[F]+\",\"+h;if(g in u.hashindices)u.indices[p].push(u.hashindices[g]);else{var O=_[F].split(\"/\"),B=O.length-1;if(u.verts.push(+s[3*(O[0]-1)+0]),u.verts.push(+s[3*(O[0]-1)+1]),u.verts.push(+s[3*(O[0]-1)+2]),o.length){var L=n.enableWTextureCoord?3:2;u.textures.push(+o[(O[1]-1)*L+0]),u.textures.push(+o[(O[1]-1)*L+1]),n.enableWTextureCoord&&u.textures.push(+o[(O[1]-1)*L+2])}u.norms.push(+l[3*(O[B]-1)+0]),u.norms.push(+l[3*(O[B]-1)+1]),u.norms.push(+l[3*(O[B]-1)+2]),u.materialIndices.push(h),u.hashindices[g]=u.index,u.indices[p].push(u.hashindices[g]),u.index+=1}3===F&&w&&u.indices[p].push(u.hashindices[E])}}}i.vertices=u.verts,i.vertexNormals=u.norms,i.textures=u.textures,i.vertexMaterialIndices=u.materialIndices,i.indices=n.indicesPerMaterial?u.indices:u.indices[p],i.materialNames=c,i.materialIndices=f,i.materialsByIndex={},n.calcTangentsAndBitangents&&this.calculateTangentsAndBitangents()}return n(e,[{key:\"calculateTangentsAndBitangents\",value:function(){var e={};e.tangents=[].concat(r(new Array(this.vertices.length))).map(function(e){return 0}),e.bitangents=[].concat(r(new Array(this.vertices.length))).map(function(e){return 0});var t=void 0;t=Array.isArray(this.indices[0])?[].concat.apply([],this.indices):this.indices;for(var a=this.vertices,n=this.vertexNormals,i=this.textures,s=0;s<t.length;s+=3){var l=t[s+0],o=t[s+1],u=t[s+2],c=a[3*l+0],f=a[3*l+1],h=a[3*l+2],p=i[2*l+0],v=i[2*l+1],d=a[3*o+0],y=a[3*o+1],m=a[3*o+2],M=i[2*o+0],b=i[2*o+1],x=a[3*u+0],I=a[3*u+1],A=a[3*u+2],_=i[2*u+0],k=i[2*u+1],T=d-c,w=y-f,F=m-h,S=x-c,E=I-f,g=A-h,O=M-p,B=b-v,L=_-p,N=k-v,R=O*N-B*L,P=1/(Math.abs(R<1e-4)?1:R),D=(T*N-S*B)*P,C=(w*N-E*B)*P,U=(F*N-g*B)*P,j=(S*O-T*L)*P,z=(E*O-w*L)*P,H=(g*O-F*L)*P,W=n[3*l+0],G=n[3*l+1],V=n[3*l+2],K=n[3*o+0],q=n[3*o+1],X=n[3*o+2],Y=n[3*u+0],J=n[3*u+1],Q=n[3*u+2],Z=D*W+C*G+U*V,ee=D*K+C*q+U*X,te=D*Y+C*J+U*Q,re=D-W*Z,ae=C-G*Z,ne=U-V*Z,ie=D-K*ee,se=C-q*ee,le=U-X*ee,oe=D-Y*te,ue=C-J*te,ce=U-Q*te,fe=Math.sqrt(re*re+ae*ae+ne*ne),he=Math.sqrt(ie*ie+se*se+le*le),pe=Math.sqrt(oe*oe+ue*ue+ce*ce),ve=j*W+z*G+H*V,de=j*K+z*q+H*X,ye=j*Y+z*J+H*Q,me=j-W*ve,Me=z-G*ve,be=H-V*ve,xe=j-K*de,Ie=z-q*de,Ae=H-X*de,_e=j-Y*ye,ke=z-J*ye,Te=H-Q*ye,we=Math.sqrt(me*me+Me*Me+be*be),Fe=Math.sqrt(xe*xe+Ie*Ie+Ae*Ae),Se=Math.sqrt(_e*_e+ke*ke+Te*Te);e.tangents[3*l+0]+=re/fe,e.tangents[3*l+1]+=ae/fe,e.tangents[3*l+2]+=ne/fe,e.tangents[3*o+0]+=ie/he,e.tangents[3*o+1]+=se/he,e.tangents[3*o+2]+=le/he,e.tangents[3*u+0]+=oe/pe,e.tangents[3*u+1]+=ue/pe,e.tangents[3*u+2]+=ce/pe,e.bitangents[3*l+0]+=me/we,e.bitangents[3*l+1]+=Me/we,e.bitangents[3*l+2]+=be/we,e.bitangents[3*o+0]+=xe/Fe,e.bitangents[3*o+1]+=Ie/Fe,e.bitangents[3*o+2]+=Ae/Fe,e.bitangents[3*u+0]+=_e/Se,e.bitangents[3*u+1]+=ke/Se,e.bitangents[3*u+2]+=Te/Se}this.tangents=e.tangents,this.bitangents=e.bitangents}},{key:\"makeBufferData\",value:function(e){var t=this.vertices.length/3,r=new ArrayBuffer(e.stride*t);r.numItems=t;for(var a=new DataView(r),n=0,s=0;n<t;n++){s=n*e.stride;var l=!0,o=!1,u=void 0;try{for(var c,f=e.attributes[Symbol.iterator]();!(l=(c=f.next()).done);l=!0){var h=c.value,p=s+e[h.key].offset;switch(h.key){case i.Layout.POSITION.key:a.setFloat32(p,this.vertices[3*n],!0),a.setFloat32(p+4,this.vertices[3*n+1],!0),a.setFloat32(p+8,this.vertices[3*n+2],!0);break;case i.Layout.UV.key:a.setFloat32(p,this.textures[2*n],!0),a.setFloat32(p+4,this.vertices[2*n+1],!0);break;case i.Layout.NORMAL.key:a.setFloat32(p,this.vertexNormals[3*n],!0),a.setFloat32(p+4,this.vertexNormals[3*n+1],!0),a.setFloat32(p+8,this.vertexNormals[3*n+2],!0);break;case i.Layout.MATERIAL_INDEX.key:a.setInt16(p,this.vertexMaterialIndices[n],!0);break;case i.Layout.AMBIENT.key:var v=this.vertexMaterialIndices[n],d=this.materialsByIndex[v];if(!d)break;a.setFloat32(p,d.ambient[0],!0),a.setFloat32(p+4,d.ambient[1],!0),a.setFloat32(p+8,d.ambient[2],!0);break;case i.Layout.DIFFUSE.key:var y=this.vertexMaterialIndices[n],m=this.materialsByIndex[y];if(!m)break;a.setFloat32(p,m.diffuse[0],!0),a.setFloat32(p+4,m.diffuse[1],!0),a.setFloat32(p+8,m.diffuse[2],!0);break;case i.Layout.SPECULAR.key:var M=this.vertexMaterialIndices[n],b=this.materialsByIndex[M];if(!b)break;a.setFloat32(p,b.specular[0],!0),a.setFloat32(p+4,b.specular[1],!0),a.setFloat32(p+8,b.specular[2],!0);break;case i.Layout.SPECULAR_EXPONENT.key:var x=this.vertexMaterialIndices[n],I=this.materialsByIndex[x];if(!I)break;a.setFloat32(p,I.specularExponent,!0);break;case i.Layout.EMISSIVE.key:var A=this.vertexMaterialIndices[n],_=this.materialsByIndex[A];if(!_)break;a.setFloat32(p,_.emissive[0],!0),a.setFloat32(p+4,_.emissive[1],!0),a.setFloat32(p+8,_.emissive[2],!0);break;case i.Layout.TRANSMISSION_FILTER.key:var k=this.vertexMaterialIndices[n],T=this.materialsByIndex[k];if(!T)break;a.setFloat32(p,T.transmissionFilter[0],!0),a.setFloat32(p+4,T.transmissionFilter[1],!0),a.setFloat32(p+8,T.transmissionFilter[2],!0);break;case i.Layout.DISSOLVE.key:var w=this.vertexMaterialIndices[n],F=this.materialsByIndex[w];if(!F)break;a.setFloat32(p,F.dissolve,!0);break;case i.Layout.ILLUMINATION.key:var S=this.vertexMaterialIndices[n],E=this.materialsByIndex[S];if(!E)break;a.setInt16(p,E.illumination,!0);break;case i.Layout.REFRACTION_INDEX.key:var g=this.vertexMaterialIndices[n],O=this.materialsByIndex[g];if(!O)break;a.setFloat32(p,O.refractionIndex,!0);break;case i.Layout.SHARPNESS.key:var B=this.vertexMaterialIndices[n],L=this.materialsByIndex[B];if(!L)break;a.setFloat32(p,L.sharpness,!0);break;case i.Layout.ANTI_ALIASING.key:var N=this.vertexMaterialIndices[n],R=this.materialsByIndex[N];if(!R)break;a.setInt16(p,R.antiAliasing,!0)}}}catch(e){o=!0,u=e}finally{try{!l&&f.return&&f.return()}finally{if(o)throw u}}}return r}},{key:\"makeIndexBufferData\",value:function(){var e=new Uint16Array(this.indices);return e.numItems=this.indices.length,e}},{key:\"addMaterialLibrary\",value:function(e){for(var t in e.materials)if(t in this.materialIndices){var r=e.materials[t],a=this.materialIndices[r.name];this.materialsByIndex[a]=r}}}]),e}();exports.default=s},function(e,exports,t){\"use strict\";function r(e){return Array.isArray(e)?e:Array.from(e)}function a(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(exports,\"__esModule\",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}(),i=exports.Material=function e(t){a(this,e),this.name=t,this.ambient=[0,0,0],this.diffuse=[0,0,0],this.specular=[0,0,0],this.emissive=[0,0,0],this.transmissionFilter=[0,0,0],this.dissolve=0,this.specularExponent=0,this.transparency=0,this.illumination=0,this.refractionIndex=1,this.sharpness=0,this.mapDiffuse=null,this.mapAmbient=null,this.mapSpecular=null,this.mapSpecularExponent=null,this.mapDissolve=null,this.antiAliasing=!1,this.mapBump=null,this.mapDisplacement=null,this.mapDecal=null,this.mapEmissive=null,this.mapReflections=[]};exports.MaterialLibrary=function(){function e(t){a(this,e),this.data=t,this.currentMaterial=null,this.materials={},this.parse()}return n(e,[{key:\"parse_newmtl\",value:function(e){var t=e[0];this.currentMaterial=new i(t),this.materials[t]=this.currentMaterial}},{key:\"parseColor\",value:function(e){if(\"spectral\"!=e[0]&&\"xyz\"!=e[0]){if(3==e.length)return e.map(parseFloat);var t=parseFloat(e[0]);return[t,t,t]}}},{key:\"parse_Ka\",value:function(e){this.currentMaterial.ambient=this.parseColor(e)}},{key:\"parse_Kd\",value:function(e){this.currentMaterial.diffuse=this.parseColor(e)}},{key:\"parse_Ks\",value:function(e){this.currentMaterial.specular=this.parseColor(e)}},{key:\"parse_Ke\",value:function(e){this.currentMaterial.emissive=this.parseColor(e)}},{key:\"parse_Tf\",value:function(e){this.currentMaterial.transmissionFilter=this.parseColor(e)}},{key:\"parse_d\",value:function(e){this.currentMaterial.dissolve=parseFloat(e.pop())}},{key:\"parse_illum\",value:function(e){this.currentMaterial.illumination=parseInt(e[0])}},{key:\"parse_Ni\",value:function(e){this.currentMaterial.refractionIndex=parseFloat(e[0])}},{key:\"parse_Ns\",value:function(e){this.currentMaterial.specularExponent=parseInt(e[0])}},{key:\"parse_sharpness\",value:function(e){this.currentMaterial.sharpness=parseInt(e[0])}},{key:\"parse_cc\",value:function(e,t){t.colorCorrection=\"on\"==e[0]}},{key:\"parse_blendu\",value:function(e,t){t.horizontalBlending=\"on\"==e[0]}},{key:\"parse_blendv\",value:function(e,t){t.verticalBlending=\"on\"==e[0]}},{key:\"parse_boost\",value:function(e,t){t.boostMipMapSharpness=parseFloat(e[0])}},{key:\"parse_mm\",value:function(e,t){t.modifyTextureMap.brightness=parseFloat(e[0]),t.modifyTextureMap.contrast=parseFloat(e[1])}},{key:\"parse_ost\",value:function(e,t,r){for(;e.length<3;)e.push(r);t.u=parseFloat(e[0]),t.v=parseFloat(e[1]),t.w=parseFloat(e[2])}},{key:\"parse_o\",value:function(e,t){this.parse_ost(e,t.offset,0)}},{key:\"parse_s\",value:function(e,t){this.parse_ost(e,t.scale,1)}},{key:\"parse_t\",value:function(e,t){this.parse_ost(e,t.turbulence,0)}},{key:\"parse_texres\",value:function(e,t){t.textureResolution=parseFloat(e[0])}},{key:\"parse_clamp\",value:function(e,t){t.clamp=\"on\"==e[0]}},{key:\"parse_bm\",value:function(e,t){t.bumpMultiplier=parseFloat(e[0])}},{key:\"parse_imfchan\",value:function(e,t){t.imfChan=e[0]}},{key:\"parse_type\",value:function(e,t){t.reflectionType=e[0]}},{key:\"parseOptions\",value:function(e){var t={colorCorrection:!1,horizontalBlending:!0,verticalBlending:!0,boostMipMapSharpness:0,modifyTextureMap:{brightness:0,contrast:1},offset:{u:0,v:0,w:0},scale:{u:1,v:1,w:1},turbulence:{u:0,v:0,w:0},clamp:!1,textureResolution:null,bumpMultiplier:1,imfChan:null},r=void 0,a=void 0,n={};for(e.reverse();e.length;){var i=e.pop();i.startsWith(\"-\")?(r=i.substr(1),n[r]=[]):n[r].push(i)}for(r in n)if(n.hasOwnProperty(r)){a=n[r];var s=this[\"parse_\"+r];s&&s.bind(this)(a,t)}return t}},{key:\"parseMap\",value:function(e){var t=void 0,a=void 0;if(e[0].startsWith(\"-\"))t=e.pop(),a=e;else{var n=r(e);t=n[0],a=n.slice(1)}return a=this.parseOptions(a),a.filename=t,a}},{key:\"parse_map_Ka\",value:function(e){this.currentMaterial.mapAmbient=this.parseMap(e)}},{key:\"parse_map_Kd\",value:function(e){this.currentMaterial.mapDiffuse=this.parseMap(e)}},{key:\"parse_map_Ks\",value:function(e){this.currentMaterial.mapSpecular=this.parseMap(e)}},{key:\"parse_map_Ke\",value:function(e){this.currentMaterial.mapEmissive=this.parseMap(e)}},{key:\"parse_map_Ns\",value:function(e){this.currentMaterial.mapSpecularExponent=this.parseMap(e)}},{key:\"parse_map_d\",value:function(e){this.currentMaterial.mapDissolve=this.parseMap(e)}},{key:\"parse_map_aat\",value:function(e){this.currentMaterial.antiAliasing=\"on\"==e[0]}},{key:\"parse_map_bump\",value:function(e){this.currentMaterial.mapBump=this.parseMap(e)}},{key:\"parse_bump\",value:function(e){this.parse_map_bump(e)}},{key:\"parse_disp\",value:function(e){this.currentMaterial.mapDisplacement=this.parseMap(e)}},{key:\"parse_decal\",value:function(e){this.currentMaterial.mapDecal=this.parseMap(e)}},{key:\"parse_refl\",value:function(e){this.currentMaterial.mapReflections.push(this.parseMap(e))}},{key:\"parse\",value:function(){var e=this.data.split(/\\r?\\n/),t=!0,a=!1,n=void 0;try{for(var i,s=e[Symbol.iterator]();!(t=(i=s.next()).done);t=!0){var l=i.value;if((l=l.trim())&&!l.startsWith(\"#\")){var o=l.split(/\\s/),u=void 0,c=o,f=r(c);u=f[0],o=f.slice(1);var h=this[\"parse_\"+u];h&&h.bind(this)(o)}}}catch(e){a=!0,n=e}finally{try{!t&&s.return&&s.return()}finally{if(a)throw n}}delete this.data,this.currentMaterial=null}}]),e}()},function(e,exports,t){e.exports=t(4)},function(e,exports,t){\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.version=exports.deleteMeshBuffers=exports.initMeshBuffers=exports.downloadMeshes=exports.downloadModels=exports.Layout=exports.MaterialLibrary=exports.Material=exports.Mesh=void 0;var r=t(1),a=function(e){return e&&e.__esModule?e:{default:e}}(r),n=t(2),i=t(0),s=t(5);exports.Mesh=a.default,exports.Material=n.Material,exports.MaterialLibrary=n.MaterialLibrary,exports.Layout=i.Layout,exports.downloadModels=s.downloadModels,exports.downloadMeshes=s.downloadMeshes,exports.initMeshBuffers=s.initMeshBuffers,exports.deleteMeshBuffers=s.deleteMeshBuffers,exports.version=\"1.1.3\"},function(e,exports,t){\"use strict\";function r(e,t){var r=[\"mapDiffuse\",\"mapAmbient\",\"mapSpecular\",\"mapDissolve\",\"mapBump\",\"mapDisplacement\",\"mapDecal\",\"mapEmissive\"];t.endsWith(\"/\")||(t+=\"/\");var a=[];for(var n in e.materials)if(e.materials.hasOwnProperty(n)){n=e.materials[n];var i=!0,s=!1,l=void 0;try{for(var o,u=r[Symbol.iterator]();!(i=(o=u.next()).done);i=!0){var c=o.value;(function(e){var r=n[e];if(!r)return\"continue\";var i=t+r.filename;a.push(fetch(i).then(function(e){if(!e.ok)throw new Error;return e.blob()}).then(function(e){var t=new Image;return t.src=URL.createObjectURL(e),r.texture=t,new Promise(function(e){return t.onload=e})}).catch(function(){}))})(c)}}catch(e){s=!0,l=e}finally{try{!i&&u.return&&u.return()}finally{if(s)throw l}}}return Promise.all(a)}function a(e){var t=[],a=!0,n=!1,i=void 0;try{for(var s,o=e[Symbol.iterator]();!(a=(s=o.next()).done);a=!0){var f=s.value;!function(e){var a=[];if(!e.obj)throw new Error('\"obj\" attribute of model object not set. The .obj file is required to be set in order to use downloadModels()');var n={};n.indicesPerMaterial=!!e.indicesPerMaterial,n.calcTangentsAndBitangents=!!e.calcTangentsAndBitangents;var i=e.name;if(!i){var s=e.obj.split(\"/\");i=s[s.length-1].replace(\".obj\",\"\")}if(a.push(Promise.resolve(i)),a.push(fetch(e.obj).then(function(e){return e.text()}).then(function(e){return new u.default(e,n)})),e.mtl){var l=e.mtl;\"boolean\"==typeof l&&(l=e.obj.replace(/\\.obj$/,\".mtl\")),a.push(fetch(l).then(function(e){return e.text()}).then(function(t){var a=new c.MaterialLibrary(t);if(!1!==e.downloadMtlTextures){var n=e.mtlTextureRoot;return n||(n=l.substr(0,l.lastIndexOf(\"/\"))),Promise.all([Promise.resolve(a),r(a,n)])}return Promise.all(Promise.resolve(a))}).then(function(e){return e[0]}))}t.push(Promise.all(a))}(f)}}catch(e){n=!0,i=e}finally{try{!a&&o.return&&o.return()}finally{if(n)throw i}}return Promise.all(t).then(function(e){var t={},r=!0,a=!1,n=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done);r=!0){var o=i.value,u=l(o,3),c=u[0],f=u[1],h=u[2];f.name=c,h&&f.addMaterialLibrary(h),t[c]=f}}catch(e){a=!0,n=e}finally{try{!r&&s.return&&s.return()}finally{if(a)throw n}}return t})}function n(e,t,r){void 0===r&&(r={});var a=[];for(var n in e){(function(t){if(!e.hasOwnProperty(t))return\"continue\";var r=e[t];a.push(fetch(r).then(function(e){return e.text()}).then(function(e){return[t,new u.default(e)]}))})(n)}Promise.all(a).then(function(e){var a=!0,n=!1,i=void 0;try{for(var s,o=e[Symbol.iterator]();!(a=(s=o.next()).done);a=!0){var u=s.value,c=l(u,2),f=c[0],h=c[1];r[f]=h}}catch(e){n=!0,i=e}finally{try{!a&&o.return&&o.return()}finally{if(n)throw i}}return t(r)})}function i(e,t){t.normalBuffer=f(e,e.ARRAY_BUFFER,t.vertexNormals,3),t.textureBuffer=f(e,e.ARRAY_BUFFER,t.textures,t.textureStride),t.vertexBuffer=f(e,e.ARRAY_BUFFER,t.vertices,3),t.indexBuffer=f(e,e.ELEMENT_ARRAY_BUFFER,t.indices,1)}function s(e,t){e.deleteBuffer(t.normalBuffer),e.deleteBuffer(t.textureBuffer),e.deleteBuffer(t.vertexBuffer),e.deleteBuffer(t.indexBuffer)}Object.defineProperty(exports,\"__esModule\",{value:!0});var l=function(){function e(e,t){var r=[],a=!0,n=!1,i=void 0;try{for(var s,l=e[Symbol.iterator]();!(a=(s=l.next()).done)&&(r.push(s.value),!t||r.length!==t);a=!0);}catch(e){n=!0,i=e}finally{try{!a&&l.return&&l.return()}finally{if(n)throw i}}return r}return function(t,r){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,r);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}();exports.downloadModels=a,exports.downloadMeshes=n,exports.initMeshBuffers=i,exports.deleteMeshBuffers=s;var o=t(1),u=function(e){return e&&e.__esModule?e:{default:e}}(o),c=t(2),f=(t(0),function(e,t,r,a){var n=e.createBuffer(),i=t===e.ARRAY_BUFFER?Float32Array:Uint16Array;return e.bindBuffer(t,n),e.bufferData(t,new i(r),e.STATIC_DRAW),n.itemSize=a,n.numItems=r.length/a,n})}])});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","__webpack_require__.p = \"./\";","/*\r\n * Copyright 2010, Google Inc.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *     * Redistributions of source code must retain the above copyright\r\n * notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above\r\n * copyright notice, this list of conditions and the following disclaimer\r\n * in the documentation and/or other materials provided with the\r\n * distribution.\r\n *     * Neither the name of Google Inc. nor the names of its\r\n * contributors may be used to endorse or promote products derived from\r\n * this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n\r\n/**\r\n * @fileoverview This file contains functions every webgl program will need\r\n * a version of one way or another.\r\n *\r\n * Instead of setting up a context manually it is recommended to\r\n * use. This will check for success or failure. On failure it\r\n * will attempt to present an approriate message to the user.\r\n *\r\n *       gl = WebGLUtils.setupWebGL(canvas);\r\n *\r\n * For animated WebGL apps use of setTimeout or setInterval are\r\n * discouraged. It is recommended you structure your rendering\r\n * loop like this.\r\n *\r\n *       function render() {\r\n *         window.requestAnimationFrame(render, canvas);\r\n *\r\n *         // do rendering\r\n *         ...\r\n *       }\r\n *       render();\r\n *\r\n * This will call your rendering function up to the refresh rate\r\n * of your display but will stop rendering if your app is not\r\n * visible.\r\n */\r\n\r\n/**\r\n * Creates the HTLM for a failure message\r\n * @param {string} canvasContainerId id of container of th\r\n *        canvas.\r\n * @return {string} The html.\r\n */\r\nconst makeFailHTML = (msg) => `${''\r\n      + '<div style=\"margin: auto; width:500px;z-index:10000;margin-top:20em;text-align:center;\">'}${msg}</div>`;\r\n\r\n/**\r\n* Mesasge for getting a webgl browser\r\n* @type {string}\r\n*/\r\nconst GET_A_WEBGL_BROWSER = ''\r\n  + 'This page requires a browser that supports WebGL.<br/>'\r\n  + '<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>';\r\n\r\n/**\r\n* Mesasge for need better hardware\r\n* @type {string}\r\n*/\r\nconst OTHER_PROBLEM = ''\r\n  + \"It doesn't appear your computer can support WebGL.<br/>\"\r\n  + '<a href=\"http://get.webgl.org\">Click here for more information.</a>';\r\n\r\n/**\r\n * Creates a webgl context.\r\n * @param {!Canvas} canvas The canvas tag to get context\r\n *     from. If one is not passed in one will be created.\r\n * @return {!WebGLContext} The created context.\r\n */\r\nconst create3DContext = (canvas, optAttribs) => {\r\n  const names = ['webgl2', 'experimental-webgl', 'webkit-3d', 'moz-webgl'];\r\n  let context = null;\r\n  for (let ii = 0; ii < names.length; ii += 1) {\r\n    try {\r\n      context = canvas.getContext(names[ii], optAttribs);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    if (context) {\r\n      break;\r\n    }\r\n  }\r\n  return context;\r\n};\r\n\r\n/**\r\n * Creates a webgl context. If creation fails it will\r\n * change the contents of the container of the <canvas>\r\n * tag to an error message with the correct links for WebGL.\r\n * @param {Element} canvas. The canvas element to create a\r\n *     context from.\r\n * @param {WebGLContextCreationAttirbutes} optAttribs Any\r\n *     creation attributes you want to pass in.\r\n * @param {function:(msg)} optOnError An function to call\r\n *     if there is an error during creation.\r\n * @return {WebGLRenderingContext} The created context.\r\n */\r\nfunction handleCreationError(msg) {\r\n  const container = document.getElementsByTagName('body')[0];\r\n  // var container = canvas.parentNode;\r\n  if (container) {\r\n    let str = window.WebGLRenderingContext\r\n      ? OTHER_PROBLEM\r\n      : GET_A_WEBGL_BROWSER;\r\n    if (msg) {\r\n      str += `<br/><br/>Status: ${msg}`;\r\n    }\r\n    container.innerHTML = makeFailHTML(str);\r\n  }\r\n}\r\n\r\nconst setupWebGL = (canvas, optAttribs, optOnError) => {\r\n  const errorHandler = optOnError || handleCreationError;\r\n\r\n  if (canvas.addEventListener) {\r\n    canvas.addEventListener('webglcontextcreationerror', (event) => {\r\n      errorHandler(event.statusMessage);\r\n    }, false);\r\n  }\r\n  const context = create3DContext(canvas, optAttribs);\r\n  if (!context) {\r\n    if (!window.WebGLRenderingContext) {\r\n      errorHandler('');\r\n    } else {\r\n      errorHandler('');\r\n    }\r\n  }\r\n  return context;\r\n};\r\n\r\n/**\r\n * Provides requestAnimationFrame in a cross browser\r\n * way.\r\n */\r\nif (!window.requestAnimationFrame) {\r\n  window.requestAnimationFrame = (function () {\r\n    return window.requestAnimationFrame\r\n           || window.webkitRequestAnimationFrame\r\n           || window.mozRequestAnimationFrame\r\n           || window.oRequestAnimationFrame\r\n           || window.msRequestAnimationFrame\r\n           || function (/* function FrameRequestCallback */ callback) {\r\n             window.setTimeout(callback, 1000 / 60);\r\n           };\r\n  }());\r\n}\r\n\r\n/** * ERRATA: 'cancelRequestAnimationFrame' renamed to 'cancelAnimationFrame'\r\n *  to reflect an update to the W3C Animation-Timing Spec.\r\n *\r\n * Cancels an animation frame request.\r\n * Checks for cross-browser support, falls back to clearTimeout.\r\n * @param {number}  Animation frame request. */\r\nif (!window.cancelAnimationFrame) {\r\n  window.cancelAnimationFrame = (window.cancelRequestAnimationFrame\r\n                                 || window.webkitCancelAnimationFrame\r\n                                 || window.webkitCancelRequestAnimationFrame\r\n                                 || window.mozCancelAnimationFrame\r\n                                 || window.mozCancelRequestAnimationFrame\r\n                                 || window.msCancelAnimationFrame\r\n                                 || window.msCancelRequestAnimationFrame\r\n                                 || window.oCancelAnimationFrame\r\n                                 || window.oCancelRequestAnimationFrame\r\n                                 || window.clearTimeout);\r\n}\r\n\r\n// cuon-utils.js (c) 2012 kanda and matsuda\r\n/**\r\n * Create a program object and store it in programs\r\n * @param gl GL context\r\n * @param vshader a vertex shader program (string)\r\n * @param fshader a fragment shader program (string)\r\n * @return a WebGL shader program\r\n */\r\nconst createShader = (gl, vshader, fshader, transformFeedbackProperties = null) => {\r\n  const program = createProgram(gl, vshader, fshader, transformFeedbackProperties);\r\n  if (!program) {\r\n    console.log('Failed to create program');\r\n    return null;\r\n  }\r\n\r\n  return program;\r\n};\r\n\r\n/**\r\n * Sets the current shading program used when drawing\r\n * @param gl GL context\r\n * @param program A WebGl shading program\r\n */\r\nconst useShader = (gl, program) => {\r\n  gl.useProgram(program);\r\n  gl.program = program;\r\n};\r\n\r\n/**\r\n * Create the linked program object\r\n * @param gl GL context\r\n * @param vshader a vertex shader program (string)\r\n * @param fshader a fragment shader program (string)\r\n * @return created program object, or null if the creation has failed\r\n */\r\nconst createProgram = (gl, vshader, fshader, transformFeedbackProperties = null) => {\r\n  // Create shader object\r\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vshader);\r\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fshader);\r\n  if (!vertexShader || !fragmentShader) {\r\n    return null;\r\n  }\r\n\r\n  // Create a program object\r\n  const program = gl.createProgram();\r\n  if (!program) {\r\n    return null;\r\n  }\r\n\r\n  // Attach the shader objects\r\n  gl.attachShader(program, vertexShader);\r\n  gl.attachShader(program, fragmentShader);\r\n\r\n  // transform feedback\r\n  if (transformFeedbackProperties != null) {\r\n    gl.transformFeedbackVaryings(\r\n      program,\r\n      transformFeedbackProperties,\r\n      gl.INTERLEAVED_ATTRIBS,\r\n    );\r\n  }\r\n  // Link the program object\r\n  gl.linkProgram(program);\r\n\r\n  // Check the result of linking\r\n  const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n  if (!linked) {\r\n    const error = gl.getProgramInfoLog(program);\r\n    console.log(`Failed to link program: ${error}`);\r\n    gl.deleteProgram(program);\r\n    gl.deleteShader(fragmentShader);\r\n    gl.deleteShader(vertexShader);\r\n    return null;\r\n  }\r\n  return program;\r\n};\r\n\r\n/**\r\n * Create a shader object\r\n * @param gl GL context\r\n * @param type the type of the shader object to be created\r\n * @param source shader program (string)\r\n * @return created shader object, or null if the creation has failed.\r\n */\r\nconst loadShader = (gl, type, source) => {\r\n  // Create shader object\r\n  const shader = gl.createShader(type);\r\n  if (shader == null) {\r\n    console.log('unable to create shader');\r\n    return null;\r\n  }\r\n\r\n  // Set the shader program\r\n  gl.shaderSource(shader, source);\r\n\r\n  // Compile the shader\r\n  gl.compileShader(shader);\r\n\r\n  // Check the result of compilation\r\n  const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n  if (!compiled) {\r\n    const error = gl.getShaderInfoLog(shader);\r\n    console.log(`Failed to compile shader: ${error}`);\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n\r\n  return shader;\r\n};\r\n\r\n/**\r\n * Initialize and get the rendering for WebGL\r\n * @param canvas <cavnas> element\r\n * @param opt_debug flag to initialize the context for debugging\r\n * @return the rendering context for WebGL\r\n */\r\nconst getWebGLContext = (canvas, opt_debug = false) => {\r\n  // Get the rendering context for WebGL\r\n  let gl = setupWebGL(canvas);\r\n  if (!gl) return null;\r\n\r\n  return gl;\r\n};\r\n\r\nexport {\r\n  getWebGLContext,\r\n  setupWebGL,\r\n  create3DContext,\r\n  loadShader,\r\n  useShader,\r\n  createProgram,\r\n  createShader,\r\n}\r\n","/**\n * Sends a WebGL 2D texture object (created by load2DTexture) and sends it to\n * the shaders.\n *\n * @param gl The WebGl context\n * @param val The WebGL 2D texture object being passed\n * @param {Number} textureUnit The texture unit (0 - 7) where the texture will reside\n * @param {String} uniformName The name of the uniform variable where the texture's\n * textureUnit location (0 - 7) will reside\n */\nexport function send2DTextureToGLSL(gl, val, textureUnit, uniformName) {\n  // Recomendations: Within this funciton, you should:\n  //    1. Gather your uniform location\n  //    2. Determine the exture unit you will be using (gl.TEXTURE\"N\")\n  //    3. Activate your texture unit using gl.activeTexture\n  //    4. Bind your texture using gl.bindTexture\n  //    5. Send the texture unit (textureUnit not the one you found) to your\n  //       uniform location.\n\n  let loc = gl.getUniformLocation(gl.program, uniformName);\n  if (!loc) {\n    console.log('Failed to get the storage location of ' + uniformName);\n    return false;\n  }\n\n  // Set the texture unit to the sampler\n  gl.uniform1i(loc, textureUnit);\n\n  // Enable texture unit\n  gl.activeTexture(gl.TEXTURE0 + textureUnit);\n\n  // Bind the texture object to the target\n  gl.bindTexture(gl.TEXTURE_2D, val);\n}\n\n/**\n * Sends a WebGL 2D texture object (created by load2DTexture) and sends it to\n * the shaders.\n *\n * @param gl The WebGl context\n * @param val The WebGL 2D texture object being passed\n * @param {Number} textureUnit The texture unit (0 - 7) where the texture will reside\n * @param {String} uniformName The name of the uniform variable where the texture's\n * textureUnit location (0 - 7) will reside\n */\nexport function sendCubemapToGLSL(gl, val, textureUnit, uniformName) {\n  let loc = gl.getUniformLocation(gl.program, uniformName);\n  if (!loc) {\n    console.log('Failed to get the storage location of' + uniformName);\n    return false;\n  }\n\n  // Set the texture unit to the sampler\n  gl.uniform1i(loc, textureUnit);\n\n  // Enable texture unit\n  gl.activeTexture(gl.TEXTURE0 + textureUnit);\n\n  // Bind the texture object to the target\n  gl.bindTexture(gl.TEXTURE_CUBE_MAP, val);\n}\n\n/**\n * Creates a WebGl 2D texture object.\n *\n * @param gl The WebGl context\n * @param imgPath A file path/data url containing the location of the texture image\n * @param magParam texParameteri for gl.TEXTURE_MAG_FILTER. Can be gl.NEAREST,\n * gl.LINEAR, etc.\n * @param minParam texParameteri for gl.TEXTURE_MIN_FILTER. Can be gl.NEAREST,\n * gl.LINEAR, etc.\n * @param wrapSParam texParameteri for gl.TEXTURE_WRAP_S. Can be gl.REPEAT,\n * gl. MIRRORED_REPEAT, or gl.CLAMP_TO_EDGE.\n * @param wrapTParam texParameteri for gl.TEXTURE_WRAP_S. Can be gl.REPEAT,\n * gl. MIRRORED_REPEAT, or gl.CLAMP_TO_EDGE.\n * @param callback A callback function which executes with the completed texture\n * object passed as a parameter.\n */\nexport function create2DTexture(gl, image, magParam, minParam, wrapSParam, wrapTParam) {\n  // Recomendations: This function should see you creating an Image object,\n  // setting that image object's \".onload\" to an anonymous function containing\n  // the rest of your code, and setting that image object's \".src\" to imgPath.\n  //\n  // Within the anonymous function:\n  //  1. create a texture object by saving the result of gl.createTexture()\n  //  2. Flip your image's y-axis and bind your texture object to gl.TEXTURE_2D\n  //  3. Using multiple calls to gl.texParameteri, pass magParam, minParam,\n  //     wrapSParam, and wrapTParam.\n  //  4. Set the texture's image to the loaded image using gl.texImage2D\n  //  5. Pass your completed texture object to your callback function\n  //\n  // NOTE: This function should not return anything.\n  \n  if (!image) {\n    console.log('Failed to create the image object');\n    return null;\n  }\n  let texture = gl.createTexture();   // Create a texture object\n  if (!texture) {\n    console.log('Failed to create the texture object');\n    return null;\n  }\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minParam);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magParam);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapSParam);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapTParam);\n  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, image.width, image.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  \n  return texture;\n}\n\n/**\n * Creates a WebGl cubemap texture object.\n *\n * @param gl The WebGl context\n * @param imgPath A file path/data url containing the location of the texture image\n * @param imageFormat Image format, such as jpg, png, bmp.\n * @param magParam texParameteri for gl.TEXTURE_MAG_FILTER. Can be gl.NEAREST,\n * gl.LINEAR, etc.\n * @param minParam texParameteri for gl.TEXTURE_MIN_FILTER. Can be gl.NEAREST,\n * gl.LINEAR, etc.\n * @param wrapSParam texParameteri for gl.TEXTURE_WRAP_S. Can be gl.REPEAT,\n * gl. MIRRORED_REPEAT, or gl.CLAMP_TO_EDGE.\n * @param wrapTParam texParameteri for gl.TEXTURE_WRAP_S. Can be gl.REPEAT,\n * gl. MIRRORED_REPEAT, or gl.CLAMP_TO_EDGE.\n * @param callback A callback function which executes with the completed texture\n * object passed as a parameter.\n */\n export function createCubemapTexture(gl, imgPath, imageFormat, magParam, minParam, wrapParam, callback) {\n  var imageList = [\n    imgPath + '/right.' + imageFormat,\n    imgPath + '/left.' + imageFormat,\n    imgPath + '/top.' + imageFormat,\n    imgPath + '/bottom.' + imageFormat,\n    imgPath + '/front.' + imageFormat,\n    imgPath + '/back.' + imageFormat\n  ];\n\n  var faces = [\n    [\"right.\" + imageFormat, gl.TEXTURE_CUBE_MAP_POSITIVE_X],\n    [\"left.\" + imageFormat, gl.TEXTURE_CUBE_MAP_NEGATIVE_X],\n    [\"top.\" + imageFormat, gl.TEXTURE_CUBE_MAP_POSITIVE_Y],\n    [\"bottom.\" + imageFormat, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y],\n    [\"front.\" + imageFormat, gl.TEXTURE_CUBE_MAP_POSITIVE_Z],\n    [\"back.\" + imageFormat, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n  ];\n\n  let texture = gl.createTexture();   // Create a texture object\n  if (!texture) {\n    console.log('Failed to create the texture object');\n    return false;\n  }\n  for (var i = 0; i < faces.length; ++i) {\n    let face = faces[i][1];\n    let imageObj = new Image();  // Create the image object\n    if (!imageObj) {\n      console.log('Failed to create the image object');\n      return false;\n    }\n    imageObj.customData = {texId: texture, imageId: i, faceId: face,\n                          minFilter: minParam, magFilter: magParam,\n                          wrap: wrapParam};\n    // Register the event handler to be called on loading an image\n    imageObj.onload = function(){\n      gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.customData.texId);\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_R, gl.CLAMP_TO_EDGE);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n      gl.texImage2D(this.customData.faceId, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, imageObj);\n      //gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\n      callback(this.customData.texId);\n    };\n    // Tell the browser to load an image\n    imageObj.src = imgPath + '/' + faces[i][0];\n  }\n}\n\nexport function createNullTexture(gl, width, height, internalFormat, format, border, dataType, magParam, minParam, wrapSParam, wrapTParam) {\n  let texture = gl.createTexture();   // Create a texture object\n  if (!texture) {\n    console.log('Failed to create the texture object');\n    return false;\n  }\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, width, height, 0, format, dataType, null);\n  //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minParam);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magParam);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapSParam);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapTParam);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\n\nexport function updateNullTexture(gl, texture, width, height, internalFormat, format, border, dataType, magParam, minParam, wrapSParam, wrapTParam) {\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, width, height, 0, format, dataType, null);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n}\n\nexport function createBufferData(gl, data) {\n  let bufferObj = gl.createBuffer();\n  if (!bufferObj) {\n    console.log('Failed to create the buffer object');\n    return -1;\n  }\n  // Bind the buffer object to target\n  gl.bindBuffer(gl.ARRAY_BUFFER, bufferObj);\n  // Write date into the buffer object\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return bufferObj;\n}\n\nexport function createElementArrayBuffer(gl, data) {\n  let indexBuffer = gl.createBuffer();\n  if (!indexBuffer) {\n    console.log('Failed to create the index buffer.');\n    return -1;\n  }\n  // Bind the buffer object to target\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n  // Write date into the buffer object\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return indexBuffer;\n}\n/**\n * Sends data to an attribute variable using a buffer.\n *\n * @private\n * @param gl The WebGl context\n * @param {Number} buffer buffer object\n * @param {Number} dataCount The amount of data to pass per vertex\n * @param {String} attribName The name of the attribute variable\n * @param {Number} dataType Data type\n * @param {Number} stride The offset in bytes between the beginning of consecutive vertex attributes\n * @param {Number} offset An offset in bytes of the first component in the vertex attribute array\n */\nexport function sendAttributeBufferToGLSL(gl, buffer, dataCount, attribName, dataType = gl.FLOAT, stride = 0, offset = 0) {\n  if (!buffer) {\n    console.log('Invalid buffer object!');\n    return -1;\n  }\n  // Bind the buffer object to target\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n  let attribLoc = gl.getAttribLocation(gl.program, attribName);\n  if (attribLoc < 0) {\n    console.log('Failed to get the storage location of ' + attribName);\n    return -1;\n  }\n  // Enable the assignment to an attribute variable\n  gl.enableVertexAttribArray(attribLoc);\n  // Assign the buffer object to an attribute variable\n  gl.vertexAttribPointer(attribLoc, dataCount, dataType, false, stride, offset);\n  return attribLoc;\n}\n\n/**\n * set indices buffer\n *\n * @private\n * @param gl The WebGl context\n * @param {Uint8Array} indices Data being sent to attribute variable\n */\nexport function setIndexBuffer(gl, indices) {\n// Write the indices to the buffer object\n  let indexBuffer = gl.createBuffer();\n  if (!indexBuffer) {\n    console.log('Failed to create the buffer object');\n    return -1;\n  }\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n}\n/**\n * Draws the current buffer loaded. Buffer was loaded by sendAttributeBufferToGLSL.\n * @param gl The WebGl context\n * @param {Integer} pointCount The amount of indices being drawn from the buffer.\n */\nexport function tellGLSLToDrawCurrentBuffer(gl, pointCount) {\n  // Recommendations: Should only be one line of code.\n  gl.drawElements(gl.TRIANGLES, pointCount, gl.UNSIGNED_SHORT, 0);\n}\n\n/**\n * Draws the current buffer loaded. Buffer was loaded by sendAttributeBufferToGLSL.\n * @param gl The WebGl context\n * @param {Integer} pointCount The amount of vertices being drawn from the buffer.\n */\nexport function tellGLSLToDrawArrays(gl, pointCount) {\n  gl.drawArrays(gl.TRIANGLES, 0, pointCount);\n}\n\n/**\n * Sends a unsigned int value to the specified uniform variable within GLSL shaders.\n * Prints an error message if unsuccessful.\n *\n * @param gl The WebGl context\n * @param {int} val The float value being passed to uniform variable\n * @param {String} uniformName The name of the uniform variable\n */\nexport function sendUniformUintToGLSL(gl, val, uniformName) {\n  let val_loc = gl.getUniformLocation(gl.program, uniformName);\n  if (val_loc < 0) {\n    console.log('Failed to get the storage location of ' + uniformName);\n    return;\n  }\n  gl.uniform1ui(val_loc, val);\n}\n\n/**\n * Sends a float value to the specified uniform variable within GLSL shaders.\n * Prints an error message if unsuccessful.\n *\n * @param gl The WebGl context\n * @param {float} val The float value being passed to uniform variable\n * @param {String} uniformName The name of the uniform variable\n */\nexport function sendUniformFloatToGLSL(gl, val, uniformName) {\n  let val_loc = gl.getUniformLocation(gl.program, uniformName);\n  if (val_loc < 0) {\n    console.log('Failed to get the storage location of ' + uniformName);\n    return;\n  }\n  gl.uniform1f(val_loc, val);\n}\n\n/**\n * Sends an JavaSript array (vector) to the specified uniform variable within\n * GLSL shaders. Array can be of length 4.\n *\n * @param gl The WebGl context\n * @param {Array} val Array (vector) being passed to uniform variable\n * @param {String} uniformName The name of the uniform variable\n */\nexport function sendUniformVec4ToGLSL(gl, val, uniformName) {\n  let val_loc = gl.getUniformLocation(gl.program, uniformName);\n  if (val_loc < 0) {\n    console.log('Failed to get the storage location of ' + uniformName);\n    return;\n  }\n  gl.uniform4f(val_loc, val[0], val[1], val[2], val[3]);\n}\n\n/**\n * Sends an JavaSript array (vector) to the specified uniform variable within\n * GLSL shaders. Array can be of length 3.\n *\n * @param gl The WebGl context\n * @param {Array} val Array (vector) being passed to uniform variable\n * @param {String} uniformName The name of the uniform variable\n */\nexport function sendUniformVec3ToGLSL(gl, val, uniformName) {\n  let val_loc = gl.getUniformLocation(gl.program, uniformName);\n  if (val_loc < 0) {\n    console.log('Failed to get the storage location of ' + uniformName);\n    return;\n  }\n  gl.uniform3f(val_loc, val[0], val[1], val[2]);\n}\n\n/**\n * Sends an JavaSript array (vector) to the specified uniform variable within\n * GLSL shaders. Array can be of length 2.\n *\n * @param gl The WebGl context\n * @param {Array} val Array (vector) being passed to uniform variable\n * @param {String} uniformName The name of the uniform variable\n */\nexport function sendUniformVec2ToGLSL(gl, val, uniformName) {\n  let val_loc = gl.getUniformLocation(gl.program, uniformName);\n  if (val_loc < 0) {\n    console.log('Failed to get the storage location of ' + uniformName);\n    return;\n  }\n  gl.uniform2f(val_loc, val[0], val[1]);\n}\n\n/**\n * Sends data to a uniform variable expecting a matrix value.\n *\n * @private\n * @param gl The WebGl context\n * @param {Array} val Value being sent to uniform variable\n * @param {String} uniformName Name of the uniform variable recieving data\n */\nexport function sendUniformMat4ToGLSL(gl, val, uniformName) {\n   let val_loc = gl.getUniformLocation(gl.program, uniformName);\n   if (val_loc < 0) {\n     console.log('Failed to get the storage location of ' + uniformName);\n     return;\n   }\n   gl.uniformMatrix4fv(val_loc, false, val.elements);\n}\n","/**\n * Specifies a material object.\n *\n * @author \"Xiaoxuan Zhang\"\n * @this {Material}\n */\nclass Material {\n  /**\n   * Constructor for Material.\n   *\n   * @constructor\n   */\n  constructor({uniforms=null, shaders=null}) {\n    this.uniforms = uniforms;\n    this.shaderProgram = null;\n    this.shaders = shaders;\n    this.textureUnit = {}; //keep track of texture unit\n    this.textureUnitCount = 0;\n  }\n\n  setProgram(program) {\n    this.shaderProgram = program;\n  }\n  \n  getTextureUnit(name) {\n    if (!(name in this.textureUnit)) {\n      this.textureUnit[name] = this.textureUnitCount;\n      this.textureUnitCount++;\n    }\n    return this.textureUnit[name];\n  }\n\n}\n\nexport default Material;\n","// cuon-matrix.js (c) 2012 kanda and matsuda\r\n/**\r\n * This is a class treating 4x4 matrix.\r\n * This class contains the function that is equivalent to OpenGL matrix stack.\r\n * The matrix after conversion is calculated by multiplying a conversion matrix from the right.\r\n * The matrix is replaced by the calculated result.\r\n */\r\n\r\n/**\r\n * Constructor of Matrix4\r\n * If opt_src is specified, new matrix is initialized by opt_src.\r\n * Otherwise, new matrix is initialized by identity matrix.\r\n * @param opt_src source matrix(option)\r\n */\r\nvar Matrix4 = function(opt_src) {\r\n  var i, s, d;\r\n  if (opt_src && typeof opt_src === 'object' && Object.prototype.hasOwnProperty.call(opt_src, \"elements\")) {\r\n    s = opt_src.elements;\r\n    d = new Float32Array(16);\r\n    for (i = 0; i < 16; ++i) {\r\n      d[i] = s[i];\r\n    }\r\n    this.elements = d;\r\n  } else {\r\n    this.elements = new Float32Array([1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1]);\r\n  }\r\n};\r\n\r\n/**\r\n * Set the identity matrix.\r\n * @return this\r\n */\r\nMatrix4.prototype.setIdentity = function() {\r\n  var e = this.elements;\r\n  e[0] = 1;   e[4] = 0;   e[8]  = 0;   e[12] = 0;\r\n  e[1] = 0;   e[5] = 1;   e[9]  = 0;   e[13] = 0;\r\n  e[2] = 0;   e[6] = 0;   e[10] = 1;   e[14] = 0;\r\n  e[3] = 0;   e[7] = 0;   e[11] = 0;   e[15] = 1;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Copy matrix.\r\n * @param src source matrix\r\n * @return this\r\n */\r\nMatrix4.prototype.set = function(src) {\r\n  var i, s, d;\r\n\r\n  s = src.elements;\r\n  d = this.elements;\r\n\r\n  if (s === d) {\r\n    return;\r\n  }\r\n\r\n  for (i = 0; i < 16; ++i) {\r\n    d[i] = s[i];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the matrix from the right.\r\n * @param other The multiply matrix\r\n * @return this\r\n */\r\nMatrix4.prototype.concat = function(other) {\r\n  var i, e, a, b, ai0, ai1, ai2, ai3;\r\n\r\n  // Calculate e = a * b\r\n  e = this.elements;\r\n  a = this.elements;\r\n  b = other.elements;\r\n\r\n  // If e equals b, copy b to temporary matrix.\r\n  if (e === b) {\r\n    b = new Float32Array(16);\r\n    for (i = 0; i < 16; ++i) {\r\n      b[i] = e[i];\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < 4; i++) {\r\n    ai0=a[i];  ai1=a[i+4];  ai2=a[i+8];  ai3=a[i+12];\r\n    e[i]    = ai0 * b[0]  + ai1 * b[1]  + ai2 * b[2]  + ai3 * b[3];\r\n    e[i+4]  = ai0 * b[4]  + ai1 * b[5]  + ai2 * b[6]  + ai3 * b[7];\r\n    e[i+8]  = ai0 * b[8]  + ai1 * b[9]  + ai2 * b[10] + ai3 * b[11];\r\n    e[i+12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n  }\r\n\r\n  return this;\r\n};\r\nMatrix4.prototype.multiply = Matrix4.prototype.concat;\r\n\r\n/**\r\n * Multiply the three-dimensional vector.\r\n * @param pos  The multiply vector\r\n * @return The result of multiplication(Float32Array)\r\n */\r\nMatrix4.prototype.multiplyVector3 = function(pos) {\r\n  var e = this.elements;\r\n  var p = pos.elements;\r\n  var v = new Vector3();\r\n  var result = v.elements;\r\n\r\n  result[0] = p[0] * e[0] + p[1] * e[4] + p[2] * e[ 8] + e[12];\r\n  result[1] = p[0] * e[1] + p[1] * e[5] + p[2] * e[ 9] + e[13];\r\n  result[2] = p[0] * e[2] + p[1] * e[6] + p[2] * e[10] + e[14];\r\n\r\n  return v;\r\n};\r\n\r\n/**\r\n * Multiply the four-dimensional vector.\r\n * @param pos  The multiply vector\r\n * @return The result of multiplication(Float32Array)\r\n */\r\nMatrix4.prototype.multiplyVector4 = function(pos) {\r\n  var e = this.elements;\r\n  var p = pos.elements;\r\n  var v = new Vector4();\r\n  var result = v.elements;\r\n\r\n  result[0] = p[0] * e[0] + p[1] * e[4] + p[2] * e[ 8] + p[3] * e[12];\r\n  result[1] = p[0] * e[1] + p[1] * e[5] + p[2] * e[ 9] + p[3] * e[13];\r\n  result[2] = p[0] * e[2] + p[1] * e[6] + p[2] * e[10] + p[3] * e[14];\r\n  result[3] = p[0] * e[3] + p[1] * e[7] + p[2] * e[11] + p[3] * e[15];\r\n\r\n  return v;\r\n};\r\n\r\n/**\r\n * Transpose the matrix.\r\n * @return this\r\n */\r\nMatrix4.prototype.transpose = function() {\r\n  var e, t;\r\n\r\n  e = this.elements;\r\n\r\n  t = e[ 1];  e[ 1] = e[ 4];  e[ 4] = t;\r\n  t = e[ 2];  e[ 2] = e[ 8];  e[ 8] = t;\r\n  t = e[ 3];  e[ 3] = e[12];  e[12] = t;\r\n  t = e[ 6];  e[ 6] = e[ 9];  e[ 9] = t;\r\n  t = e[ 7];  e[ 7] = e[13];  e[13] = t;\r\n  t = e[11];  e[11] = e[14];  e[14] = t;\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Calculate the inverse matrix of specified matrix, and set to this.\r\n * @param other The source matrix\r\n * @return this\r\n */\r\nMatrix4.prototype.setInverseOf = function(other) {\r\n  var i, s, d, inv, det;\r\n\r\n  s = other.elements;\r\n  d = this.elements;\r\n  inv = new Float32Array(16);\r\n\r\n  inv[0]  =   s[5]*s[10]*s[15] - s[5] *s[11]*s[14] - s[9] *s[6]*s[15]\r\n            + s[9]*s[7] *s[14] + s[13]*s[6] *s[11] - s[13]*s[7]*s[10];\r\n  inv[4]  = - s[4]*s[10]*s[15] + s[4] *s[11]*s[14] + s[8] *s[6]*s[15]\r\n            - s[8]*s[7] *s[14] - s[12]*s[6] *s[11] + s[12]*s[7]*s[10];\r\n  inv[8]  =   s[4]*s[9] *s[15] - s[4] *s[11]*s[13] - s[8] *s[5]*s[15]\r\n            + s[8]*s[7] *s[13] + s[12]*s[5] *s[11] - s[12]*s[7]*s[9];\r\n  inv[12] = - s[4]*s[9] *s[14] + s[4] *s[10]*s[13] + s[8] *s[5]*s[14]\r\n            - s[8]*s[6] *s[13] - s[12]*s[5] *s[10] + s[12]*s[6]*s[9];\r\n\r\n  inv[1]  = - s[1]*s[10]*s[15] + s[1] *s[11]*s[14] + s[9] *s[2]*s[15]\r\n            - s[9]*s[3] *s[14] - s[13]*s[2] *s[11] + s[13]*s[3]*s[10];\r\n  inv[5]  =   s[0]*s[10]*s[15] - s[0] *s[11]*s[14] - s[8] *s[2]*s[15]\r\n            + s[8]*s[3] *s[14] + s[12]*s[2] *s[11] - s[12]*s[3]*s[10];\r\n  inv[9]  = - s[0]*s[9] *s[15] + s[0] *s[11]*s[13] + s[8] *s[1]*s[15]\r\n            - s[8]*s[3] *s[13] - s[12]*s[1] *s[11] + s[12]*s[3]*s[9];\r\n  inv[13] =   s[0]*s[9] *s[14] - s[0] *s[10]*s[13] - s[8] *s[1]*s[14]\r\n            + s[8]*s[2] *s[13] + s[12]*s[1] *s[10] - s[12]*s[2]*s[9];\r\n\r\n  inv[2]  =   s[1]*s[6]*s[15] - s[1] *s[7]*s[14] - s[5] *s[2]*s[15]\r\n            + s[5]*s[3]*s[14] + s[13]*s[2]*s[7]  - s[13]*s[3]*s[6];\r\n  inv[6]  = - s[0]*s[6]*s[15] + s[0] *s[7]*s[14] + s[4] *s[2]*s[15]\r\n            - s[4]*s[3]*s[14] - s[12]*s[2]*s[7]  + s[12]*s[3]*s[6];\r\n  inv[10] =   s[0]*s[5]*s[15] - s[0] *s[7]*s[13] - s[4] *s[1]*s[15]\r\n            + s[4]*s[3]*s[13] + s[12]*s[1]*s[7]  - s[12]*s[3]*s[5];\r\n  inv[14] = - s[0]*s[5]*s[14] + s[0] *s[6]*s[13] + s[4] *s[1]*s[14]\r\n            - s[4]*s[2]*s[13] - s[12]*s[1]*s[6]  + s[12]*s[2]*s[5];\r\n\r\n  inv[3]  = - s[1]*s[6]*s[11] + s[1]*s[7]*s[10] + s[5]*s[2]*s[11]\r\n            - s[5]*s[3]*s[10] - s[9]*s[2]*s[7]  + s[9]*s[3]*s[6];\r\n  inv[7]  =   s[0]*s[6]*s[11] - s[0]*s[7]*s[10] - s[4]*s[2]*s[11]\r\n            + s[4]*s[3]*s[10] + s[8]*s[2]*s[7]  - s[8]*s[3]*s[6];\r\n  inv[11] = - s[0]*s[5]*s[11] + s[0]*s[7]*s[9]  + s[4]*s[1]*s[11]\r\n            - s[4]*s[3]*s[9]  - s[8]*s[1]*s[7]  + s[8]*s[3]*s[5];\r\n  inv[15] =   s[0]*s[5]*s[10] - s[0]*s[6]*s[9]  - s[4]*s[1]*s[10]\r\n            + s[4]*s[2]*s[9]  + s[8]*s[1]*s[6]  - s[8]*s[2]*s[5];\r\n\r\n  det = s[0]*inv[0] + s[1]*inv[4] + s[2]*inv[8] + s[3]*inv[12];\r\n  if (det === 0) {\r\n    return this;\r\n  }\r\n\r\n  det = 1 / det;\r\n  for (i = 0; i < 16; i++) {\r\n    d[i] = inv[i] * det;\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Calculate the inverse matrix of this, and set to this.\r\n * @return this\r\n */\r\nMatrix4.prototype.invert = function() {\r\n  return this.setInverseOf(this);\r\n};\r\n\r\n/**\r\n * Set the orthographic projection matrix.\r\n * @param left The coordinate of the left of clipping plane.\r\n * @param right The coordinate of the right of clipping plane.\r\n * @param bottom The coordinate of the bottom of clipping plane.\r\n * @param top The coordinate of the top top clipping plane.\r\n * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n * @return this\r\n */\r\nMatrix4.prototype.setOrtho = function(left, right, bottom, top, near, far) {\r\n  var e, rw, rh, rd;\r\n\r\n  if (left === right || bottom === top || near === far) {\r\n    throw 'null frustum';\r\n  }\r\n\r\n  rw = 1 / (right - left);\r\n  rh = 1 / (top - bottom);\r\n  rd = 1 / (far - near);\r\n\r\n  e = this.elements;\r\n\r\n  e[0]  = 2 * rw;\r\n  e[1]  = 0;\r\n  e[2]  = 0;\r\n  e[3]  = 0;\r\n\r\n  e[4]  = 0;\r\n  e[5]  = 2 * rh;\r\n  e[6]  = 0;\r\n  e[7]  = 0;\r\n\r\n  e[8]  = 0;\r\n  e[9]  = 0;\r\n  e[10] = -2 * rd;\r\n  e[11] = 0;\r\n\r\n  e[12] = -(right + left) * rw;\r\n  e[13] = -(top + bottom) * rh;\r\n  e[14] = -(far + near) * rd;\r\n  e[15] = 1;\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the orthographic projection matrix from the right.\r\n * @param left The coordinate of the left of clipping plane.\r\n * @param right The coordinate of the right of clipping plane.\r\n * @param bottom The coordinate of the bottom of clipping plane.\r\n * @param top The coordinate of the top top clipping plane.\r\n * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n * @return this\r\n */\r\nMatrix4.prototype.ortho = function(left, right, bottom, top, near, far) {\r\n  return this.concat(new Matrix4().setOrtho(left, right, bottom, top, near, far));\r\n};\r\n\r\n/**\r\n * Set the perspective projection matrix.\r\n * @param left The coordinate of the left of clipping plane.\r\n * @param right The coordinate of the right of clipping plane.\r\n * @param bottom The coordinate of the bottom of clipping plane.\r\n * @param top The coordinate of the top top clipping plane.\r\n * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n * @return this\r\n */\r\nMatrix4.prototype.setFrustum = function(left, right, bottom, top, near, far) {\r\n  var e, rw, rh, rd;\r\n\r\n  if (left === right || top === bottom || near === far) {\r\n    throw 'null frustum';\r\n  }\r\n  if (near <= 0) {\r\n    throw 'near <= 0';\r\n  }\r\n  if (far <= 0) {\r\n    throw 'far <= 0';\r\n  }\r\n\r\n  rw = 1 / (right - left);\r\n  rh = 1 / (top - bottom);\r\n  rd = 1 / (far - near);\r\n\r\n  e = this.elements;\r\n\r\n  e[ 0] = 2 * near * rw;\r\n  e[ 1] = 0;\r\n  e[ 2] = 0;\r\n  e[ 3] = 0;\r\n\r\n  e[ 4] = 0;\r\n  e[ 5] = 2 * near * rh;\r\n  e[ 6] = 0;\r\n  e[ 7] = 0;\r\n\r\n  e[ 8] = (right + left) * rw;\r\n  e[ 9] = (top + bottom) * rh;\r\n  e[10] = -(far + near) * rd;\r\n  e[11] = -1;\r\n\r\n  e[12] = 0;\r\n  e[13] = 0;\r\n  e[14] = -2 * near * far * rd;\r\n  e[15] = 0;\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the perspective projection matrix from the right.\r\n * @param left The coordinate of the left of clipping plane.\r\n * @param right The coordinate of the right of clipping plane.\r\n * @param bottom The coordinate of the bottom of clipping plane.\r\n * @param top The coordinate of the top top clipping plane.\r\n * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n * @return this\r\n */\r\nMatrix4.prototype.frustum = function(left, right, bottom, top, near, far) {\r\n  return this.concat(new Matrix4().setFrustum(left, right, bottom, top, near, far));\r\n};\r\n\r\n/**\r\n * Set the perspective projection matrix by fovy and aspect.\r\n * @param fovy The angle between the upper and lower sides of the frustum.\r\n * @param aspect The aspect ratio of the frustum. (width/height)\r\n * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n * @return this\r\n */\r\nMatrix4.prototype.setPerspective = function(fovy, aspect, near, far) {\r\n  var e, rd, s, ct;\r\n\r\n  if (near === far || aspect === 0) {\r\n    throw 'null frustum';\r\n  }\r\n  if (near <= 0) {\r\n    throw 'near <= 0';\r\n  }\r\n  if (far <= 0) {\r\n    throw 'far <= 0';\r\n  }\r\n\r\n  fovy = Math.PI * fovy / 180 / 2;\r\n  s = Math.sin(fovy);\r\n  if (s === 0) {\r\n    throw 'null frustum';\r\n  }\r\n\r\n  rd = 1 / (far - near);\r\n  ct = Math.cos(fovy) / s;\r\n\r\n  e = this.elements;\r\n\r\n  e[0]  = ct / aspect;\r\n  e[1]  = 0;\r\n  e[2]  = 0;\r\n  e[3]  = 0;\r\n\r\n  e[4]  = 0;\r\n  e[5]  = ct;\r\n  e[6]  = 0;\r\n  e[7]  = 0;\r\n\r\n  e[8]  = 0;\r\n  e[9]  = 0;\r\n  e[10] = -(far + near) * rd;\r\n  e[11] = -1;\r\n\r\n  e[12] = 0;\r\n  e[13] = 0;\r\n  e[14] = -2 * near * far * rd;\r\n  e[15] = 0;\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the perspective projection matrix from the right.\r\n * @param fovy The angle between the upper and lower sides of the frustum.\r\n * @param aspect The aspect ratio of the frustum. (width/height)\r\n * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n * @return this\r\n */\r\nMatrix4.prototype.perspective = function(fovy, aspect, near, far) {\r\n  return this.concat(new Matrix4().setPerspective(fovy, aspect, near, far));\r\n};\r\n\r\n/**\r\n * Set the matrix for scaling.\r\n * @param x The scale factor along the X axis\r\n * @param y The scale factor along the Y axis\r\n * @param z The scale factor along the Z axis\r\n * @return this\r\n */\r\nMatrix4.prototype.setScale = function(x, y, z) {\r\n  var e = this.elements;\r\n  e[0] = x;  e[4] = 0;  e[8]  = 0;  e[12] = 0;\r\n  e[1] = 0;  e[5] = y;  e[9]  = 0;  e[13] = 0;\r\n  e[2] = 0;  e[6] = 0;  e[10] = z;  e[14] = 0;\r\n  e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the matrix for scaling from the right.\r\n * @param x The scale factor along the X axis\r\n * @param y The scale factor along the Y axis\r\n * @param z The scale factor along the Z axis\r\n * @return this\r\n */\r\nMatrix4.prototype.scale = function(x, y, z) {\r\n  var e = this.elements;\r\n  e[0] *= x;  e[4] *= y;  e[8]  *= z;\r\n  e[1] *= x;  e[5] *= y;  e[9]  *= z;\r\n  e[2] *= x;  e[6] *= y;  e[10] *= z;\r\n  e[3] *= x;  e[7] *= y;  e[11] *= z;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set the matrix for translation.\r\n * @param x The X value of a translation.\r\n * @param y The Y value of a translation.\r\n * @param z The Z value of a translation.\r\n * @return this\r\n */\r\nMatrix4.prototype.setTranslate = function(x, y, z) {\r\n  var e = this.elements;\r\n  e[0] = 1;  e[4] = 0;  e[8]  = 0;  e[12] = x;\r\n  e[1] = 0;  e[5] = 1;  e[9]  = 0;  e[13] = y;\r\n  e[2] = 0;  e[6] = 0;  e[10] = 1;  e[14] = z;\r\n  e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the matrix for translation from the right.\r\n * @param x The X value of a translation.\r\n * @param y The Y value of a translation.\r\n * @param z The Z value of a translation.\r\n * @return this\r\n */\r\nMatrix4.prototype.translate = function(x, y, z) {\r\n  var e = this.elements;\r\n  e[12] += e[0] * x + e[4] * y + e[8]  * z;\r\n  e[13] += e[1] * x + e[5] * y + e[9]  * z;\r\n  e[14] += e[2] * x + e[6] * y + e[10] * z;\r\n  e[15] += e[3] * x + e[7] * y + e[11] * z;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set the matrix for rotation.\r\n * The vector of rotation axis may not be normalized.\r\n * @param angle The angle of rotation (degrees)\r\n * @param x The X coordinate of vector of rotation axis.\r\n * @param y The Y coordinate of vector of rotation axis.\r\n * @param z The Z coordinate of vector of rotation axis.\r\n * @return this\r\n */\r\nMatrix4.prototype.setRotate = function(angle, x, y, z) {\r\n  var e, s, c, len, rlen, nc, xy, yz, zx, xs, ys, zs;\r\n\r\n  angle = Math.PI * angle / 180;\r\n  e = this.elements;\r\n\r\n  s = Math.sin(angle);\r\n  c = Math.cos(angle);\r\n\r\n  if (0 !== x && 0 === y && 0 === z) {\r\n    // Rotation around X axis\r\n    if (x < 0) {\r\n      s = -s;\r\n    }\r\n    e[0] = 1;  e[4] = 0;  e[ 8] = 0;  e[12] = 0;\r\n    e[1] = 0;  e[5] = c;  e[ 9] =-s;  e[13] = 0;\r\n    e[2] = 0;  e[6] = s;  e[10] = c;  e[14] = 0;\r\n    e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n  } else if (0 === x && 0 !== y && 0 === z) {\r\n    // Rotation around Y axis\r\n    if (y < 0) {\r\n      s = -s;\r\n    }\r\n    e[0] = c;  e[4] = 0;  e[ 8] = s;  e[12] = 0;\r\n    e[1] = 0;  e[5] = 1;  e[ 9] = 0;  e[13] = 0;\r\n    e[2] =-s;  e[6] = 0;  e[10] = c;  e[14] = 0;\r\n    e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n  } else if (0 === x && 0 === y && 0 !== z) {\r\n    // Rotation around Z axis\r\n    if (z < 0) {\r\n      s = -s;\r\n    }\r\n    e[0] = c;  e[4] =-s;  e[ 8] = 0;  e[12] = 0;\r\n    e[1] = s;  e[5] = c;  e[ 9] = 0;  e[13] = 0;\r\n    e[2] = 0;  e[6] = 0;  e[10] = 1;  e[14] = 0;\r\n    e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n  } else {\r\n    // Rotation around another axis\r\n    len = Math.sqrt(x*x + y*y + z*z);\r\n    if (len !== 1) {\r\n      rlen = 1 / len;\r\n      x *= rlen;\r\n      y *= rlen;\r\n      z *= rlen;\r\n    }\r\n    nc = 1 - c;\r\n    xy = x * y;\r\n    yz = y * z;\r\n    zx = z * x;\r\n    xs = x * s;\r\n    ys = y * s;\r\n    zs = z * s;\r\n\r\n    e[ 0] = x*x*nc +  c;\r\n    e[ 1] = xy *nc + zs;\r\n    e[ 2] = zx *nc - ys;\r\n    e[ 3] = 0;\r\n\r\n    e[ 4] = xy *nc - zs;\r\n    e[ 5] = y*y*nc +  c;\r\n    e[ 6] = yz *nc + xs;\r\n    e[ 7] = 0;\r\n\r\n    e[ 8] = zx *nc + ys;\r\n    e[ 9] = yz *nc - xs;\r\n    e[10] = z*z*nc +  c;\r\n    e[11] = 0;\r\n\r\n    e[12] = 0;\r\n    e[13] = 0;\r\n    e[14] = 0;\r\n    e[15] = 1;\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the matrix for rotation from the right.\r\n * The vector of rotation axis may not be normalized.\r\n * @param angle The angle of rotation (degrees)\r\n * @param x The X coordinate of vector of rotation axis.\r\n * @param y The Y coordinate of vector of rotation axis.\r\n * @param z The Z coordinate of vector of rotation axis.\r\n * @return this\r\n */\r\nMatrix4.prototype.rotate = function(angle, x, y, z) {\r\n  return this.concat(new Matrix4().setRotate(angle, x, y, z));\r\n};\r\n\r\n/**\r\n * Set the viewing matrix.\r\n * @param eyeX, eyeY, eyeZ The position of the eye point.\r\n * @param centerX, centerY, centerZ The position of the reference point.\r\n * @param upX, upY, upZ The direction of the up vector.\r\n * @return this\r\n */\r\nMatrix4.prototype.setLookAt = function(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ) {\r\n  var e, fx, fy, fz, rlf, sx, sy, sz, rls, ux, uy, uz;\r\n\r\n  fx = centerX - eyeX;\r\n  fy = centerY - eyeY;\r\n  fz = centerZ - eyeZ;\r\n\r\n  // Normalize f.\r\n  rlf = 1 / Math.sqrt(fx*fx + fy*fy + fz*fz);\r\n  fx *= rlf;\r\n  fy *= rlf;\r\n  fz *= rlf;\r\n\r\n  // Calculate cross product of f and up.\r\n  sx = fy * upZ - fz * upY;\r\n  sy = fz * upX - fx * upZ;\r\n  sz = fx * upY - fy * upX;\r\n\r\n  // Normalize s.\r\n  rls = 1 / Math.sqrt(sx*sx + sy*sy + sz*sz);\r\n  sx *= rls;\r\n  sy *= rls;\r\n  sz *= rls;\r\n\r\n  // Calculate cross product of s and f.\r\n  ux = sy * fz - sz * fy;\r\n  uy = sz * fx - sx * fz;\r\n  uz = sx * fy - sy * fx;\r\n\r\n  // Set to this.\r\n  e = this.elements;\r\n  e[0] = sx;\r\n  e[1] = ux;\r\n  e[2] = -fx;\r\n  e[3] = 0;\r\n\r\n  e[4] = sy;\r\n  e[5] = uy;\r\n  e[6] = -fy;\r\n  e[7] = 0;\r\n\r\n  e[8] = sz;\r\n  e[9] = uz;\r\n  e[10] = -fz;\r\n  e[11] = 0;\r\n\r\n  e[12] = 0;\r\n  e[13] = 0;\r\n  e[14] = 0;\r\n  e[15] = 1;\r\n\r\n  // Translate.\r\n  return this.translate(-eyeX, -eyeY, -eyeZ);\r\n};\r\n\r\n/**\r\n * Multiply the viewing matrix from the right.\r\n * @param eyeX, eyeY, eyeZ The position of the eye point.\r\n * @param centerX, centerY, centerZ The position of the reference point.\r\n * @param upX, upY, upZ The direction of the up vector.\r\n * @return this\r\n */\r\nMatrix4.prototype.lookAt = function(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ) {\r\n  return this.concat(new Matrix4().setLookAt(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ));\r\n};\r\n\r\n/**\r\n * Multiply the matrix for project vertex to plane from the right.\r\n * @param plane The array[A, B, C, D] of the equation of plane \"Ax + By + Cz + D = 0\".\r\n * @param light The array which stored coordinates of the light. if light[3]=0, treated as parallel light.\r\n * @return this\r\n */\r\nMatrix4.prototype.dropShadow = function(plane, light) {\r\n  var mat = new Matrix4();\r\n  var e = mat.elements;\r\n\r\n  var dot = plane[0] * light[0] + plane[1] * light[1] + plane[2] * light[2] + plane[3] * light[3];\r\n\r\n  e[ 0] = dot - light[0] * plane[0];\r\n  e[ 1] =     - light[1] * plane[0];\r\n  e[ 2] =     - light[2] * plane[0];\r\n  e[ 3] =     - light[3] * plane[0];\r\n\r\n  e[ 4] =     - light[0] * plane[1];\r\n  e[ 5] = dot - light[1] * plane[1];\r\n  e[ 6] =     - light[2] * plane[1];\r\n  e[ 7] =     - light[3] * plane[1];\r\n\r\n  e[ 8] =     - light[0] * plane[2];\r\n  e[ 9] =     - light[1] * plane[2];\r\n  e[10] = dot - light[2] * plane[2];\r\n  e[11] =     - light[3] * plane[2];\r\n\r\n  e[12] =     - light[0] * plane[3];\r\n  e[13] =     - light[1] * plane[3];\r\n  e[14] =     - light[2] * plane[3];\r\n  e[15] = dot - light[3] * plane[3];\r\n\r\n  return this.concat(mat);\r\n}\r\n\r\n/**\r\n * Multiply the matrix for project vertex to plane from the right.(Projected by parallel light.)\r\n * @param normX, normY, normZ The normal vector of the plane.(Not necessary to be normalized.)\r\n * @param planeX, planeY, planeZ The coordinate of arbitrary points on a plane.\r\n * @param lightX, lightY, lightZ The vector of the direction of light.(Not necessary to be normalized.)\r\n * @return this\r\n */\r\nMatrix4.prototype.dropShadowDirectionally = function(normX, normY, normZ, planeX, planeY, planeZ, lightX, lightY, lightZ) {\r\n  var a = planeX * normX + planeY * normY + planeZ * normZ;\r\n  return this.dropShadow([normX, normY, normZ, -a], [lightX, lightY, lightZ, 0]);\r\n};\r\n\r\n/**\r\n * Constructor of Vector3\r\n * If opt_src is specified, new vector is initialized by opt_src.\r\n * @param opt_src source vector(option)\r\n */\r\nvar Vector3 = function(opt_src) {\r\n  var v = new Float32Array(3);\r\n  if (opt_src && typeof opt_src === 'object') {\r\n    v[0] = opt_src[0]; v[1] = opt_src[1]; v[2] = opt_src[2];\r\n  }\r\n  this.elements = v;\r\n}\r\n\r\n/**\r\n  * Normalize.\r\n  * @return this\r\n  */\r\nVector3.prototype.normalize = function() {\r\n  var v = this.elements;\r\n  var c = v[0], d = v[1], e = v[2], g = Math.sqrt(c*c+d*d+e*e);\r\n  if(g){\r\n    if(g == 1)\r\n        return this;\r\n   } else {\r\n     v[0] = 0; v[1] = 0; v[2] = 0;\r\n     return this;\r\n   }\r\n   g = 1/g;\r\n   v[0] = c*g; v[1] = d*g; v[2] = e*g;\r\n   return this;\r\n};\r\n\r\n/**\r\n  * Vector length.\r\n  * @return Length of the vector\r\n  */\r\nVector3.prototype.length = function() {\r\n  var v = this.elements;\r\n\r\n  return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2) + Math.pow(v[2], 2));\r\n}\r\n\r\n/**\r\n * Constructor of Vector4\r\n * If opt_src is specified, new vector is initialized by opt_src.\r\n * @param opt_src source vector(option)\r\n */\r\nvar Vector4 = function(opt_src) {\r\n  var v = new Float32Array(4);\r\n  if (opt_src && typeof opt_src === 'object') {\r\n    v[0] = opt_src[0]; v[1] = opt_src[1]; v[2] = opt_src[2]; v[3] = opt_src[3];\r\n  }\r\n  this.elements = v;\r\n}\r\n\r\nexport default Matrix4;\r\nexport {\r\n  Vector4,\r\n  Vector3\r\n}\r\n","import Matrix4 from \"src/WebGL/lib/cuon-matrix.js\";\n\n/**\n * Base class for a geometric object.\n *\n * @author \"Xiaoxuan Zhang\"\n * @this {Geometry}\n */\nclass Geometry {\n  /**\n   * Constructor for Geometry.\n   *\n   * @constructor\n   */\n  constructor() {\n    this.vertices = []; // an array of vertices with coordinates of x,y,z\n    this.normals = []; //the corresponding normals to each vertex\n    this.UVs = []; //the corresponding UV to each vertex\n    this.indices = [];\n    this.modelMatrix = new Matrix4(); // Model matrix applied to geometric object\n    this.normalMatrix = new Matrix4();\n    this.buffer = {};\n    this.attributes = {}; // List of attributes that might be including color, position...\n    this.translateValue = [0.0, 0.0, 0.0];\n    this.scaleValue = [1.0, 1.0, 1.0];\n    this.rotation = 0.0;\n    this.rotationAxis = [0, 0, 1];\n    this.autoRotate = false;\n    this.angle = 0.0;\n    this.visible = true;\n    this.material = null;\n    \n    this.now = performance.now();\n  }\n\n  addMaterial(materialObj) {\n    this.material = materialObj;\n  }\n\n  setBuffer(name, buffer, dataCount) {\n    this.buffer[name] = {buffer: buffer, dataCount: dataCount, binded: true};\n  }\n\n  /**\n   * Add attributes to this geometry\n   *\n   * @public\n   * @param {String} name attribute name\n   * @param {Object} value an object containing the value of this attribute\n   * @param {int} elements the number of elements to read every time\n   */\n  addAttributes(name, value, elements) {\n    let attr = {}\n    attr.value = value;\n    attr.elements = elements;\n    this.attributes[name] = attr;\n  }\n\n  translate(coords) {\n    this.translateValue = coords;\n  }\n\n  scale(scale) {\n    this.scaleValue = scale;\n  }\n\n  rotate(degree, axis) {\n    this.rotation = degree;\n    this.rotationAxis = axis;\n  }\n\n  /**\n   * Responsible for updating the geometry's modelMatrix for animation.\n   * Does nothing for non-animating geometry.\n   */\n   updateAnimation() {\n    this.modelMatrix.setTranslate(this.translateValue[0], this.translateValue[1], this.translateValue[2]);\n    this.modelMatrix.scale(this.scaleValue[0], this.scaleValue[1], this.scaleValue[2]);\n\n    if (this.autoRotate) {\n      var elapsed = performance.now() - this.now;\n      this.now = performance.now();\n      this.angle += (10 * elapsed) / 1000.0;\n      this.angle %= 360;\n      this.modelMatrix.rotate(this.angle, this.rotationAxis[0], this.rotationAxis[1], this.rotationAxis[2]);\n    } else {\n      this.modelMatrix.rotate(this.rotation, this.rotationAxis[0], this.rotationAxis[1], this.rotationAxis[2]);\n    }\n    this.normalMatrix.setInverseOf(this.modelMatrix);\n    this.normalMatrix.transpose();\n  }\n\n}\n\nexport default Geometry;\n","import Geometry from \"src/WebGL/geometries/geometry.js\";\n\n/**\n * Specifies a Square. A subclass of Geometry.\n *\n * @author \"Zhang Xiaoxuan\"\n * @this {Square}\n */\nclass Square extends Geometry {\n  /**\n   * Constructor for Square.\n   *\n   * @constructor\n   */\n  constructor() {\n    // Recommendations: Remember that Square is a subclass of Geometry.\n    // \"super\" keyword can come in handy when minimizing code reuse.\n    super();\n    this.generateSquareVertices();\n  }\n\n  /**\n   * Generates the vertices of the square.\n   *\n   * @private Generate a unit square\n   */\n  generateSquareVertices() {\n      this.vertices = [-1.0, -1.0, 0.0,\n                       1.0, -1.0, 0.0,\n                       1.0, 1.0, 0.0,\n                       1.0, 1.0, 0.0,\n                       -1.0, 1.0, 0.0,\n                       -1.0, -1.0, 0.0];\n      this.UVs = [0.0, 0.0,\n                  1.0, 0.0,\n                  1.0, 1.0,\n                  1.0, 1.0,\n                  0.0, 1.0,\n                  0.0, 0.0];\n      this.normals = [0, 0, 1,\n                      0, 0, 1,\n                      0, 0, 1,\n                      0, 0, 1,\n                      0, 0, 1,\n                      0, 0, 1]\n  }\n\n}\n\nexport default Square;","var vertex =\n`#version 300 es\n  precision mediump float;\n  in vec4 a_position;\n  in vec2 a_texCoord;\n  in vec3 a_normal;\n  out vec2 v_texCoord;\n  out vec3 v_normal;\n\n  void main(){\n    gl_Position = a_position;\n    v_texCoord = a_texCoord;\n    v_normal = a_normal;\n  }\n`;\n\nvar fragment =\n`#version 300 es\nprecision mediump float;\nuniform sampler2D u_sample;\nuniform sampler2D u_depth;\nuniform float u_near;\nuniform float u_far;\nuniform float u_fog;\nuniform vec3 u_fogColor;\nin vec2 v_texCoord;\nin vec3 v_normal;\nout vec4 outColor;\n\nfloat perspectiveDepth() {\n  vec4 texDepth = texture(u_depth, v_texCoord);\n  float depth = texDepth.r;\n  float z = depth * 2.0 - 1.0; // Back to NDC\n  float near = u_near;\n  float far = u_far;\n  depth = (2.0 * near * far) / (far + near - z * (far - near));\n  depth /= far;\n  return depth;\n}\n\nvoid main(){\n  vec2 uv = v_texCoord;\n  vec3 texColor = texture(u_sample, uv).rgb;\n  float depth = perspectiveDepth();\n  //float depth = texture(u_depth, uv).r;\n  //unfog skybox\n  // if (depth > 0.99) {\n  //   depth = 0.4;\n  // }\n  vec3 fogColor = u_fogColor / 255.0;\n  float b = u_fog;\n  float fogAmount = exp(-b*b*depth);\n  vec3 color = mix(fogColor, texColor, fogAmount);\n  outColor = vec4(color, 1.0);\n}\n`;\n\nexport default {\n  vertex,\n  fragment\n}","import * as  WebGLUtils from 'src/WebGL/lib/webgl-utils';\nimport * as WebGLFunc from 'src/WebGL/lib/webglFunctions.js';\nimport Material from \"src/WebGL/material.js\";\nimport Square from \"src/WebGL/geometries/square.js\";\nimport finalPassShader from \"src/WebGL/shaders/finalPass.js\";\n\n/**\n * A renderer that manages webgl resources\n *\n * @author \"Xiaoxuan Zhang\"\n * @this {Renderer}\n */\nclass Renderer {\n  constructor(divId) {\n    this.divId = divId;\n    this.gl = null;\n    // Resources\n    this.shaderProgram = {};\n    this.models = {};\n    this.framebuffer = {};\n    this.scene = null;\n    this.camera = null;\n    this.final = null;\n    this.multiPassEnabled = false;\n    this.frameBufferTexture = {};\n    this.fogNear = 0.1,\n    this.fogFar = 20.0;\n    this.fogAmount = 0.5;\n    this.fogColor = [255, 255, 255];\n    this.isMousedown = false;\n    this.lastMouse = [0.0, 0.0];\n    this.deltaMouse = [0.0, 0.0];\n    this.mousePos = [0.0, 0.0];\n\n    this.domElement = document.getElementById(divId);\n    if (!this.domElement) {\n      console.log('Fail to retrieve canvas element');\n      return false;\n    }\n    \n    this.gl = WebGLUtils.getWebGLContext(this.domElement, true);\n    if (!this.gl) {\n      console.log('Failed to get the webgl context');\n      return false;\n    }\n    this._initFramebuffers();\n    this._initEventHandelers();\n  }\n\n  init(scene, camera) {\n    this.scene = scene;\n    this.camera = camera;\n    this._initWebGLContext();\n    this._createTextures();\n    this._compileShaders();\n    this._createFinalSquad();\n    this._createBufferData();\n    this.resizeCanvas();\n  }\n\n  setFog(near, far, fogAmount, fogColor) {\n    this.fogNear = near,\n    this.fogFar = far;\n    this.fogAmount = fogAmount;\n    this.fogColor = fogColor;\n  }\n\n  resizeCanvas() {\n    const gl = this.gl;\n    let realToCSSPixels = window.devicePixelRatio;\n    // Lookup the size the browser is displaying the canvas in CSS pixels\n    // and compute a size needed to make our drawingbuffer match it in\n    // device pixels.\n    let displayWidth  = Math.floor(gl.canvas.clientWidth  * realToCSSPixels);\n    let displayHeight = Math.floor(gl.canvas.clientHeight * realToCSSPixels);\n\n    // Check if the canvas is not the same size.\n    if (gl.canvas.width  != displayWidth ||\n        gl.canvas.height != displayHeight) {\n\n      // Make the canvas the same size\n      gl.canvas.width  = displayWidth;\n      gl.canvas.height = displayHeight;\n    }\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    if (this.camera) {\n      this.camera.updateProjectionMatrix();\n    }\n    this._updateRenderTexture();\n  }\n  \n  setMultiPass(enabled) {\n    this.multiPassEnabled = enabled;\n  }\n\n  render() {\n    const gl = this.gl;\n\n    // Update animations\n    this.scene.updateAnimation()\n    this.camera.updateAnimation();\n    \n    //first pass : render to framebuffer\n    if (this.multiPassEnabled) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer['first']);\n    } else {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    \n    this.scene.geometries.forEach( geo => {\n      this._renderObject(geo);\n    })\n    \n    gl.flush();\n    \n    if (this.scene.skybox) {\n      gl.disable(gl.CULL_FACE);\n      gl.depthFunc(gl.LEQUAL);\n      this._renderObject(this.scene.skybox);\n      gl.depthFunc(gl.LESS);\n      gl.enable(gl.CULL_FACE);\n    }\n\n    //Second pass : render to scene\n    if (this.multiPassEnabled) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n      this._renderObject(this.final);\n    }\n  }\n\n  _initWebGLContext() {\n    const gl = this.gl;\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.clearColor(0.5, 0.5, 0.5, 1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.DEPTH_TEST);\n    gl.enable(gl.CULL_FACE);\n    gl.frontFace(gl.CCW);\n  }\n  \n  _initFramebuffers() {\n    // Create and bind the framebuffer\n    const gl = this.gl;\n    let fb0 = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb0);\n    this.framebuffer['first'] = fb0;\n  \n    let colorTexture = WebGLFunc.createNullTexture(gl, gl.canvas.width, gl.canvas.height, gl.RGBA, gl.RGBA, 0, gl.UNSIGNED_BYTE, gl.NEAREST, gl.NEAREST, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE);\n    let depthTexture = WebGLFunc.createNullTexture(gl, gl.canvas.width, gl.canvas.height, gl.DEPTH_COMPONENT24, gl.DEPTH_COMPONENT, 0, gl.UNSIGNED_INT, gl.NEAREST, gl.NEAREST, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE);\n    \n    // Save to resources\n    this.frameBufferTexture['color'] = colorTexture;\n    this.frameBufferTexture['depth'] = depthTexture;\n\n    // set the texture as the first color attachment\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, colorTexture, 0);\n    // set the texture as the depth attachment\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthTexture, 0);\n  \n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  _updateRenderTexture() {\n    const gl = this.gl;\n    if ('color' in this.frameBufferTexture) {\n      WebGLFunc.updateNullTexture(gl, this.frameBufferTexture['color'], gl.canvas.width, gl.canvas.height, gl.RGBA, gl.RGBA, 0, gl.UNSIGNED_BYTE, gl.NEAREST, gl.NEAREST, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE);\n    }\n    if ('depth' in this.frameBufferTexture) {\n      WebGLFunc.updateNullTexture(gl, this.frameBufferTexture['depth'], gl.canvas.width, gl.canvas.height, gl.DEPTH_COMPONENT24, gl.DEPTH_COMPONENT, 0, gl.UNSIGNED_INT, gl.NEAREST, gl.NEAREST, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE);\n    }\n  }\n\n  _initEventHandelers() {\n    // Mouse drag\n    const canvas = this.domElement;\n    canvas.onmouseup = ev => {\n      this.isMousedown = false;\n    };\n    canvas.onmousedown = ev => {\n      this.isMousedown = true;\n      this._handleMouseClick(ev)\n    };\n    canvas.onmousemove = ev => {\n      if (this.isMousedown) {\n        this._handleMouseClick(ev);\n      } else {\n        let x = ev.clientX;\n        let y = ev.clientY;\n        let rect = ev.target.getBoundingClientRect();\n        x = (x - rect.left) * 2.0/canvas.width - 1.0;\n        y = (y - rect.top) * -2.0/canvas.height + 1.0;\n        this.lastMouse = [x, y];\n      }\n    };\n\n    // Camera movement with keyboard\n    document.addEventListener('keydown', (ev) => {\n      if (this.camera) {\n        if(ev.key == 'w') {\n          this.camera.move(\"forward\");\n        } else if (ev.key == 's') {\n          this.camera.move(\"backward\");\n        } else if (ev.key == 'a') {\n          this.camera.move(\"right\");\n        } else if (ev.key == 'd'){\n          this.camera.move(\"left\");\n        } else if (ev.key == 'i'){\n          this.camera.rotate(\"up\");\n        } else if (ev.key == 'k'){\n          this.camera.rotate(\"down\");\n        } else if (ev.key == 'j'){\n          this.camera.rotate(\"left\");\n        } else if (ev.key == 'l'){\n          this.camera.rotate(\"right\");\n        } else { return; } // Prevent the unnecessary drawing\n      }\n    });\n  }\n\n  _handleMouseClick(ev) {\n    const canvas = this.domElement;\n    let x = ev.clientX;\n    let y = ev.clientY;\n    let rect = ev.target.getBoundingClientRect();\n    x = (x - rect.left) * 2.0/canvas.width - 1.0;\n    y = (y - rect.top) * -2.0/canvas.height + 1.0;\n    let deltaMouse = [];\n    deltaMouse[0] = x - this.lastMouse[0];\n    deltaMouse[1] = y - this.lastMouse[1];\n    this.lastMouse = [x, y];\n    this.camera.rotateWithMouse(deltaMouse[0], deltaMouse[1]);\n  }\n\n  _createBufferData() {\n    this.scene.geometries.forEach( geo => {\n      WebGLUtils.useShader(this.gl, geo.material.shaderProgram);\n      geo.setBuffer('Vertices', WebGLFunc.createBufferData(this.gl, new Float32Array(geo.vertices)), 3);\n      geo.setBuffer('UVs', WebGLFunc.createBufferData(this.gl, new Float32Array(geo.UVs)), 2);\n      geo.setBuffer('Normals', WebGLFunc.createBufferData(this.gl, new Float32Array(geo.normals)), 3);\n\n      if (geo.indices.length > 0) {\n        geo.setBuffer('Indices', WebGLFunc.createElementArrayBuffer(this.gl, new Uint16Array(geo.indices)), 3);\n      }\n    });\n\n    if (this.scene.skybox) {\n      const skybox = this.scene.skybox;\n      WebGLUtils.useShader(this.gl, skybox.material.shaderProgram);\n      skybox.setBuffer('Vertices', WebGLFunc.createBufferData(this.gl, new Float32Array(skybox.vertices)), 3);\n      skybox.setBuffer('UVs', WebGLFunc.createBufferData(this.gl, new Float32Array(skybox.UVs)), 2);\n      skybox.setBuffer('Normals', WebGLFunc.createBufferData(this.gl, new Float32Array(skybox.normals)), 3);\n    }\n  }\n  \n  _compileShaders() {\n    this.scene.geometries.forEach( geo => {\n      const { vertex, fragment } = geo.material.shaders;\n      geo.material.shaderProgram = WebGLUtils.createShader(this.gl, vertex, fragment);\n    });\n\n    if (this.scene.skybox) {\n      const skybox = this.scene.skybox;\n      const { vertex, fragment } = skybox.material.shaders;\n      skybox.material.shaderProgram = WebGLUtils.createShader(this.gl, vertex, fragment);\n    }\n  }\n\n  _createTextures() {\n    this.scene.geometries.forEach( geo => {\n      const uniforms = geo.material.uniforms;\n      for (let key in uniforms) {\n        const {type, value} = uniforms[key];\n        if (type === \"texture\" && value && typeof value === \"object\") {\n          const {image, properties: {minParam, magParam, wrapSParam, wrapTParam}} = value;\n          value[\"textureObj\"] = WebGLFunc.create2DTexture(this.gl, image, this.gl[minParam], this.gl[magParam], this.gl[wrapSParam], this.gl[wrapTParam]);\n        }\n      }\n    });\n    \n    if (this.scene.skybox) {\n      const skybox = this.scene.skybox;\n      const uniforms = skybox.material.uniforms;\n      for (let key in uniforms) {\n        const {type, value} = uniforms[key];\n        if (type === \"texture\" && value && typeof value === \"object\") {\n          const {image, properties: {minParam, magParam, wrapSParam, wrapTParam}} = value;\n          value[\"textureObj\"] = WebGLFunc.create2DTexture(this.gl, image, this.gl[minParam], this.gl[magParam], this.gl[wrapSParam], this.gl[wrapTParam]);\n        }\n      }\n    }\n  }\n  \n  _createFinalSquad() {\n    const geo = new Square();\n    const uniforms = {\n      u_near: {type: \"f\", value: this.fogNear},\n      u_far: {type: \"f\", value: this.fogFar},\n      u_fog: {type: \"f\", value: this.fogAmount},\n      u_fogColor: {type: \"v3\", value: this.fogColor},\n      u_sample: {type: \"texture\", value: {textureObj: this.frameBufferTexture['color']}},\n      u_depth: {type: \"texture\", value: {textureObj: this.frameBufferTexture['depth']}},\n    };\n    const material = new Material({uniforms, shaders: finalPassShader});\n    geo.addMaterial(material);\n    this.final = geo;\n    \n    // Compile final pass shaders\n    const { vertex, fragment } = finalPassShader;\n    geo.material.shaderProgram = WebGLUtils.createShader(this.gl, vertex, fragment);\n    \n    // Create buffer data\n    geo.setBuffer('Vertices', WebGLFunc.createBufferData(this.gl, new Float32Array(geo.vertices)), 3);\n    geo.setBuffer('UVs', WebGLFunc.createBufferData(this.gl, new Float32Array(geo.UVs)), 2);\n    geo.setBuffer('Normals', WebGLFunc.createBufferData(this.gl, new Float32Array(geo.normals)), 3);\n    \n  }\n\n  _sendMaterialUniforms(materialObj) {\n    const { uniforms } = materialObj;\n    for(let key in uniforms) {\n      let name = key;\n      let type = \"f\";\n      let value = uniforms[key].value;\n\n      if (\"type\" in uniforms[key]) {\n        type = uniforms[key].type;\n      }\n\n      if (type === \"f\") {\n        WebGLFunc.sendUniformFloatToGLSL(this.gl, value, name);\n      } else if (type === \"t\") {\n        WebGLFunc.sendUniformFloatToGLSL(this.gl, performance.now() / 10000.0, name);\n      } else if (type === \"int\") {\n        WebGLFunc.sendUniformUintToGLSL(this.gl, value, name);\n      } else if (type === \"texture\") {\n        WebGLFunc.send2DTextureToGLSL(this.gl, value[\"textureObj\"], materialObj.getTextureUnit(name), name);\n      } else if (type === \"cubemap\") {\n        WebGLFunc.sendCubemapToGLSL(this.gl, value, materialObj.getTextureUnit(name), name);\n      } else if (type === \"v2\") {\n        WebGLFunc.sendUniformVec2ToGLSL(this.gl, value, name);\n      } else if (type === \"v3\") {\n        WebGLFunc.sendUniformVec3ToGLSL(this.gl, value, name);\n      } else if (type === \"v4\") {\n        WebGLFunc.sendUniformVec4ToGLSL(this.gl, value, name);\n      } else if (type === \"mat4\") {\n        WebGLFunc.sendUniformMat4ToGLSL(this.gl, value, name);\n      } else if (type === \"mouse\") {\n        WebGLFunc.sendUniformVec2ToGLSL(this.gl, this.lastMouse, name);\n      } else if (type === \"resolution\") {\n        const res = [this.gl.canvas.clientWidth, this.gl.canvas.clientHeight];\n        WebGLFunc.sendUniformVec2ToGLSL(this.gl, res, name);\n      }\n    }\n  }\n\n  _sendCameraUniforms() {\n    if (!this.camera) {\n      console.log(\"No camera is found.\");\n      return;\n    }\n    const { viewMatrix, projectionMatrix, position, viewProjectionInvMatrix } = this.camera;\n    WebGLFunc.sendUniformMat4ToGLSL(this.gl, viewMatrix, \"u_view\");\n    WebGLFunc.sendUniformMat4ToGLSL(this.gl, projectionMatrix, \"u_projection\");\n    WebGLFunc.sendUniformVec3ToGLSL(this.gl, position, \"u_cameraPos\");\n    if (this.scene.skybox) {\n      WebGLFunc.sendUniformMat4ToGLSL(this.gl, viewProjectionInvMatrix, \"u_viewProjectInvMatrix\");\n    }\n  }\n  \n  _sendLightUniforms() {\n    if (!this.scene.light) {\n      return;\n    }\n    const { position, color, specularColor } = this.scene.light;\n    WebGLFunc.sendUniformVec3ToGLSL(this.gl, position, 'u_lightPos');\n    WebGLFunc.sendUniformVec3ToGLSL(this.gl, color, 'u_lightColor');\n    WebGLFunc.sendUniformVec3ToGLSL(this.gl, specularColor, 'u_specularColor');\n  }\n\n  _renderObject(renderObj) {\n    const { material, vertices, normals, indices, UVs, buffer } = renderObj;\n    WebGLUtils.useShader(this.gl, material.shaderProgram);\n    \n    if (vertices.length > 0) {\n      WebGLFunc.sendAttributeBufferToGLSL(this.gl, buffer['Vertices'].buffer, buffer['Vertices'].dataCount, \"a_position\");\n    }\n    if (normals.length > 0) {\n      WebGLFunc.sendAttributeBufferToGLSL(this.gl, buffer['Normals'].buffer, buffer['Normals'].dataCount, \"a_normal\");\n    }\n    if (UVs.length > 0) {\n      WebGLFunc.sendAttributeBufferToGLSL(this.gl, buffer['UVs'].buffer, buffer['UVs'].dataCount, \"a_texCoord\");\n    }\n\n    this._sendMaterialUniforms(material);\n    this._sendCameraUniforms();\n    this._sendLightUniforms();\n\n    if (indices.length > 0) {\n      WebGLFunc.tellGLSLToDrawCurrentBuffer(this.gl, indices.length);\n    } else {\n      WebGLFunc.tellGLSLToDrawArrays(this.gl, vertices.length/3);\n    }\n    \n  }\n\n}\n\nexport default Renderer;\n","class UIComponent {\n    constructor() {\n        this.element = null;\n    }\n\n    getElement() {\n        return this.element;\n    }\n}\n\nexport default UIComponent;","import UIComponent from \"src/GUI/Components/UIComponent.js\";\n\nclass Sidebar extends UIComponent {\n  constructor(id) {\n    super();\n    const element = document.createElement(\"div\");\n    element.id = id;\n    element.className = \"side-bar-right\";\n    this.element = element;\n  }\n  \n}\n\nexport default Sidebar;\n","import UIComponent from \"src/GUI/Components/UIComponent.js\";\n\nclass TextEditor extends UIComponent {\n    constructor(id, title, text) {\n        super();\n        this.id = id;\n        this.textAreaId = `textarea-${id}`;\n        this.submitId = `submit-${id}`;\n        const editor = document.createElement(\"div\");\n        editor.setAttribute(\"id\", `editor-${id}`);\n        editor.setAttribute(\"class\", \"text-editor\");\n        editor.innerHTML = `\n            <form class=\"black-80\">\n                <div content-editable>\n                    <textarea id=${this.textAreaId} name=\"${id}\" class=\"textbox lh-copy db border-box hover-white w-100 ba pa2 br2 mb2 f6\" aria-describedby=\"${title}-desc\">\n                        ${text}\n                    </textarea>\n                </div>\n            </form>\n            <a id=${this.submitId} class=\"f7 link dim br1 ph3 pv2 mb2 mt2 dib white bg-dark-green\" href=\"#\">Update</>\n        `;\n        this.element = editor;\n    }\n\n    getTextAreaId() {\n        return this.textAreaId;\n    }\n    \n    getSubmitId() {\n        return this.submitId;\n    }\n\n    bindEvent(target, eventType, callback) {\n        let targetId = \"\";\n        switch(target) {\n            case \"textarea\":\n                targetId = this.textAreaId;\n                break;\n            case \"submit\":\n                targetId = this.submitId;\n                break;\n            default:\n                console.log(\"Invalid target\");\n                targetId = \"\";\n                break;\n        }\n        const ele = document.getElementById(targetId);\n        if (ele) {\n            ele.addEventListener(eventType, e => { \n                callback(e);\n            })\n        }\n    }\n}\n\nexport default TextEditor;\n  ","import UIComponent from \"src/GUI/Components/UIComponent.js\";\n\nclass Accordion extends UIComponent {\n  constructor() {\n    super();\n    this.element = document.createElement(\"div\");\n    this.element.setAttribute(\"class\", \"tabs\");\n    this.checkboxId = 0;\n  }\n\n  addItem({name, item}) {\n      /**\n       * <div class=\"tab\">\n       *    <input type=\"checkbox\" class=\"tab-input\" id=\"check-0\"></input>\n       *    <label class=\"tab-label\" for=\"check-0\"></label>\n       *    <div class=\"tab-content\">\n       *        {...content}\n       *    </div>\n       * </div> \n       */\n      // wrapper div\n      const newItem = document.createElement(\"div\");\n      newItem.setAttribute(\"class\", \"tab\");\n      // input\n      const input = document.createElement(\"input\");\n      input.setAttribute(\"type\", \"checkbox\");\n      input.setAttribute(\"class\", \"tab-input\");\n      const inputId = this._registerCheckboxId();\n      input.setAttribute(\"id\", inputId);\n      // label\n      const label = document.createElement(\"label\");\n      label.setAttribute(\"class\", \"tab-label f6\");\n      label.setAttribute(\"for\", inputId);\n      label.innerHTML = name;\n      // content div\n      const contentDiv = document.createElement(\"div\");\n      contentDiv.setAttribute(\"class\", \"tab-content\");\n      contentDiv.appendChild(item);\n      // put everything together\n      newItem.appendChild(input);\n      newItem.appendChild(label);\n      newItem.appendChild(contentDiv);\n      // add to parent\n      this.element.appendChild(newItem);\n  }\n\n  _registerCheckboxId() {\n      const currId = this.checkboxId;\n      this.checkboxId++;\n      return `check-${currId}`;\n  }\n\n}\n\nexport default Accordion;\n","import UIComponent from \"src/GUI/Components/UIComponent.js\";\n\nclass FileUploader extends UIComponent {\n    constructor(id, title, accept=\"*\") {\n        super();\n        const element = document.createElement(\"div\");\n        element.id = id;\n        element.innerHTML = `\n            <label for=\"btn-${id}\" class=\"f7 mr2 white\">${title}</label>\n            <a \n                id=\"btn-${id}\" \n                onclick=document.getElementById(\"input-${id}\").click()\n                class=\"f7 link dim br2 ph2 pv1 mb1 mt1 dib white bg-mid-gray\"\n                style=\"cursor:pointer\"\n            >\n                <i class=\"fas fa-file-upload\"></i>\n            </a>\n            <input id=\"input-${id}\" type=\"file\" accept=\"${accept}\" name=\"model\" style=\"display:none\"></input>\n        `;\n        const fileName = document.createElement(\"span\");\n        fileName.id = \"filename\";\n        element.appendChild(fileName);\n        this.id = id;\n        this.element = element;\n        this.fileName = fileName;\n    }\n\n    bindEvent(target=null, eventType, callback) {\n        const ele = this.element.querySelector(\"input\");\n        if (ele) {\n            ele.addEventListener(eventType, e => { \n                e.stopPropagation();\n                e.preventDefault();\n                const file = e.target.files[0];\n                this.fileName.innerText = file.name;\n                callback(file);\n            })\n        }\n    }\n}\n\nexport default FileUploader;","import UIComponent from \"src/GUI/Components/UIComponent.js\";\n\nclass Dropdown extends UIComponent {\n    constructor(id, title, items) {\n        super();\n        const wrapperDiv = document.createElement(\"div\");\n        wrapperDiv.id = id;\n        const label = document.createElement(\"label\");\n        label.setAttribute(\"for\", `selector-${id}`);\n        label.setAttribute(\"class\", \"white mr2 f7\");\n        label.innerText = title;\n        wrapperDiv.appendChild(label);\n        const selector = document.createElement(\"select\");\n        selector.id = `selector-${id}`;\n        selector.className = \"f7 link dim br2 ph2 pv1 mb1 mt1 dib white bg-mid-gray\";\n        items.forEach( item => {\n          const option = document.createElement(\"option\");\n          option.value = item.toLowerCase();\n          option.innerText = item;\n          selector.appendChild(option);\n        })\n        wrapperDiv.appendChild(selector);\n        this.element = wrapperDiv;\n    }\n}\n\nexport default Dropdown;","import UIComponent from \"src/GUI/Components/UIComponent.js\";\n\nclass Tabs extends UIComponent {\n    constructor(id, items, selected=null) {\n        super();\n        const wrapperDiv = document.createElement(\"div\");\n        wrapperDiv.id = id;\n        const selector = document.createElement(\"select\");\n        selector.id = `selector-${id}`;\n        selector.className = \"f7 link dim br2 ph2 pv1 mb2 dib white bg-mid-gray\";\n        items.forEach( item => {\n            const option = document.createElement(\"option\");\n            const { title } = item;\n            option.value = title.toLowerCase();\n            option.innerText = title;\n            selector.appendChild(option);\n        })\n        if (selected) {\n            selector.value = selected.toLowerCase();\n        }\n        wrapperDiv.appendChild(selector);\n        \n        items.forEach( item => {\n            let visible = selected === item.title ? true : false;\n            wrapperDiv.appendChild(this._createContent(item, visible));\n            visible = false;\n        })\n        selector.addEventListener(\"change\", e => {\n            const ele = document.getElementById(selector.id);\n            if (ele) {\n                const nodes = wrapperDiv.querySelectorAll(\".tab-content-wrapper\");\n                nodes.forEach( node => {\n                    if (node.id === `content-${ele.value}`) {\n                        node.style.display = \"block\";\n                    } else {\n                        node.style.display = \"none\";\n                    }\n                })\n            }\n        })\n        this.element = wrapperDiv;\n    }\n\n    _createContent(item, visible) {\n        const contentDiv = document.createElement(\"div\");\n        contentDiv.id = `content-${item.title.toLowerCase()}`;\n        contentDiv.className = \"tab-content-wrapper\";\n        contentDiv.style.display = visible ? \"block\" : \"none\";\n        contentDiv.appendChild(item.content);\n        return contentDiv;\n    }\n}\n\nexport default Tabs;","import Sidebar from 'src/GUI/Components/Sidebar';\nimport TextWidget from 'src/GUI/Components/TextWidget';\nimport Accordion from './Components/Accordion';\nimport FileLoader from \"./Components/FileUploader\";\nimport Dropdown from \"./Components/Dropdown\";\nimport Tabs from \"./Components/Tabs\";\n\n/**\n * UI component\n *\n * @author \"Xiaoxuan Zhang\"\n * @public\n */\nconst UIComponent = store => {\n  let sidebarId = \"main-panel\";\n  let listeners = {\n    \"SUBMIT_SHADER\": [],\n    \"SELECT_SCENE\": [],\n    \"UPDATE_MODEL\": []\n  };\n  let rootElement = document.createElement(\"div\");\n  rootElement.setAttribute(\"id\", \"ui-root\");\n  document.body.appendChild(rootElement);\n  const sidebar = new Sidebar(sidebarId);\n  \n  const modelOptions = createModelEditor(store);\n  const shaderOptions = createShaderEditor(store);\n\n  let accordion = new Accordion();\n  accordion.addItem({name: \"Settings\", item: modelOptions});\n  accordion.addItem({name: \"Shaders\", item: shaderOptions});\n  \n  sidebar.getElement().appendChild(accordion.getElement());\n  rootElement.appendChild(sidebar.getElement());\n\n  // Bind events\n  shaderOptions.querySelectorAll(\"textarea\").forEach( editor => {\n    editor.addEventListener(\"keyup\", e => {\n      if (e.target) {\n        sessionStorage.setItem(e.target.id, e.target.value);\n      }\n    });\n  })\n\n  shaderOptions.querySelectorAll(\"a\").forEach( btn => {\n    btn.addEventListener(\"click\", e => {\n      const sceneSelector = document.getElementById(\"selector-scene\");\n      const selectedScene = sceneSelector.options[sceneSelector.selectedIndex].text;\n      const shaderSelector = document.getElementById(`selector-shader-editor-${sceneSelector.value}`);\n      const selectedShader = shaderSelector.options[shaderSelector.selectedIndex].text;\n      listeners[\"SUBMIT_SHADER\"].forEach(func => func(selectedScene, selectedShader));\n    });\n  })\n\n  modelOptions.querySelector(\"#selector-scene\").addEventListener(\"change\", e => {\n    const selected = document.getElementById(\"selector-scene\").value;\n    // Toggle on model loader if 3d is selected\n    toggleModelLoader(selected === \"3d\" ? true : false);\n    // Toggle corresponding shader tab\n    toggleShaderTab(selected);\n    listeners[\"SELECT_SCENE\"].forEach(func => func(selected));\n  })\n\n  modelOptions.querySelector(\"#model-editor-submit\").addEventListener(\"click\", e => {\n    listeners[\"UPDATE_MODEL\"].forEach(func => func());\n  })\n  \n  const addListener = (target, listener) => {\n    if (!(target in listeners)) {\n      listeners[target] = [];\n    }\n    listeners[target].push(listener);\n  }\n\n  return {\n    rootElement,\n    addListener\n  }\n};\n\nconst toggleModelLoader = (enabled) => {\n  const ele = document.getElementById(\"model-loader\");\n  if (ele) {\n    ele.style.display = enabled ? \"block\" : \"none\";\n  }\n}\n\nconst createModelLoader = (store) => {\n  const loaderDiv = document.createElement(\"div\");\n  loaderDiv.id = \"model-loader\";\n  const loaders = {\n    \"model\": \"3D Model\", \n    \"normal\": \"Normal Map\", \n    \"diffuse\": \"Diffuse Map\", \n    \"specular\": \"Specular Map\"\n  };\n  const ul = document.createElement(\"ul\");\n  ul.className = \"list pl0 measure center mt1 mb1\";\n  loaderDiv.appendChild(ul);\n  Object.keys(loaders).forEach( key => {\n    const accept = key === \"model\" ? \".obj\" : \"image/*\";\n    const fileLoaders = new FileLoader(key, loaders[key], accept);\n    fileLoaders.bindEvent(null, \"change\", file => {\n      if (key === \"model\") {\n        //Process model\n        processObj(store, key, file, updateObjToStore);\n      } else {\n        //\n        processImage(store, key, file, updateTextureToStore);\n      }\n    })\n    const li = document.createElement(\"li\");\n    li.className = \"lh-copy pv1 ba bl-0 bt-0 br-0 b--dotted b--white-30\";\n    li.appendChild(fileLoaders.getElement())\n    ul.appendChild(li);\n  })\n  return loaderDiv;\n}\n\nconst processImage = (store, key, file, imageHandler) => {\n  const reader = new FileReader();\n  const image = new Image();\n  reader.onload = e => {\n    image.src = e.target.result;\n    imageHandler(store, key, image);\n  }\n  reader.readAsDataURL(file);\n}\n\nconst processObj = (store, key, file, objHandler) => {\n  const reader = new FileReader();\n  reader.onload = e => {\n    objHandler(store, key, e.target.result);\n  }\n  reader.readAsText(file);\n}\n\nconst updateTextureToStore = (store, key, fileObj) => {\n  const model = store.getById(\"model\");\n  model.textures[`${key}Map`].img = fileObj;\n  store.setDataById(\"model\", model);\n}\n\nconst updateObjToStore = (store, key, fileObj) => {\n  const model = store.getById(\"model\");\n  model[key] = fileObj;\n  store.setDataById(\"model\", model);\n}\n\nconst createModelEditor = (store) => {\n  const modelEditorDiv = document.createElement(\"div\");\n  modelEditorDiv.setAttribute(\"id\", \"model-editor\");\n  const sceneSelector = new Dropdown(\"scene\", \"Select a scene\", [\"3D\", \"2D\"]);\n  modelEditorDiv.appendChild(sceneSelector.getElement());\n  const divider = document.createElement(\"div\");\n  divider.className = \"divider\";\n  modelEditorDiv.appendChild(divider);\n  const modelLoader = createModelLoader(store);\n  modelEditorDiv.appendChild(modelLoader);\n  const submitBtn = document.createElement(\"a\");\n  submitBtn.id = \"model-editor-submit\";\n  submitBtn.className = \"f7 link dim br1 ph3 pv2 mb2 mt2 dib white bg-dark-green cursor-pointer\";\n  submitBtn.innerText = \"Update\";\n  modelEditorDiv.appendChild(submitBtn);\n  return modelEditorDiv;\n}\n\nconst toggleShaderTab = (type) => {\n  const div2d = document.getElementById(\"editor-2d\");\n  const div3d = document.getElementById(\"editor-3d\");\n  div2d.style.display = type === \"2d\"? \"block\" : \"none\";\n  div3d.style.display = type === \"3d\"? \"block\" : \"none\";\n}\n\nconst createShaderEditor = (store) => {\n  const { shaders, currentShader } = store.get();\n  const shaderEditorDiv = document.createElement(\"div\");\n  shaderEditorDiv.setAttribute(\"id\", \"shader-editor-wrapper\");\n  // Add wrappers for different shader types in order to respond to 3D/2D scene\n  Object.keys(shaders).forEach( type => {\n    const typeLower = type.toLowerCase();\n    const wrapper = document.createElement(\"div\");\n    wrapper.id = `editor-${typeLower}`;\n    const shaderItems = shaders[type];\n    // Add text widgets for all shaders\n    const items = [];\n    const current = currentShader[type];\n    Object.keys(shaderItems).forEach( id => {\n      const { fragment } = shaderItems[id];\n      const textWidget = new TextWidget(id, id, fragment);\n      items.push({title: id, content: textWidget.getElement()});\n    })\n    const tabs = new Tabs(`shader-editor-${typeLower}`, items, current);\n    wrapper.appendChild(tabs.getElement());\n    if (typeLower === \"2d\") {\n      // Hide 2d wrapper by default\n      wrapper.style.display = \"none\"\n    }\n    shaderEditorDiv.appendChild(wrapper);\n  })\n  return shaderEditorDiv\n}\n\nexport default UIComponent;\n","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","\n  import { Mesh, MaterialLibrary } from 'webgl-obj-loader';\n  const source = \"# \\n# \\nmtllib Cat.mtl\\no Eyes_0\\nv -0.010008 0.584063 0.292032\\nv -0.034590 0.595876 0.266656\\nv -0.008333 0.603313 0.292032\\nv -0.022641 0.569187 0.290063\\nv -0.041398 0.564813 0.287218\\nv -0.059117 0.572250 0.284376\\nv -0.069015 0.589313 0.282626\\nv -0.067375 0.608563 0.282845\\nv -0.054742 0.623437 0.284595\\nv -0.018252 0.619937 0.290500\\nv -0.035984 0.627813 0.287655\\nv -0.060484 0.625626 0.313250\\nv -0.075961 0.588876 0.311063\\nv -0.065242 0.570937 0.312813\\nv -0.046101 0.562626 0.315876\\nv -0.012223 0.583187 0.321126\\nv -0.010418 0.604187 0.321126\\nv -0.047031 0.574876 0.330532\\nv -0.025853 0.567437 0.319155\\nv -0.034125 0.577937 0.332500\\nv -0.059226 0.580126 0.328563\\nv -0.066062 0.591500 0.327468\\nv -0.064914 0.605063 0.327468\\nv -0.074156 0.609876 0.311282\\nv -0.056219 0.615126 0.328782\\nv -0.058242 0.601563 0.334250\\nv -0.053019 0.607687 0.335126\\nv -0.058953 0.593687 0.334250\\nv -0.045226 0.609876 0.336218\\nv -0.037871 0.606376 0.337532\\nv -0.031117 0.612937 0.332718\\nv -0.043312 0.618187 0.330750\\nv -0.046949 0.596750 0.339718\\nv -0.054851 0.586687 0.334905\\nv -0.047496 0.583626 0.336218\\nv -0.039703 0.585376 0.337313\\nv -0.034453 0.591500 0.338187\\nv -0.033769 0.599813 0.338187\\nv -0.025416 0.588000 0.333813\\nv -0.024267 0.601563 0.333813\\nv -0.040250 0.630437 0.316313\\nv -0.021123 0.622126 0.319376\\nv 0.010008 0.584063 0.292032\\nv 0.008333 0.603313 0.292032\\nv 0.034590 0.595876 0.266656\\nv 0.022641 0.569187 0.290063\\nv 0.041399 0.564813 0.287218\\nv 0.059117 0.572250 0.284376\\nv 0.069016 0.589313 0.282626\\nv 0.067375 0.608563 0.282845\\nv 0.054742 0.623437 0.284595\\nv 0.018252 0.619937 0.290500\\nv 0.035985 0.627813 0.287655\\nv 0.040250 0.630437 0.316313\\nv 0.060485 0.625626 0.313250\\nv 0.074156 0.609876 0.311282\\nv 0.065242 0.570937 0.312813\\nv 0.046102 0.562626 0.315876\\nv 0.025854 0.567437 0.319155\\nv 0.012223 0.583187 0.321126\\nv 0.010418 0.604187 0.321126\\nv 0.021123 0.622126 0.319376\\nv 0.047031 0.574876 0.330532\\nv 0.034125 0.577937 0.332500\\nv 0.059227 0.580126 0.328563\\nv 0.066063 0.591500 0.327468\\nv 0.075961 0.588876 0.311063\\nv 0.064914 0.605063 0.327468\\nv 0.056219 0.615126 0.328782\\nv 0.058242 0.601563 0.334250\\nv 0.053020 0.607687 0.335126\\nv 0.058953 0.593687 0.334250\\nv 0.045227 0.609876 0.336218\\nv 0.043313 0.618187 0.330750\\nv 0.031117 0.612937 0.332718\\nv 0.037871 0.606376 0.337532\\nv 0.046949 0.596750 0.339718\\nv 0.054852 0.586687 0.334905\\nv 0.047496 0.583626 0.336218\\nv 0.039703 0.585376 0.337313\\nv 0.034453 0.591500 0.338187\\nv 0.033770 0.599813 0.338187\\nv 0.025416 0.588000 0.333813\\nv 0.024268 0.601563 0.333813\\nvt 0.934570 -0.082031\\nvt 0.938477 -0.080810\\nvt 0.934570 -0.079589\\nvt 0.936035 -0.084045\\nvt 0.938477 -0.084716\\nvt 0.940918 -0.084045\\nvt 0.942383 -0.082031\\nvt 0.942383 -0.079589\\nvt 0.940918 -0.077636\\nvt 0.936035 -0.077636\\nvt 0.938477 -0.076843\\nvt 0.941406 -0.077209\\nvt 0.941406 -0.084472\\nvt 0.942871 -0.082214\\nvt 0.938477 -0.085327\\nvt 0.934082 -0.079406\\nvt 0.934082 -0.082214\\nvt 0.910156 -0.145020\\nvt 0.889648 -0.122253\\nvt 0.857910 -0.130371\\nvt 0.772949 -0.064880\\nvt 0.805664 -0.074707\\nvt 0.825684 -0.053466\\nvt 0.825684 -0.078002\\nvt 0.837402 -0.066101\\nvt 0.805664 -0.101074\\nvt 0.826172 -0.093017\\nvt 0.855469 -0.061370\\nvt 0.873047 -0.066162\\nvt 0.889648 -0.053680\\nvt 0.857910 -0.045501\\nvt 0.854980 -0.085510\\nvt 0.836914 -0.105164\\nvt 0.825684 -0.122437\\nvt 0.854980 -0.109497\\nvt 0.873535 -0.105164\\nvt 0.884277 -0.092956\\nvt 0.884766 -0.078002\\nvt 0.909180 -0.101013\\nvt 0.909180 -0.074829\\nvt 0.910156 -0.027587\\nvt 0.854492 -0.014671\\nvt 0.938477 -0.076355\\nvt 0.943359 -0.079406\\nvt 0.936035 -0.084472\\nvt 0.936035 -0.077209\\nvt 0.773438 -0.108337\\nvt 0.854980 -0.158936\\nvt 0.803223 -0.142456\\nvt 0.803711 -0.029449\\nvt 0.944336 -0.063842\\nvt 0.944336 -0.108704\\nvn 0.876600 -0.346800 -0.333600\\nvn 0.168400 -0.010600 -0.985700\\nvn 0.921400 0.196800 -0.334900\\nvn 0.522600 -0.759000 -0.388300\\nvn -0.003500 -0.882300 -0.470700\\nvn -0.496800 -0.670000 -0.551500\\nvn -0.771100 -0.196400 -0.605700\\nvn -0.726100 0.337100 -0.599300\\nvn -0.375100 0.747600 -0.548100\\nvn 0.646900 0.660500 -0.381100\\nvn 0.154900 0.873500 -0.461500\\nvn -0.531900 0.822300 0.202000\\nvn -0.666500 -0.721000 0.189200\\nvn -0.966700 -0.213900 0.140200\\nvn -0.129300 -0.953900 0.270600\\nvn 0.882100 0.221400 0.415700\\nvn 0.830300 -0.373200 0.413700\\nvn 0.444800 -0.819900 0.360400\\nvn 0.234000 -0.576400 0.783000\\nvn -0.169700 -0.674100 0.718900\\nvn -0.914400 0.377400 0.146300\\nvn -0.728300 0.270800 0.629400\\nvn -0.457300 0.587300 0.667700\\nvn -0.545400 0.177400 0.819100\\nvn -0.373600 0.376000 0.847900\\nvn -0.766600 -0.151900 0.623900\\nvn -0.565400 -0.088100 0.820000\\nvn -0.104600 0.447900 0.887900\\nvn 0.137100 0.332700 0.933000\\nvn 0.329900 0.518800 0.788600\\nvn -0.051700 0.684200 0.727500\\nvn -0.158700 0.010300 0.987200\\nvn -0.428600 -0.325500 0.842800\\nvn -0.551800 -0.513500 0.657100\\nvn -0.180200 -0.424900 0.887100\\nvn 0.078700 -0.366300 0.927100\\nvn 0.248500 -0.162300 0.954900\\nvn 0.275100 0.110700 0.955000\\nvn 0.505200 -0.259200 0.823100\\nvn 0.544100 0.161800 0.823300\\nvn 0.580400 0.726400 0.367900\\nvn 0.039300 0.957200 0.286700\\nvn -0.876600 -0.346800 -0.333600\\nvn -0.921400 0.196800 -0.334900\\nvn -0.168400 -0.010600 -0.985700\\nvn -0.522600 -0.759000 -0.388300\\nvn 0.003500 -0.882300 -0.470700\\nvn 0.496800 -0.670000 -0.551500\\nvn 0.771100 -0.196400 -0.605700\\nvn 0.726000 0.337100 -0.599300\\nvn 0.375100 0.747600 -0.548100\\nvn -0.646900 0.660500 -0.381100\\nvn -0.154900 0.873500 -0.461500\\nvn -0.039300 0.957200 0.286700\\nvn 0.531900 0.822300 0.202000\\nvn 0.914400 0.377400 0.146300\\nvn 0.666500 -0.721000 0.189200\\nvn 0.129300 -0.953900 0.270600\\nvn -0.444800 -0.819900 0.360400\\nvn -0.830300 -0.373200 0.413700\\nvn -0.882100 0.221400 0.415700\\nvn -0.580400 0.726400 0.367900\\nvn 0.728300 0.270800 0.629400\\nvn 0.766600 -0.151900 0.623900\\nvn 0.966700 -0.213900 0.140200\\nvn 0.545400 0.177400 0.819100\\nvn 0.457300 0.587300 0.667700\\nvn 0.373700 0.376000 0.847900\\nvn 0.565400 -0.088100 0.820000\\nvn 0.104600 0.447900 0.887900\\nvn 0.051700 0.684200 0.727500\\nvn -0.329900 0.518800 0.788600\\nvn -0.137100 0.332700 0.933000\\nvn 0.158700 0.010300 0.987200\\nvn 0.428600 -0.325500 0.842800\\nvn 0.551800 -0.513500 0.657100\\nvn 0.169700 -0.674100 0.718900\\nvn 0.180200 -0.424900 0.887100\\nvn -0.078700 -0.366300 0.927100\\nvn -0.234000 -0.576400 0.783000\\nvn -0.248500 -0.162300 0.954900\\nvn -0.275100 0.110700 0.955000\\nvn -0.505200 -0.259200 0.823100\\nvn -0.544100 0.161800 0.823300\\nusemtl cat\\ns 1\\nf 1/1/1 2/2/2 3/3/3\\nf 2/2/2 1/1/1 4/4/4\\nf 5/5/5 2/2/2 4/4/4\\nf 2/2/2 5/5/5 6/6/6\\nf 7/7/7 2/2/2 6/6/6\\nf 2/2/2 7/7/7 8/8/8\\nf 9/9/9 2/2/2 8/8/8\\nf 2/2/2 10/10/10 3/3/3\\nf 10/10/10 2/2/2 11/11/11\\nf 2/2/2 9/9/9 11/11/11\\nf 12/12/12 9/9/9 8/8/8\\nf 6/6/6 14/13/13 13/14/14\\nf 13/14/14 7/7/7 6/6/6\\nf 5/5/5 15/15/15 14/13/13\\nf 14/13/13 6/6/6 5/5/5\\nf 15/15/15 5/5/5 4/4/4\\nf 3/3/3 17/16/16 16/17/17\\nf 16/17/17 1/1/1 3/3/3\\nf 17/16/16 3/3/3 10/10/10\\nf 19/18/18 20/19/19 18/20/20\\nf 24/21/21 23/22/22 25/23/23\\nf 26/24/24 27/25/25 25/23/23\\nf 25/23/23 23/22/22 26/24/24\\nf 22/26/26 28/27/27 26/24/24\\nf 26/24/24 23/22/22 22/26/26\\nf 29/28/28 30/29/29 31/30/30\\nf 31/30/30 32/31/31 29/28/28\\nf 25/23/23 27/25/25 29/28/28\\nf 29/28/28 32/31/31 25/23/23\\nf 33/32/32 27/25/25 26/24/24\\nf 28/27/27 33/32/32 26/24/24\\nf 33/32/32 28/27/27 34/33/33\\nf 22/26/26 21/34/34 34/33/33\\nf 34/33/33 28/27/27 22/26/26\\nf 18/20/20 35/35/35 34/33/33\\nf 34/33/33 21/34/34 18/20/20\\nf 35/35/35 33/32/32 34/33/33\\nf 18/20/20 20/19/19 36/36/36\\nf 36/36/36 35/35/35 18/20/20\\nf 33/32/32 35/35/35 36/36/36\\nf 37/37/37 33/32/32 36/36/36\\nf 33/32/32 37/37/37 38/38/38\\nf 39/39/39 40/40/40 38/38/38\\nf 38/38/38 37/37/37 39/39/39\\nf 31/30/30 30/29/29 38/38/38\\nf 38/38/38 40/40/40 31/30/30\\nf 33/32/32 30/29/29 29/28/28\\nf 27/25/25 33/32/32 29/28/28\\nf 30/29/29 33/32/32 38/38/38\\nf 39/39/39 37/37/37 36/36/36\\nf 36/36/36 20/19/19 39/39/39\\nf 31/30/30 42/41/41 41/42/42\\nf 41/42/42 32/31/31 31/30/30\\nf 42/41/41 31/30/30 40/40/40\\nf 43/1/43 44/3/44 45/2/45\\nf 45/2/45 46/4/46 43/1/43\\nf 47/5/47 46/4/46 45/2/45\\nf 45/2/45 48/6/48 47/5/47\\nf 49/7/49 48/6/48 45/2/45\\nf 45/2/45 50/8/50 49/7/49\\nf 51/9/51 50/8/50 45/2/45\\nf 45/2/45 44/3/44 52/10/52\\nf 52/10/52 53/11/53 45/2/45\\nf 45/2/45 53/11/53 51/9/51\\nf 51/9/51 53/11/53 54/43/54\\nf 54/43/54 55/12/55 51/9/51\\nf 50/8/50 51/9/51 55/12/55\\nf 55/12/55 56/44/56 50/8/50\\nf 49/7/49 50/8/50 56/44/56\\nf 47/5/47 48/6/48 57/13/57\\nf 57/13/57 58/15/58 47/5/47\\nf 46/4/46 47/5/47 58/15/58\\nf 58/15/58 59/45/59 46/4/46\\nf 43/1/43 46/4/46 59/45/59\\nf 59/45/59 60/17/60 43/1/43\\nf 44/3/44 43/1/43 60/17/60\\nf 60/17/60 61/16/61 44/3/44\\nf 52/10/52 44/3/44 61/16/61\\nf 61/16/61 62/46/62 52/10/52\\nf 53/11/53 52/10/52 62/46/62\\nf 62/46/62 54/43/54 53/11/53\\nf 68/22/63 66/26/64 67/47/65\\nf 70/24/66 68/22/63 69/23/67\\nf 69/23/67 71/25/68 70/24/66\\nf 66/26/64 68/22/63 70/24/66\\nf 70/24/66 72/27/69 66/26/64\\nf 73/28/70 74/31/71 75/30/72\\nf 75/30/72 76/29/73 73/28/70\\nf 69/23/67 74/31/71 73/28/70\\nf 73/28/70 71/25/68 69/23/67\\nf 77/32/74 70/24/66 71/25/68\\nf 72/27/69 70/24/66 77/32/74\\nf 77/32/74 78/33/75 72/27/69\\nf 66/26/64 72/27/69 78/33/75\\nf 78/33/75 65/34/76 66/26/64\\nf 63/20/77 65/34/76 78/33/75\\nf 78/33/75 79/35/78 63/20/77\\nf 79/35/78 78/33/75 77/32/74\\nf 63/20/77 79/35/78 80/36/79\\nf 80/36/79 64/19/80 63/20/77\\nf 77/32/74 80/36/79 79/35/78\\nf 81/37/81 80/36/79 77/32/74\\nf 77/32/74 82/38/82 81/37/81\\nf 83/39/83 81/37/81 82/38/82\\nf 82/38/82 84/40/84 83/39/83\\nf 75/30/72 84/40/84 82/38/82\\nf 82/38/82 76/29/73 75/30/72\\nf 77/32/74 73/28/70 76/29/73\\nf 71/25/68 73/28/70 77/32/74\\nf 76/29/73 82/38/82 77/32/74\\nf 83/39/83 64/19/80 80/36/79\\nf 80/36/79 81/37/81 83/39/83\\nf 9/9/9 12/12/12 41/43/42\\nf 41/43/42 11/11/11 9/9/9\\nf 8/8/8 24/44/21 12/12/12\\nf 7/7/7 13/14/14 24/44/21\\nf 24/44/21 8/8/8 7/7/7\\nf 4/4/4 19/45/18 15/15/15\\nf 1/1/1 16/17/17 19/45/18\\nf 19/45/18 4/4/4 1/1/1\\nf 10/10/10 42/46/41 17/16/16\\nf 11/11/11 41/43/42 42/46/41\\nf 42/46/41 10/10/10 11/11/11\\nf 18/20/20 15/48/15 19/18/18\\nf 21/34/34 14/49/13 15/48/15\\nf 15/48/15 18/20/20 21/34/34\\nf 22/26/26 13/47/14 14/49/13\\nf 14/49/13 21/34/34 22/26/26\\nf 23/22/22 24/21/21 13/47/14\\nf 13/47/14 22/26/26 23/22/22\\nf 25/23/23 12/50/12 24/21/21\\nf 32/31/31 41/42/42 12/50/12\\nf 12/50/12 25/23/23 32/31/31\\nf 40/40/40 17/51/16 42/41/41\\nf 39/39/39 16/52/17 17/51/16\\nf 17/51/16 40/40/40 39/39/39\\nf 20/19/19 19/18/18 16/52/17\\nf 16/52/17 39/39/39 20/19/19\\nf 56/44/56 67/14/65 49/7/49\\nf 48/6/48 49/7/49 67/14/65\\nf 67/14/65 57/13/57 48/6/48\\nf 63/20/77 64/19/80 59/18/59\\nf 59/18/59 58/48/58 63/20/77\\nf 65/34/76 63/20/77 58/48/58\\nf 58/48/58 57/49/57 65/34/76\\nf 66/26/64 65/34/76 57/49/57\\nf 57/49/57 67/47/65 66/26/64\\nf 67/47/65 56/21/56 68/22/63\\nf 69/23/67 68/22/63 56/21/56\\nf 56/21/56 55/50/55 69/23/67\\nf 74/31/71 69/23/67 55/50/55\\nf 55/50/55 54/42/54 74/31/71\\nf 75/30/72 74/31/71 54/42/54\\nf 54/42/54 62/41/62 75/30/72\\nf 84/40/84 75/30/72 62/41/62\\nf 62/41/62 61/51/61 84/40/84\\nf 83/39/83 84/40/84 61/51/61\\nf 61/51/61 60/52/60 83/39/83\\nf 64/19/80 83/39/83 60/52/60\\nf 60/52/60 59/18/59 64/19/80\\no cat\\nv -0.021068 0.658876 0.325282\\nv -0.001460 0.661063 0.329000\\nv -0.021383 0.683376 0.290937\\nv -0.006614 0.550813 0.379750\\nv -0.000001 0.550813 0.380626\\nv -0.000009 0.562626 0.377126\\nv -0.007977 0.562187 0.376468\\nv -0.005633 0.543376 0.377782\\nv 0.000000 0.541626 0.378655\\nv -0.000002 0.574437 0.369905\\nv -0.009427 0.574000 0.369032\\nv -0.013713 0.550376 0.376687\\nv -0.016037 0.560000 0.372313\\nv -0.018293 0.546437 0.371876\\nv -0.011307 0.545126 0.375595\\nv -0.014137 0.542937 0.371655\\nv -0.023078 0.555626 0.365750\\nv -0.017965 0.570937 0.364218\\nv -0.000002 0.588000 0.362032\\nv -0.012366 0.587563 0.359845\\nv -0.024377 0.544250 0.368595\\nv -0.034234 0.548626 0.359626\\nv -0.027467 0.566126 0.358313\\nv -0.022504 0.584063 0.351968\\nv 0.000108 0.606813 0.355687\\nv -0.015025 0.606376 0.356345\\nv -0.000272 0.630000 0.349345\\nv -0.017773 0.631313 0.348687\\nv -0.027453 0.603750 0.353063\\nv -0.028848 0.575750 0.347595\\nv -0.037187 0.628687 0.343000\\nv -0.033195 0.599376 0.346500\\nv -0.027549 0.587126 0.343876\\nv -0.047031 0.611626 0.344313\\nv -0.043230 0.656687 0.316532\\nv -0.064859 0.630876 0.324405\\nv -0.064969 0.611626 0.334032\\nv -0.072844 0.599376 0.326155\\nv -0.084109 0.606376 0.319813\\nv -0.076125 0.579250 0.330968\\nv -0.068305 0.583626 0.333595\\nv -0.068797 0.662813 0.290500\\nv -0.037242 0.684687 0.288095\\nv -0.058953 0.676813 0.278031\\nv -0.078422 0.643563 0.302532\\nv -0.098711 0.609000 0.300563\\nv -0.070219 0.658437 0.255281\\nv -0.107461 0.636563 0.273219\\nv -0.095594 0.577937 0.304937\\nv -0.059445 0.657126 0.233844\\nv -0.077492 0.656687 0.234500\\nv -0.090070 0.652750 0.246750\\nv -0.093844 0.675500 0.252219\\nv -0.098109 0.699563 0.271469\\nv -0.091656 0.697376 0.261844\\nv -0.086023 0.717063 0.277375\\nv -0.081758 0.687313 0.250250\\nv -0.058844 0.685126 0.249375\\nv -0.048726 0.665876 0.241281\\nv -0.050969 0.675500 0.261844\\nv -0.055836 0.697813 0.271031\\nv -0.071203 0.716626 0.282187\\nv -0.052390 0.686437 0.281969\\nv -0.057531 0.703063 0.289626\\nv -0.085094 0.737626 0.302095\\nv -0.007157 0.534187 0.371437\\nv 0.000000 0.528500 0.369687\\nv -0.000000 0.536376 0.374718\\nv -0.005780 0.539000 0.375155\\nv -0.015805 0.535500 0.373187\\nv -0.009830 0.539876 0.371655\\nv -0.006870 0.545126 0.372532\\nv -0.002979 0.513626 0.361813\\nv -0.003379 0.521063 0.366845\\nv -0.013487 0.522376 0.368595\\nv -0.026127 0.527187 0.368155\\nv -0.028656 0.537687 0.369250\\nv -0.040387 0.534626 0.358968\\nv -0.032484 0.517126 0.354376\\nv -0.013610 0.512313 0.359845\\nv -0.011088 0.510563 0.353500\\nv -0.025293 0.513187 0.343218\\nv -0.022517 0.521500 0.346063\\nv -0.032074 0.522813 0.334905\\nv -0.036066 0.517563 0.334250\\nv -0.030051 0.525876 0.332500\\nv -0.022805 0.524563 0.341687\\nv -0.016898 0.523687 0.346937\\nv -0.015312 0.520187 0.350655\\nv -0.012940 0.516687 0.352405\\nv -0.002579 0.516250 0.355905\\nv -0.001022 0.512750 0.358313\\nv 0.000008 0.514500 0.360500\\nv 0.000000 0.518876 0.365313\\nv -0.006880 0.521063 0.349126\\nv -0.004495 0.518000 0.351968\\nv 0.000336 0.517563 0.356126\\nv -0.000363 0.519750 0.351968\\nv -0.006350 0.532437 0.347376\\nv -0.033250 0.508376 0.328345\\nv -0.022559 0.501376 0.334250\\nv -0.020973 0.500937 0.329218\\nv -0.033578 0.507937 0.324624\\nv -0.011751 0.497876 0.337532\\nv -0.013658 0.496563 0.328563\\nv -0.000005 0.496563 0.339500\\nv -0.000002 0.495687 0.347374\\nv -0.000002 0.497437 0.344313\\nv -0.011997 0.497876 0.342782\\nv -0.013631 0.497000 0.344095\\nv -0.000138 0.492187 0.305155\\nv 0.000134 0.483876 0.316750\\nv -0.016256 0.486063 0.319813\\nv -0.026141 0.494376 0.310405\\nv -0.022449 0.494376 0.331187\\nv -0.034617 0.504437 0.323968\\nv 0.000063 0.482126 0.329874\\nv -0.009543 0.479500 0.326595\\nv -0.011683 0.490000 0.338624\\nv 0.000000 0.488687 0.342563\\nv -0.023201 0.499626 0.336437\\nv -0.022121 0.500937 0.337968\\nv -0.032922 0.507063 0.330095\\nv -0.029723 0.498750 0.295968\\nv -0.000190 0.499626 0.292032\\nv -0.043586 0.509250 0.319155\\nv -0.052500 0.506626 0.308218\\nv -0.040414 0.512313 0.324405\\nv -0.061578 0.509250 0.295532\\nv -0.062453 0.521937 0.320032\\nv -0.076289 0.526750 0.304282\\nv -0.051980 0.518000 0.323750\\nv -0.046566 0.516250 0.325500\\nv -0.030187 0.507063 0.319595\\nv -0.039430 0.511000 0.321563\\nv -0.035000 0.513187 0.314345\\nv -0.028930 0.508813 0.311937\\nv -0.039183 0.516250 0.321124\\nv -0.043723 0.516250 0.325937\\nv -0.033660 0.518876 0.315876\\nv -0.037078 0.517563 0.304282\\nv -0.029422 0.535063 0.323968\\nv -0.030215 0.526313 0.323750\\nv -0.049656 0.522376 0.330095\\nv -0.058898 0.528500 0.331626\\nv -0.043203 0.518437 0.330095\\nv -0.039129 0.520626 0.327250\\nv -0.035027 0.523250 0.325063\\nv -0.042875 0.522813 0.338845\\nv -0.025525 0.526750 0.330750\\nv -0.020002 0.525876 0.339063\\nv -0.024527 0.533750 0.331845\\nv -0.034098 0.535063 0.312595\\nv -0.030078 0.549063 0.321782\\nv -0.034945 0.552126 0.293563\\nv 0.000000 0.546876 0.344095\\nv -0.015435 0.547750 0.339500\\nv -0.016338 0.560000 0.320468\\nv -0.063000 0.509250 0.224438\\nv -0.035137 0.484313 0.234937\\nv -0.033961 0.501813 0.254625\\nv -0.062453 0.519750 0.250906\\nv -0.083070 0.535500 0.215141\\nv -0.093406 0.537250 0.241719\\nv -0.105820 0.567000 0.238219\\nv -0.084547 0.566563 0.206719\\nv -0.104180 0.602876 0.238656\\nv -0.079242 0.601126 0.197641\\nv -0.107078 0.671126 0.265125\\nv -0.102648 0.673313 0.247188\\nv -0.105164 0.637000 0.240625\\nv -0.103359 0.701313 0.269063\\nv -0.096742 0.704376 0.258125\\nv -0.090672 0.725813 0.275188\\nv -0.098765 0.724063 0.283282\\nv -0.094226 0.742876 0.300126\\nv -0.085148 0.740687 0.290500\\nv -0.074101 0.724937 0.273438\\nv -0.079515 0.707437 0.248500\\nv -0.087555 0.682063 0.224656\\nv -0.081156 0.639626 0.205516\\nv -0.053922 0.705687 0.252219\\nv -0.054113 0.687750 0.218531\\nv -0.041863 0.704376 0.272781\\nv -0.059445 0.724937 0.291155\\nv -0.052308 0.708313 0.294876\\nv -0.081484 0.742437 0.303845\\nv -0.066390 0.725813 0.301218\\nv -0.071258 0.723626 0.298813\\nv -0.094336 0.739376 0.301219\\nv -0.096687 0.722313 0.286126\\nv -0.097398 0.672437 0.266000\\nv -0.090180 0.652313 0.267094\\nv -0.114078 0.603750 0.271469\\nv -0.097508 0.536813 0.279562\\nv -0.037324 0.507063 0.280874\\nv -0.000287 0.486937 0.259219\\nv -0.000179 0.476000 0.236031\\nv -0.024226 0.542937 0.335563\\nv 0.000236 0.501813 0.274750\\nv -0.070984 0.513187 0.278687\\nv -0.113422 0.571813 0.272781\\nv -0.084437 0.549937 0.312595\\nv -0.065844 0.537250 0.326813\\nv -0.066609 0.559563 0.339063\\nv -0.052527 0.546437 0.344313\\nv -0.052062 0.535063 0.340595\\nv -0.048808 0.570500 0.346282\\nv -0.043586 0.563937 0.352405\\nv -0.029777 0.581000 0.341687\\nv -0.025949 0.581437 0.345626\\nv -0.032293 0.586250 0.338405\\nv -0.037598 0.581437 0.336876\\nv -0.035383 0.577937 0.341468\\nv -0.051023 0.574876 0.342126\\nv -0.050230 0.578376 0.336000\\nv -0.063055 0.584937 0.332063\\nv -0.048398 0.581437 0.331187\\nv -0.057586 0.585813 0.328782\\nv -0.037871 0.586687 0.333155\\nv -0.037133 0.596750 0.340813\\nv -0.043887 0.598500 0.334687\\nv -0.048672 0.603750 0.339937\\nv -0.056492 0.600250 0.329655\\nv -0.061578 0.603750 0.333595\\nv -0.066555 0.596313 0.329000\\nv -0.060430 0.594126 0.327687\\nv -0.039758 0.543376 0.291155\\nv -0.036695 0.546000 0.272563\\nv -0.000100 0.681626 0.290282\\nv 0.002111 0.690813 0.256375\\nv -0.018252 0.690376 0.258125\\nv 0.000774 0.687313 0.218094\\nv -0.024281 0.687750 0.223235\\nv 0.000035 0.672000 0.184188\\nv -0.021820 0.667187 0.187031\\nv -0.028273 0.694313 0.259219\\nv -0.049437 0.659313 0.192500\\nv -0.020111 0.533313 0.338405\\nv -0.014478 0.533313 0.343876\\nv -0.034453 0.530687 0.278250\\nv -0.040223 0.533313 0.287874\\nv -0.021301 0.500063 0.322874\\nv -0.017486 0.510563 0.312374\\nv 0.000000 0.497437 0.328563\\nv 0.000000 0.516250 0.295532\\nv -0.017719 0.531126 0.263375\\nv 0.000000 0.530250 0.257688\\nv -0.019947 0.549063 0.257469\\nv 0.000000 0.549937 0.252000\\nv -0.017295 0.563063 0.283937\\nv 0.000000 0.566126 0.281313\\nv 0.018676 0.658876 0.324626\\nv 0.006641 0.550813 0.379750\\nv 0.007950 0.562187 0.376032\\nv 0.005633 0.543376 0.377782\\nv 0.009447 0.574000 0.369032\\nv 0.013727 0.550376 0.376687\\nv 0.015942 0.559563 0.372313\\nv 0.018197 0.546437 0.371655\\nv 0.011307 0.545126 0.375595\\nv 0.014150 0.542937 0.371876\\nv 0.023147 0.555626 0.365968\\nv 0.018061 0.570937 0.364218\\nv 0.012360 0.587563 0.359626\\nv 0.024322 0.544250 0.368595\\nv 0.034207 0.548626 0.359626\\nv 0.027576 0.566126 0.358532\\nv 0.022463 0.584063 0.351968\\nv 0.015094 0.606813 0.356563\\nv 0.016858 0.631313 0.348468\\nv 0.027494 0.603750 0.353063\\nv 0.028738 0.575750 0.347376\\nv 0.037215 0.628687 0.343437\\nv 0.027549 0.587126 0.343876\\nv 0.033141 0.599376 0.346500\\nv 0.047004 0.611626 0.344313\\nv 0.043258 0.656687 0.316532\\nv 0.064695 0.630876 0.324405\\nv 0.064914 0.611187 0.333813\\nv 0.076180 0.579250 0.330968\\nv 0.084000 0.606376 0.319595\\nv 0.072844 0.599376 0.326155\\nv 0.068414 0.583626 0.333813\\nv 0.037188 0.684687 0.288313\\nv 0.068688 0.662813 0.290500\\nv 0.058953 0.676813 0.278031\\nv 0.078695 0.643563 0.303187\\nv 0.098875 0.609000 0.300782\\nv 0.090180 0.652313 0.267094\\nv 0.070219 0.658437 0.255281\\nv 0.106422 0.636126 0.272781\\nv 0.095649 0.577937 0.305155\\nv 0.090070 0.652750 0.246750\\nv 0.077492 0.656687 0.234500\\nv 0.059445 0.657126 0.233844\\nv 0.093844 0.675500 0.252219\\nv 0.097399 0.672876 0.265781\\nv 0.096578 0.722313 0.286126\\nv 0.086024 0.716626 0.277812\\nv 0.091656 0.697376 0.261844\\nv 0.081758 0.687313 0.250250\\nv 0.058844 0.685126 0.249375\\nv 0.048727 0.665876 0.241281\\nv 0.050969 0.675500 0.261844\\nv 0.055836 0.697813 0.271031\\nv 0.071203 0.717063 0.282187\\nv 0.052418 0.686437 0.282187\\nv 0.071094 0.723626 0.298595\\nv 0.085531 0.738063 0.302095\\nv 0.094063 0.739376 0.301000\\nv 0.007164 0.534187 0.371655\\nv 0.005776 0.539000 0.375155\\nv 0.015736 0.535500 0.372968\\nv 0.009830 0.539876 0.371655\\nv 0.006870 0.545126 0.372532\\nv 0.002979 0.513626 0.361813\\nv 0.003358 0.521063 0.366845\\nv 0.013508 0.522376 0.368813\\nv 0.026168 0.527187 0.368376\\nv 0.028629 0.537687 0.369250\\nv 0.040606 0.534626 0.359187\\nv 0.032512 0.517126 0.354376\\nv 0.013638 0.512313 0.360063\\nv 0.011088 0.510563 0.353500\\nv 0.025293 0.513187 0.343218\\nv 0.022518 0.521500 0.346063\\nv 0.032074 0.522813 0.334905\\nv 0.036067 0.517563 0.334250\\nv 0.022805 0.524563 0.341687\\nv 0.030051 0.525876 0.332500\\nv 0.016899 0.523687 0.346937\\nv 0.015313 0.520187 0.350655\\nv 0.012941 0.516687 0.352405\\nv 0.002649 0.516250 0.356126\\nv 0.001024 0.512750 0.358313\\nv 0.004331 0.518000 0.352405\\nv 0.006669 0.521063 0.349345\\nv 0.006351 0.532437 0.347376\\nv 0.021082 0.500937 0.329218\\nv 0.022846 0.501376 0.334250\\nv 0.033223 0.508376 0.328345\\nv 0.033633 0.507937 0.324624\\nv 0.011696 0.498313 0.337313\\nv 0.012018 0.497876 0.342782\\nv 0.013692 0.496563 0.344313\\nv 0.016502 0.486063 0.319813\\nv 0.026277 0.494376 0.310405\\nv 0.022572 0.494376 0.331405\\nv 0.034836 0.504437 0.323968\\nv 0.009003 0.478626 0.326813\\nv 0.011819 0.490000 0.339282\\nv 0.023160 0.499626 0.336437\\nv 0.022285 0.500937 0.338187\\nv 0.032785 0.507063 0.329874\\nv 0.029668 0.499187 0.296187\\nv 0.043449 0.509250 0.318937\\nv 0.052500 0.506626 0.308218\\nv 0.040442 0.512313 0.324405\\nv 0.038910 0.507937 0.280655\\nv 0.061524 0.509250 0.295532\\nv 0.075524 0.527187 0.304063\\nv 0.062508 0.521937 0.320032\\nv 0.052035 0.518000 0.323750\\nv 0.046430 0.516250 0.325282\\nv 0.030133 0.507063 0.319595\\nv 0.021383 0.500063 0.322874\\nv 0.038910 0.511000 0.321345\\nv 0.035027 0.513187 0.314345\\nv 0.039184 0.516250 0.321124\\nv 0.043723 0.516250 0.325937\\nv 0.033660 0.518876 0.315876\\nv 0.034098 0.535063 0.312595\\nv 0.030215 0.526313 0.323750\\nv 0.058899 0.528500 0.331626\\nv 0.049957 0.521937 0.330313\\nv 0.043313 0.518437 0.330095\\nv 0.039129 0.520626 0.327250\\nv 0.035027 0.523250 0.325063\\nv 0.042902 0.522813 0.338845\\nv 0.025525 0.526750 0.330750\\nv 0.020002 0.525876 0.339063\\nv 0.024527 0.533750 0.331845\\nv 0.020111 0.533313 0.338405\\nv 0.014479 0.533313 0.343876\\nv 0.029422 0.535063 0.323968\\nv 0.030078 0.549063 0.321782\\nv 0.034945 0.552126 0.293563\\nv 0.000000 0.563500 0.320032\\nv 0.016338 0.560000 0.320468\\nv 0.015436 0.547750 0.339500\\nv 0.062125 0.509250 0.224219\\nv 0.063656 0.519313 0.251125\\nv 0.036996 0.497437 0.255500\\nv 0.035601 0.486500 0.233406\\nv 0.083398 0.535500 0.215250\\nv 0.093570 0.537250 0.241719\\nv 0.084656 0.566563 0.206610\\nv 0.106149 0.567437 0.238000\\nv 0.079242 0.601126 0.197641\\nv 0.103961 0.602876 0.238875\\nv 0.107024 0.671126 0.264906\\nv 0.104945 0.637000 0.240625\\nv 0.102758 0.673750 0.246969\\nv 0.103469 0.701313 0.268844\\nv 0.097070 0.704376 0.257687\\nv 0.090727 0.726250 0.274750\\nv 0.098930 0.724063 0.282845\\nv 0.085805 0.739813 0.291374\\nv 0.094391 0.742876 0.300345\\nv 0.079516 0.707876 0.248063\\nv 0.074047 0.724937 0.273219\\nv 0.087719 0.682063 0.224438\\nv 0.081156 0.639626 0.205516\\nv 0.054113 0.687750 0.218531\\nv 0.054113 0.705250 0.252219\\nv 0.041645 0.705250 0.273000\\nv 0.059610 0.724500 0.291374\\nv 0.052582 0.708313 0.295313\\nv 0.081594 0.742000 0.303845\\nv 0.058078 0.702626 0.290282\\nv 0.066227 0.725813 0.301218\\nv 0.098110 0.699563 0.271250\\nv 0.114188 0.603750 0.271469\\nv 0.111727 0.570937 0.273656\\nv 0.070766 0.513187 0.278687\\nv 0.024227 0.542937 0.335563\\nv 0.098985 0.536813 0.279344\\nv 0.082524 0.550813 0.312813\\nv 0.065899 0.537250 0.327032\\nv 0.066610 0.560000 0.339063\\nv 0.052500 0.546437 0.344313\\nv 0.051735 0.535063 0.340595\\nv 0.048645 0.570500 0.346063\\nv 0.043504 0.563500 0.352187\\nv 0.029750 0.581000 0.341687\\nv 0.032293 0.586250 0.338405\\nv 0.025908 0.581437 0.345405\\nv 0.035383 0.577937 0.341468\\nv 0.037598 0.581437 0.336876\\nv 0.051188 0.574876 0.342345\\nv 0.050121 0.578376 0.335782\\nv 0.063000 0.584937 0.331845\\nv 0.048535 0.581437 0.331626\\nv 0.057586 0.585813 0.328782\\nv 0.037871 0.586687 0.333155\\nv 0.043887 0.598500 0.334687\\nv 0.037133 0.596750 0.340813\\nv 0.048672 0.603750 0.339937\\nv 0.061469 0.603750 0.333376\\nv 0.066664 0.596313 0.329437\\nv 0.056492 0.600250 0.329655\\nv 0.060430 0.594126 0.327687\\nv 0.036695 0.546000 0.272563\\nv 0.039758 0.543376 0.291155\\nv 0.019879 0.689500 0.259437\\nv 0.021178 0.683813 0.291376\\nv 0.025266 0.688187 0.222578\\nv 0.021834 0.667187 0.187031\\nv 0.028219 0.694313 0.259219\\nv 0.048070 0.657563 0.195016\\nv 0.037078 0.517563 0.304282\\nv 0.040223 0.533313 0.287874\\nv 0.034453 0.530687 0.278250\\nv 0.028930 0.508813 0.311937\\nv 0.017486 0.510563 0.312374\\nv 0.013658 0.496563 0.328563\\nv 0.017719 0.531126 0.263375\\nv 0.019947 0.549063 0.257469\\nv 0.017295 0.563063 0.283937\\nv 0.000000 0.531126 0.349782\\nv -0.026865 0.525876 0.343218\\nv -0.021396 0.525876 0.346718\\nv -0.026373 0.520626 0.344095\\nv -0.022258 0.512313 0.342126\\nv -0.023652 0.512313 0.341250\\nv -0.034836 0.528500 0.324845\\nv -0.036504 0.528500 0.322218\\nv -0.031773 0.504876 0.323968\\nv -0.030051 0.508376 0.325282\\nv -0.029148 0.527187 0.332282\\nv -0.029312 0.524563 0.329437\\nv -0.028437 0.525000 0.330750\\nv -0.030762 0.527626 0.329655\\nv -0.024172 0.523687 0.337750\\nv -0.024705 0.525437 0.339282\\nv -0.025225 0.501813 0.330095\\nv -0.022408 0.504876 0.332500\\nv -0.023693 0.504876 0.331187\\nv -0.022982 0.500500 0.332063\\nv -0.004901 0.521937 0.355250\\nv -0.000685 0.517126 0.351750\\nv -0.000479 0.522376 0.355468\\nv -0.003705 0.517126 0.351532\\nv -0.004935 0.516687 0.351750\\nv -0.005322 0.522376 0.355032\\nv -0.010671 0.516687 0.350218\\nv -0.009427 0.522376 0.355250\\nv -0.015107 0.517126 0.348905\\nv -0.000788 0.500937 0.344968\\nv -0.008832 0.495687 0.340374\\nv -0.004744 0.500937 0.344968\\nv -0.004375 0.495250 0.341468\\nv -0.015080 0.495687 0.338624\\nv -0.010062 0.500500 0.343655\\nv -0.014137 0.501376 0.341905\\nv -0.009153 0.494376 0.341032\\nv -0.016816 0.507937 0.343874\\nv -0.015900 0.500500 0.341687\\nv -0.015490 0.496126 0.337532\\nv -0.016939 0.499626 0.332718\\nv -0.014082 0.502687 0.339282\\nv -0.017076 0.503563 0.337750\\nv -0.016092 0.508813 0.343000\\nv -0.017267 0.509250 0.342345\\nv -0.032156 0.528500 0.322876\\nv -0.028957 0.505313 0.321345\\nv -0.026879 0.508376 0.325063\\nv -0.026455 0.504000 0.323313\\nv -0.028301 0.508813 0.323532\\nv -0.026564 0.527626 0.330313\\nv -0.028164 0.528063 0.327687\\nv -0.024924 0.526313 0.337095\\nv -0.024500 0.524126 0.336655\\nv -0.023584 0.525876 0.338405\\nv -0.022682 0.501813 0.327687\\nv -0.020809 0.504876 0.331187\\nv -0.020426 0.500937 0.329655\\nv -0.021410 0.512750 0.340813\\nv -0.020002 0.521500 0.342782\\nv -0.023543 0.527187 0.337968\\nv -0.018074 0.526750 0.341250\\nv -0.004761 0.523250 0.351968\\nv -0.000592 0.518000 0.349782\\nv -0.000340 0.523687 0.351968\\nv -0.009003 0.523687 0.350876\\nv -0.004153 0.517563 0.349782\\nv -0.013672 0.524563 0.348250\\nv -0.009235 0.518000 0.347376\\nv -0.013665 0.518437 0.346063\\nv -0.004156 0.497876 0.339063\\nv -0.000586 0.502250 0.343437\\nv -0.003606 0.502687 0.343000\\nv -0.007745 0.498313 0.337968\\nv -0.003849 0.502250 0.343437\\nv -0.007971 0.502687 0.342782\\nv -0.012476 0.499187 0.335345\\nv -0.008394 0.502687 0.341687\\nv -0.006552 0.497437 0.337968\\nv -0.013234 0.498750 0.334687\\nv -0.033824 0.528937 0.320250\\nv -0.033496 0.525437 0.320687\\nv -0.028656 0.508376 0.326595\\nv -0.029285 0.503563 0.325937\\nv -0.027740 0.525000 0.328126\\nv -0.023652 0.523687 0.337532\\nv -0.022408 0.520626 0.346500\\nv -0.004416 0.523687 0.351750\\nv -0.007205 0.524126 0.350437\\nv 0.000265 0.497876 0.339282\\nv -0.003184 0.497876 0.338845\\nv -0.030023 0.525000 0.325937\\nv -0.029203 0.528500 0.327250\\nv -0.031637 0.525000 0.327250\\nv -0.036012 0.507500 0.320468\\nv -0.033605 0.511876 0.322655\\nv -0.026277 0.526750 0.336655\\nv -0.024391 0.524126 0.333155\\nv -0.023680 0.527187 0.334687\\nv -0.026058 0.525437 0.337968\\nv -0.025006 0.523687 0.337095\\nv -0.003811 0.500937 0.344532\\nv -0.008859 0.500937 0.344313\\nv -0.025293 0.507937 0.327468\\nv -0.026523 0.504437 0.324624\\nv -0.022805 0.512750 0.339937\\nv -0.023967 0.521500 0.340155\\nv -0.009905 0.522376 0.354155\\nv -0.009071 0.516687 0.351095\\nv -0.015887 0.522813 0.353063\\nv -0.032402 0.523250 0.323095\\nv -0.031719 0.523250 0.323968\\nv -0.030789 0.525876 0.325063\\nv -0.031308 0.523687 0.323532\\nv -0.032375 0.525437 0.326376\\nv -0.031992 0.523687 0.322655\\nv -0.032594 0.525876 0.322218\\nv -0.033332 0.528063 0.327250\\nv -0.031855 0.528063 0.329437\\nv -0.030680 0.528500 0.325282\\nv -0.029148 0.512750 0.325063\\nv -0.029996 0.513187 0.324405\\nv -0.030980 0.510126 0.321563\\nv -0.029476 0.512750 0.323750\\nv -0.032758 0.510126 0.323095\\nv -0.031855 0.511876 0.321124\\nv -0.034098 0.506187 0.322218\\nv -0.033195 0.507937 0.317845\\nv -0.031281 0.506626 0.319595\\nv -0.028629 0.512313 0.324624\\nv -0.026701 0.524563 0.333595\\nv -0.026619 0.522376 0.330313\\nv -0.025963 0.522376 0.331187\\nv -0.025566 0.522813 0.330750\\nv -0.026236 0.522813 0.329876\\nv -0.026879 0.525437 0.329655\\nv -0.025949 0.523687 0.334468\\nv -0.025129 0.525000 0.332282\\nv -0.027713 0.527187 0.334687\\nv -0.025115 0.527626 0.332718\\nv -0.022859 0.508813 0.331187\\nv -0.023625 0.509250 0.330313\\nv -0.023160 0.508813 0.329655\\nv -0.026113 0.506626 0.329218\\nv -0.022394 0.508376 0.330532\\nv -0.022094 0.504876 0.329874\\nv -0.026892 0.507937 0.328782\\nv -0.024514 0.506626 0.327905\\nv -0.027330 0.503126 0.328563\\nv -0.029066 0.504000 0.327032\\nv -0.024787 0.503126 0.326155\\nv -0.019209 0.497437 0.335563\\nv -0.018894 0.501376 0.340155\\nv -0.017992 0.508376 0.343437\\nv -0.012469 0.503563 0.339937\\nv -0.008292 0.517563 0.349126\\nv -0.003613 0.517563 0.349563\\nv -0.034180 0.525876 0.323532\\nv -0.035082 0.525437 0.322000\\nv 0.026865 0.525876 0.343218\\nv 0.021397 0.525876 0.346718\\nv 0.026373 0.520626 0.344095\\nv 0.023652 0.512313 0.341250\\nv 0.034836 0.528500 0.324845\\nv 0.035082 0.525437 0.322000\\nv 0.036504 0.528500 0.322218\\nv 0.031774 0.504876 0.323968\\nv 0.030051 0.508376 0.325282\\nv 0.029149 0.527187 0.332282\\nv 0.030762 0.527626 0.329655\\nv 0.024705 0.525437 0.339282\\nv 0.024172 0.523687 0.337750\\nv 0.025225 0.501813 0.330095\\nv 0.022408 0.504876 0.332500\\nv 0.022983 0.500500 0.332063\\nv 0.000479 0.522376 0.355468\\nv 0.000685 0.517126 0.351750\\nv 0.003705 0.517126 0.351532\\nv 0.005322 0.522376 0.355032\\nv 0.004936 0.516687 0.351750\\nv 0.009071 0.516687 0.351095\\nv 0.009427 0.522376 0.355250\\nv 0.010671 0.516687 0.350218\\nv 0.000788 0.500937 0.344968\\nv -0.000000 0.495250 0.341905\\nv 0.004744 0.500937 0.344968\\nv 0.015080 0.495687 0.338624\\nv 0.014137 0.501376 0.341905\\nv 0.010063 0.500500 0.343655\\nv 0.009153 0.494376 0.341032\\nv 0.018895 0.501376 0.340155\\nv 0.016816 0.507937 0.343874\\nv 0.015900 0.500500 0.341687\\nv 0.019209 0.497437 0.335563\\nv 0.015490 0.496126 0.337532\\nv 0.016940 0.499626 0.332718\\nv 0.017076 0.503563 0.337750\\nv 0.017268 0.509250 0.342345\\nv 0.032156 0.528500 0.322876\\nv 0.028957 0.505313 0.321345\\nv 0.026455 0.504000 0.323313\\nv 0.026879 0.508376 0.325063\\nv 0.028301 0.508813 0.323532\\nv 0.026565 0.527626 0.330313\\nv 0.028164 0.528063 0.327687\\nv 0.027740 0.525000 0.328126\\nv 0.026879 0.525437 0.329655\\nv 0.024924 0.526313 0.337095\\nv 0.023584 0.525876 0.338405\\nv 0.022682 0.501813 0.327687\\nv 0.020809 0.504876 0.331187\\nv 0.022094 0.504876 0.329874\\nv 0.021410 0.512750 0.340813\\nv 0.020002 0.521500 0.342782\\nv 0.018074 0.526750 0.341250\\nv 0.004761 0.523250 0.351968\\nv 0.003613 0.517563 0.349563\\nv 0.000592 0.518000 0.349782\\nv 0.000341 0.523687 0.351968\\nv 0.009003 0.523687 0.350876\\nv 0.004153 0.517563 0.349782\\nv 0.013672 0.524563 0.348250\\nv 0.013665 0.518437 0.346063\\nv 0.009235 0.518000 0.347376\\nv 0.004156 0.497876 0.339063\\nv -0.000265 0.497876 0.339282\\nv 0.000586 0.502250 0.343437\\nv 0.007745 0.498313 0.337968\\nv 0.003849 0.502250 0.343437\\nv 0.007971 0.502687 0.342782\\nv 0.012476 0.499187 0.335345\\nv 0.006552 0.497437 0.337968\\nv 0.008395 0.502687 0.341687\\nv 0.016092 0.508813 0.343000\\nv 0.014082 0.502687 0.339282\\nv 0.013234 0.498750 0.334687\\nv 0.033496 0.525437 0.320687\\nv 0.033824 0.528937 0.320250\\nv 0.028656 0.508376 0.326595\\nv 0.029285 0.503563 0.325937\\nv 0.023652 0.523687 0.337532\\nv 0.020426 0.500937 0.329655\\nv 0.022408 0.520626 0.346500\\nv 0.022258 0.512313 0.342126\\nv 0.004416 0.523687 0.351750\\nv 0.007205 0.524126 0.350437\\nv 0.003184 0.497876 0.338845\\nv 0.030024 0.525000 0.325937\\nv 0.032375 0.525437 0.326376\\nv 0.031637 0.525000 0.327250\\nv 0.029203 0.528500 0.327250\\nv 0.036012 0.507500 0.320468\\nv 0.033606 0.511876 0.322655\\nv 0.023680 0.527187 0.334687\\nv 0.025949 0.523687 0.334468\\nv 0.026059 0.525437 0.337968\\nv 0.025006 0.523687 0.337095\\nv 0.004375 0.495250 0.341468\\nv 0.003811 0.500937 0.344532\\nv 0.008832 0.495687 0.340374\\nv 0.008859 0.500937 0.344313\\nv 0.029067 0.504000 0.327032\\nv 0.026523 0.504437 0.324624\\nv 0.025293 0.507937 0.327468\\nv 0.022805 0.512750 0.339937\\nv 0.023967 0.521500 0.340155\\nv 0.023543 0.527187 0.337968\\nv 0.004901 0.521937 0.355250\\nv 0.009905 0.522376 0.354155\\nv 0.015887 0.522813 0.353063\\nv 0.015108 0.517126 0.348905\\nv 0.031719 0.523250 0.323968\\nv 0.032402 0.523250 0.323095\\nv 0.030789 0.525876 0.325063\\nv 0.031309 0.523687 0.323532\\nv 0.031992 0.523687 0.322655\\nv 0.032594 0.525876 0.322218\\nv 0.033332 0.528063 0.327250\\nv 0.031856 0.528063 0.329437\\nv 0.030680 0.528500 0.325282\\nv 0.032758 0.510126 0.323095\\nv 0.029996 0.513187 0.324405\\nv 0.029149 0.512750 0.325063\\nv 0.030981 0.510126 0.321563\\nv 0.029477 0.512750 0.323750\\nv 0.031856 0.511876 0.321124\\nv 0.034098 0.506187 0.322218\\nv 0.033195 0.507937 0.317845\\nv 0.031281 0.506626 0.319595\\nv 0.028629 0.512313 0.324624\\nv 0.025567 0.522813 0.330750\\nv 0.025963 0.522376 0.331187\\nv 0.026701 0.524563 0.333595\\nv 0.026236 0.522813 0.329876\\nv 0.024391 0.524126 0.333155\\nv 0.025129 0.525000 0.332282\\nv 0.027713 0.527187 0.334687\\nv 0.026277 0.526750 0.336655\\nv 0.025115 0.527626 0.332718\\nv 0.026619 0.522376 0.330313\\nv 0.026113 0.506626 0.329218\\nv 0.023160 0.508813 0.329655\\nv 0.023625 0.509250 0.330313\\nv 0.022395 0.508376 0.330532\\nv 0.026893 0.507937 0.328782\\nv 0.024514 0.506626 0.327905\\nv 0.027330 0.503126 0.328563\\nv 0.024787 0.503126 0.326155\\nv 0.022859 0.508813 0.331187\\nv 0.017992 0.508376 0.343437\\nv 0.012469 0.503563 0.339937\\nv 0.003606 0.502687 0.343000\\nv 0.008292 0.517563 0.349126\\nv 0.023693 0.504876 0.331187\\nv 0.024500 0.524126 0.336655\\nv 0.028438 0.525000 0.330750\\nv 0.029313 0.524563 0.329437\\nv 0.034180 0.525876 0.323532\\nv -0.016625 0.501376 0.336218\\nv -0.015422 0.528500 0.311063\\nv -0.015586 0.526313 0.308437\\nv -0.018252 0.543813 0.275625\\nv -0.018197 0.540750 0.275406\\nv -0.012578 0.528063 0.249594\\nv -0.013761 0.522376 0.253750\\nv -0.016734 0.499626 0.334468\\nv 0.015422 0.528500 0.311063\\nv 0.016625 0.501376 0.336218\\nv 0.018197 0.540750 0.275406\\nv 0.018252 0.543813 0.275625\\nv 0.012578 0.528063 0.249594\\nv -0.000000 0.523250 0.248281\\nv -0.000000 0.539437 0.274312\\nv -0.000000 0.512750 0.308437\\nv -0.000000 0.521937 0.275625\\nv 0.015586 0.526313 0.308437\\nv -0.000000 0.522376 0.315874\\nv -0.000000 0.514063 0.255938\\nv 0.013761 0.522376 0.253750\\nv -0.000000 0.497437 0.341905\\nv 0.016735 0.499626 0.334468\\nv -0.000000 0.496126 0.340155\\nv -0.067484 0.683813 0.371218\\nv -0.054933 0.667187 0.356126\\nv -0.054879 0.667187 0.356563\\nv -0.045336 0.652750 0.344313\\nv -0.045226 0.652750 0.344750\\nv -0.036531 0.631313 0.332937\\nv -0.036422 0.631313 0.333595\\nv -0.092094 0.686437 0.358313\\nv -0.071039 0.667187 0.346500\\nv -0.071039 0.667626 0.346937\\nv -0.054441 0.650126 0.337968\\nv -0.054359 0.650563 0.338405\\nv -0.036586 0.625626 0.332063\\nv -0.036531 0.626063 0.332500\\nv -0.116484 0.662813 0.399218\\nv -0.091164 0.660187 0.375813\\nv -0.091055 0.660626 0.376250\\nv -0.066500 0.647937 0.355032\\nv -0.066390 0.648813 0.355468\\nv -0.040004 0.625626 0.335782\\nv -0.039894 0.626500 0.336218\\nv -0.031691 0.467687 0.387187\\nv -0.024432 0.493937 0.369687\\nv -0.024705 0.493937 0.369687\\nv -0.019182 0.520187 0.359845\\nv -0.019510 0.520626 0.359845\\nv -0.076344 0.472500 0.390687\\nv -0.053785 0.497437 0.378000\\nv -0.054031 0.497437 0.378000\\nv -0.026687 0.525000 0.362905\\nv -0.026974 0.525000 0.362905\\nv -0.122719 0.475563 0.368155\\nv -0.091383 0.487376 0.365532\\nv -0.091547 0.487376 0.365313\\nv -0.060047 0.503563 0.360937\\nv -0.060265 0.504000 0.360718\\nv -0.030187 0.523250 0.356345\\nv -0.030406 0.523687 0.355905\\nv -0.097726 0.502250 0.383687\\nv -0.064148 0.514500 0.374718\\nv -0.064203 0.514937 0.374718\\nv -0.029203 0.528937 0.364437\\nv -0.029258 0.529376 0.364218\\nv -0.155312 0.530250 0.322655\\nv -0.126000 0.527626 0.334032\\nv -0.126000 0.528063 0.333813\\nv -0.089414 0.528937 0.345187\\nv -0.089414 0.529376 0.344968\\nv -0.042055 0.533750 0.351750\\nv -0.042027 0.534187 0.351532\\nv -0.178062 0.493500 0.328782\\nv -0.151812 0.501813 0.335126\\nv -0.151922 0.501813 0.334905\\nv -0.120750 0.510126 0.342126\\nv -0.120750 0.510126 0.341905\\nv -0.087226 0.518876 0.351095\\nv -0.087281 0.519313 0.350876\\nv -0.036066 0.529376 0.357000\\nv -0.036094 0.529813 0.356782\\nv 0.067485 0.683813 0.371218\\nv 0.054879 0.667187 0.356563\\nv 0.054934 0.667187 0.356126\\nv 0.045336 0.652750 0.344313\\nv 0.045227 0.652750 0.344750\\nv 0.036531 0.631313 0.332937\\nv 0.036422 0.631313 0.333595\\nv 0.092094 0.686437 0.358313\\nv 0.071039 0.667626 0.346937\\nv 0.071039 0.667187 0.346500\\nv 0.054442 0.650126 0.337968\\nv 0.054360 0.650563 0.338405\\nv 0.036586 0.625626 0.332063\\nv 0.036531 0.626063 0.332500\\nv 0.116485 0.662813 0.399218\\nv 0.091055 0.660626 0.376250\\nv 0.091164 0.660187 0.375813\\nv 0.066500 0.647937 0.355032\\nv 0.066391 0.648813 0.355468\\nv 0.040004 0.625626 0.335782\\nv 0.039895 0.626500 0.336218\\nv 0.031692 0.467687 0.387187\\nv 0.024705 0.493937 0.369687\\nv 0.024432 0.493937 0.369687\\nv 0.019182 0.520187 0.359845\\nv 0.019510 0.520626 0.359845\\nv 0.076344 0.472500 0.390687\\nv 0.054031 0.497437 0.378000\\nv 0.053785 0.497437 0.378000\\nv 0.026688 0.525000 0.362905\\nv 0.026975 0.525000 0.362905\\nv 0.122719 0.475563 0.368155\\nv 0.091547 0.487376 0.365313\\nv 0.091383 0.487376 0.365532\\nv 0.060047 0.503563 0.360937\\nv 0.060266 0.504000 0.360718\\nv 0.030188 0.523250 0.356345\\nv 0.030406 0.523687 0.355905\\nv 0.097727 0.502250 0.383687\\nv 0.064203 0.514937 0.374718\\nv 0.064149 0.514500 0.374718\\nv 0.029203 0.528937 0.364437\\nv 0.029258 0.529376 0.364218\\nv 0.155313 0.530250 0.322655\\nv 0.126000 0.528063 0.333813\\nv 0.126000 0.527626 0.334032\\nv 0.089414 0.528937 0.345187\\nv 0.089414 0.529376 0.344968\\nv 0.042055 0.533750 0.351750\\nv 0.042027 0.534187 0.351532\\nv 0.178063 0.493500 0.328782\\nv 0.151922 0.501813 0.334905\\nv 0.151813 0.501813 0.335126\\nv 0.120750 0.510126 0.342126\\nv 0.120750 0.510126 0.341905\\nv 0.087227 0.518876 0.351095\\nv 0.087281 0.519313 0.350876\\nv 0.036067 0.529376 0.357000\\nv 0.036094 0.529813 0.356782\\nv -0.046022 0.067644 0.110455\\nv -0.056823 0.111012 0.105259\\nv -0.056440 0.067425 0.120298\\nv -0.048619 0.085964 0.099189\\nv -0.052803 0.040273 0.135939\\nv -0.049111 0.037812 0.109908\\nv -0.056385 0.051511 0.127845\\nv -0.047799 0.048476 0.108048\\nv -0.046022 0.073331 0.090603\\nv -0.050369 0.094441 0.086829\\nv -0.049440 0.113528 0.080649\\nv -0.056877 0.133762 0.100884\\nv -0.047225 0.129497 0.075509\\nv -0.045010 0.145576 0.070369\\nv -0.056987 0.156403 0.096564\\nv -0.040908 0.198952 0.059981\\nv -0.056548 0.209889 0.080051\\nv -0.054827 0.131358 0.046634\\nv -0.048400 0.182438 0.021849\\nv -0.041044 0.191297 0.041113\\nv -0.060159 0.100458 0.061891\\nv -0.059721 0.075738 0.074798\\nv -0.051791 0.067698 0.084970\\nv -0.043779 0.057362 0.099627\\nv -0.051463 0.057362 0.090275\\nv -0.058572 0.048995 0.088197\\nv -0.046787 0.020409 0.116252\\nv -0.059775 0.015924 0.104603\\nv -0.040279 0.018277 0.143595\\nv -0.040334 0.013943 0.167330\\nv -0.051572 0.003301 0.178049\\nv -0.042439 0.027546 0.161533\\nv -0.055564 0.041067 0.156174\\nv -0.053568 0.038962 0.170283\\nv -0.080392 0.051731 0.146330\\nv -0.082088 0.050501 0.162627\\nv -0.079627 0.061246 0.136158\\nv -0.080447 0.082573 0.127517\\nv -0.081924 0.125231 0.115704\\nv -0.081432 0.162528 0.104056\\nv -0.081651 0.143824 0.109908\\nv -0.106260 0.136825 0.095907\\nv -0.104510 0.118012 0.102360\\nv -0.102596 0.074370 0.116470\\nv -0.101557 0.052824 0.123252\\nv -0.103580 0.042106 0.133533\\nv -0.108666 0.041286 0.150486\\nv -0.120533 0.017320 0.137470\\nv -0.110471 0.020737 0.112095\\nv -0.121299 0.028134 0.153767\\nv -0.112111 0.039591 0.163283\\nv -0.123158 0.015214 0.158908\\nv -0.116924 0.000112 0.142392\\nv -0.106752 0.038441 0.102361\\nv -0.108174 0.000989 0.128174\\nv -0.101775 0.000319 0.156064\\nv -0.112330 -0.002711 0.157049\\nv -0.118346 0.001643 0.159236\\nv -0.116049 0.023705 0.179252\\nv -0.112330 0.027355 0.177939\\nv -0.108064 0.027669 0.185158\\nv -0.090564 0.004437 0.190299\\nv -0.090182 0.023308 0.198283\\nv -0.090236 0.034888 0.193908\\nv -0.103142 0.037158 0.183189\\nv -0.084549 0.027068 0.197299\\nv -0.083182 0.048396 0.179799\\nv -0.121189 0.027478 0.166892\\nv -0.115830 0.030951 0.175642\\nv -0.064041 0.036775 0.187017\\nv -0.044217 0.026138 0.173783\\nv -0.050533 0.029529 0.182095\\nv -0.077986 0.033986 0.194892\\nv -0.059830 0.026152 0.189752\\nv -0.079408 0.021968 0.199924\\nv -0.054279 0.025769 0.183517\\nv -0.050369 0.022474 0.185486\\nv -0.057424 0.007688 0.180127\\nv -0.069126 0.193486 -0.002012\\nv -0.070437 0.281974 -0.049172\\nv -0.058078 0.262066 -0.031153\\nv -0.070656 0.303192 -0.053792\\nv -0.057093 0.282848 -0.036620\\nv -0.070929 0.324411 -0.058412\\nv -0.051351 0.315658 -0.042333\\nv -0.056109 0.303629 -0.042060\\nv -0.031746 0.306908 -0.026237\\nv -0.055726 0.337753 -0.046295\\nv -0.105656 0.332724 -0.042087\\nv -0.111125 0.381721 -0.036424\\nv -0.079734 0.368816 -0.066338\\nv -0.132891 0.375595 0.003212\\nv -0.128187 0.325066 -0.001767\\nv -0.106804 0.275192 -0.037333\\nv -0.106203 0.304066 -0.039710\\nv -0.099534 0.092747 0.059102\\nv -0.076619 0.091543 0.057079\\nv -0.074432 0.056980 0.076767\\nv -0.096635 0.052058 0.081142\\nv -0.076401 0.127639 0.036708\\nv -0.076510 0.109592 0.046880\\nv -0.099698 0.111560 0.049477\\nv -0.099861 0.130374 0.039852\\nv -0.099532 0.193815 0.003717\\nv -0.126656 0.299253 0.001655\\nv -0.059885 0.032453 0.095635\\nv -0.075635 0.030566 0.090494\\nv -0.068362 0.082027 0.065775\\nv -0.057479 0.115935 0.054263\\nv -0.076674 0.014147 0.099845\\nv -0.062674 0.002106 0.120517\\nv -0.077767 0.001724 0.117564\\nv -0.094994 0.015869 0.101869\\nv -0.093517 0.000514 0.118330\\nv -0.094830 0.031851 0.091697\\nv -0.079682 -0.002669 0.140642\\nv -0.049275 0.002474 0.131564\\nv -0.060322 -0.000203 0.159127\\nv -0.081596 0.004355 0.165252\\nv -0.071369 -0.003769 0.175752\\nv -0.094502 -0.001337 0.174330\\nv -0.103689 0.005244 0.182861\\nv -0.108557 0.009629 0.175752\\nv -0.084111 0.007708 0.191939\\nv -0.077713 0.003315 0.191174\\nv -0.064807 0.003498 0.185377\\nv -0.043342 0.001482 0.148080\\nv -0.050123 -0.004224 0.161752\\nv -0.044408 0.000360 0.164705\\nv -0.126000 0.319813 0.043006\\nv -0.129172 0.367718 0.052825\\nv -0.108938 0.346718 0.091872\\nv -0.096633 0.310624 0.068955\\nv -0.120203 0.274751 0.044234\\nv -0.091493 0.269062 0.069007\\nv -0.094063 0.289842 0.069009\\nv -0.123156 0.297282 0.043606\\nv -0.114189 0.214484 0.063754\\nv -0.084439 0.218749 0.084426\\nv -0.108010 0.155638 0.089455\\nv -0.057969 0.257468 0.070811\\nv -0.062070 0.292905 0.074260\\nv -0.060047 0.275187 0.072508\\nv -0.062453 0.311060 0.084050\\nv -0.037653 0.248062 0.049046\\nv -0.033852 0.280218 0.052358\\nv -0.035739 0.264031 0.050715\\nv -0.062781 0.329218 0.093896\\nv -0.031199 0.293124 0.057363\\nv -0.027658 0.277376 0.016127\\nv -0.025457 0.287658 0.017687\\nv -0.036997 0.243688 0.020185\\nv -0.032321 0.260532 0.018163\\nv -0.125125 0.273221 0.005077\\nv -0.117361 0.203111 0.031652\\nv -0.115393 0.140983 0.062001\\nv -0.112659 0.122279 0.069329\\nv -0.110034 0.103466 0.076657\\nv -0.108283 0.059441 0.094103\\nv -0.112549 0.004325 0.172252\\nv -0.036531 0.294876 -0.025981\\nv -0.041289 0.282845 -0.025722\\nv -0.045719 0.242159 -0.013148\\nv -0.043504 0.262502 -0.019435\\nv -0.023270 0.297937 0.019235\\nv -0.000000 0.532874 -0.618626\\nv -0.020317 0.500937 -0.618187\\nv -0.056821 0.493937 -0.618187\\nv -0.096415 0.511000 -0.583187\\nv -0.068796 0.567000 -0.584063\\nv -0.036723 0.503124 -0.617313\\nv -0.035165 0.482124 -0.616000\\nv -0.065191 0.434218 -0.612063\\nv -0.026648 0.436624 -0.604187\\nv -0.043312 0.623874 -0.408623\\nv -0.047441 0.622563 -0.468563\\nv -0.092202 0.583187 -0.455437\\nv -0.077874 0.579687 -0.394405\\nv -0.047304 0.616874 -0.521500\\nv -0.089358 0.576187 -0.520623\\nv -0.041754 0.611187 -0.564813\\nv -0.116594 0.518003 -0.512750\\nv -0.109981 0.445158 -0.571813\\nv -0.076187 0.373405 -0.600250\\nv -0.116711 0.386095 -0.561750\\nv -0.121077 0.525003 -0.427437\\nv -0.128629 0.451940 -0.500500\\nv -0.136182 0.390471 -0.492626\\nv -0.135409 0.458503 -0.406218\\nv -0.145916 0.389816 -0.407095\\nv -0.099423 0.455000 -0.363123\\nv -0.094609 0.520187 -0.372750\\nv -0.101726 0.371440 -0.364000\\nv -0.028574 0.306250 0.062342\\nv -0.030461 0.320905 0.089413\\nv -0.021547 0.306032 0.055069\\nv -0.012954 0.297718 0.021355\\nv -0.126984 0.462000 -0.133328\\nv -0.109922 0.397468 -0.112219\\nv -0.117031 0.422408 -0.073719\\nv -0.126547 0.471626 -0.087390\\nv -0.123484 0.457187 -0.185719\\nv -0.107297 0.387405 -0.173031\\nv -0.109922 0.455876 -0.244563\\nv -0.097399 0.385876 -0.234500\\nv -0.099696 0.452376 -0.296405\\nv -0.086243 0.389595 -0.290500\\nv -0.078863 0.389595 -0.342781\\nv -0.094610 0.451063 -0.331187\\nv -0.052478 0.355468 -0.383468\\nv -0.047635 0.358313 -0.338845\\nv -0.064422 0.314563 -0.164500\\nv -0.062125 0.323532 -0.227719\\nv -0.053348 0.344532 -0.288968\\nv 0.000048 0.303626 -0.227938\\nv -0.000000 0.292032 -0.164172\\nv 0.000078 0.290718 -0.108281\\nv -0.038774 0.310408 -0.059063\\nv 0.000339 0.294437 -0.066062\\nv -0.059226 0.339721 -0.062674\\nv -0.059828 0.324845 -0.104727\\nv -0.000000 0.716187 -0.710937\\nv -0.000000 0.755563 -0.748123\\nv -0.028246 0.748124 -0.754250\\nv -0.028383 0.707437 -0.716187\\nv -0.000000 0.654500 -0.633500\\nv -0.000000 0.680750 -0.672437\\nv -0.029394 0.670687 -0.676373\\nv -0.030926 0.642250 -0.637873\\nv -0.038500 0.648374 -0.689937\\nv -0.040524 0.615124 -0.650123\\nv -0.037980 0.732813 -0.771750\\nv -0.038254 0.689500 -0.731500\\nv -0.026660 0.790126 -0.789687\\nv -0.024637 0.833437 -0.823373\\nv -0.032156 0.819876 -0.840000\\nv -0.036477 0.776563 -0.807187\\nv -0.020877 0.873250 -0.855750\\nv -0.018922 0.912626 -0.884187\\nv -0.024828 0.903000 -0.896873\\nv -0.028000 0.862313 -0.869313\\nv -0.000000 0.838687 -0.818123\\nv -0.000000 0.879813 -0.849623\\nv -0.000000 0.949376 -0.904750\\nv -0.000000 0.975626 -0.929250\\nv -0.013091 0.966876 -0.927500\\nv -0.015996 0.945000 -0.909123\\nv -0.000000 0.797563 -0.783123\\nv -0.014451 0.966000 -0.938000\\nv -0.020672 0.936250 -0.919623\\nv -0.019100 0.854437 -0.882873\\nv -0.017213 0.896000 -0.909123\\nv -0.024445 0.765626 -0.825123\\nv -0.025498 0.721000 -0.789687\\nv -0.025143 0.675937 -0.746813\\nv -0.025621 0.630874 -0.703500\\nv -0.027166 0.593250 -0.662373\\nv -0.010124 0.959876 -0.946750\\nv -0.014602 0.930126 -0.931000\\nv -0.021232 0.810687 -0.855313\\nv -0.000000 0.894250 -0.912623\\nv -0.000000 0.927500 -0.934500\\nv -0.000000 0.975626 -0.945873\\nv -0.000402 0.632187 -0.522813\\nv 0.003702 0.628687 -0.563063\\nv -0.045637 0.581874 -0.614250\\nv -0.037024 0.623874 -0.601123\\nv -0.027686 0.564813 -0.630437\\nv -0.000000 0.554313 -0.630437\\nv -0.000000 0.671126 -0.752500\\nv 0.001163 0.636563 -0.479500\\nv -0.000105 0.637876 -0.413437\\nv -0.041480 0.619937 -0.336655\\nv 0.001488 0.646187 -0.342781\\nv -0.046019 0.618187 -0.274969\\nv -0.000198 0.642687 -0.288313\\nv -0.043695 0.593687 -0.133765\\nv -0.045336 0.598937 -0.174344\\nv -0.088594 0.567000 -0.162750\\nv -0.085258 0.566563 -0.118125\\nv -0.044707 0.609000 -0.218094\\nv -0.084274 0.571376 -0.209344\\nv -0.076672 0.572250 -0.267750\\nv -0.070054 0.573124 -0.329437\\nv -0.109867 0.517563 -0.197313\\nv -0.114516 0.517563 -0.148313\\nv -0.099914 0.516687 -0.256375\\nv -0.090781 0.507063 -0.317623\\nv -0.117031 0.524563 -0.102648\\nv -0.112109 0.384560 0.114514\\nv -0.083781 0.369687 0.125233\\nv -0.105711 0.416282 0.142625\\nv -0.113641 0.488250 0.108118\\nv -0.127750 0.421092 0.085366\\nv -0.123922 0.493500 0.020413\\nv -0.133328 0.432250 0.016173\\nv -0.121297 0.481690 -0.039457\\nv -0.118563 0.429626 -0.033715\\nv 0.000475 0.436845 0.199500\\nv -0.033223 0.444282 0.202453\\nv -0.031828 0.410595 0.187797\\nv -0.000364 0.407313 0.179156\\nv -0.039895 0.378655 0.166141\\nv -0.048289 0.352624 0.135515\\nv -0.000427 0.318500 0.099860\\nv -0.056984 0.432032 0.182656\\nv -0.060484 0.464626 0.192828\\nv -0.063711 0.490876 0.204750\\nv -0.034535 0.467687 0.217219\\nv -0.074320 0.519313 0.187360\\nv -0.086133 0.491313 0.175219\\nv -0.081156 0.551250 0.175766\\nv -0.089305 0.528500 0.147438\\nv -0.081703 0.449750 0.160235\\nv -0.076344 0.581437 0.158485\\nv -0.087227 0.568750 0.122610\\nv -0.092367 0.560874 0.073172\\nv -0.101664 0.551250 0.008607\\nv -0.106805 0.534626 -0.051269\\nv -0.060594 0.599813 0.099039\\nv -0.060156 0.612500 0.045062\\nv -0.074922 0.603313 -0.009269\\nv -0.077930 0.579687 -0.064367\\nv -0.032785 0.621687 0.123266\\nv -0.040441 0.639626 0.153891\\nv 0.001130 0.658876 0.144703\\nv 0.000003 0.626500 0.114297\\nv -0.028957 0.612500 0.087664\\nv -0.062234 0.604626 0.137703\\nv -0.025758 0.617750 0.042602\\nv -0.035137 0.627813 -0.016174\\nv -0.042438 0.603750 -0.082688\\nv 0.001620 0.614687 -0.025457\\nv 0.003049 0.612937 -0.088101\\nv -0.000231 0.612063 0.035656\\nv 0.000357 0.616876 0.084219\\nv 0.000892 0.632626 -0.224219\\nv 0.000007 0.626063 -0.183203\\nv -0.000421 0.608563 -0.140437\\nv -0.017446 0.472060 -0.614687\\nv -0.034157 0.365092 -0.557376\\nv 0.000645 0.448874 -0.607687\\nv -0.066281 0.620376 0.170188\\nv -0.000072 0.635250 -0.600250\\nv 0.000123 0.333592 -0.489563\\nv 0.000598 0.324187 -0.407095\\nv -0.027645 0.535500 -0.612937\\nv -0.000000 0.917000 -0.880686\\nv 0.027002 0.535063 -0.614250\\nv -0.000098 0.497874 -0.621250\\nv -0.000000 0.518000 -0.618187\\nv 0.019360 0.499187 -0.620813\\nv 0.096415 0.511000 -0.583187\\nv 0.054360 0.494374 -0.621250\\nv 0.068796 0.567000 -0.584063\\nv 0.036641 0.503124 -0.617313\\nv 0.035165 0.482124 -0.616000\\nv 0.067925 0.435750 -0.610750\\nv 0.027428 0.435310 -0.605063\\nv 0.092201 0.583187 -0.455437\\nv 0.047249 0.621250 -0.466813\\nv 0.039511 0.618624 -0.410155\\nv 0.080663 0.581437 -0.393531\\nv 0.089358 0.576187 -0.520624\\nv 0.048152 0.614250 -0.517563\\nv 0.043613 0.610313 -0.563063\\nv 0.116594 0.518003 -0.512750\\nv 0.109981 0.445158 -0.571813\\nv 0.077937 0.377345 -0.598063\\nv 0.116712 0.386098 -0.561753\\nv 0.121077 0.525003 -0.427437\\nv 0.128629 0.451940 -0.500500\\nv 0.136182 0.390471 -0.492626\\nv 0.135410 0.458503 -0.406218\\nv 0.145918 0.389816 -0.407095\\nv 0.094609 0.520187 -0.372750\\nv 0.099369 0.455000 -0.363126\\nv 0.101563 0.371437 -0.364218\\nv 0.031224 0.320032 0.088103\\nv 0.021025 0.303408 0.055564\\nv 0.000250 0.296408 0.062564\\nv -0.000000 0.294876 0.022872\\nv 0.017457 0.300124 -0.016706\\nv 0.012952 0.297718 0.021357\\nv 0.126984 0.462000 -0.133328\\nv 0.126547 0.471624 -0.087390\\nv 0.117140 0.422402 -0.073718\\nv 0.109976 0.397468 -0.112218\\nv 0.107297 0.387405 -0.173031\\nv 0.123484 0.457187 -0.185719\\nv 0.097398 0.385876 -0.234500\\nv 0.109922 0.455876 -0.244563\\nv 0.086024 0.389595 -0.290282\\nv 0.099641 0.452374 -0.296405\\nv 0.078535 0.389595 -0.342782\\nv 0.094282 0.451063 -0.331187\\nv 0.046897 0.357000 -0.339500\\nv 0.000133 0.340155 -0.343218\\nv 0.064422 0.314563 -0.164500\\nv 0.062125 0.323532 -0.227719\\nv 0.052910 0.346718 -0.287876\\nv -0.000165 0.326155 -0.290063\\nv 0.060101 0.324842 -0.105109\\nv 0.079837 0.368808 -0.066771\\nv 0.060260 0.339716 -0.064091\\nv 0.028383 0.707437 -0.716187\\nv 0.028246 0.748124 -0.754250\\nv 0.030871 0.642250 -0.637873\\nv 0.029395 0.670687 -0.676373\\nv 0.040523 0.615124 -0.650123\\nv 0.038500 0.648374 -0.689937\\nv 0.037980 0.732813 -0.771750\\nv 0.038254 0.689500 -0.731500\\nv 0.026660 0.790126 -0.789687\\nv 0.036477 0.776563 -0.807187\\nv 0.032156 0.819876 -0.840000\\nv 0.024637 0.833437 -0.823373\\nv 0.020877 0.873250 -0.855750\\nv 0.028000 0.862313 -0.869313\\nv 0.024828 0.903000 -0.896873\\nv 0.018922 0.912626 -0.884187\\nv 0.015996 0.945000 -0.909123\\nv 0.013091 0.966876 -0.927500\\nv 0.020672 0.936250 -0.919623\\nv 0.014451 0.966000 -0.938000\\nv 0.019100 0.854437 -0.882873\\nv 0.017213 0.896000 -0.909123\\nv 0.025498 0.721000 -0.789687\\nv 0.024445 0.765626 -0.825123\\nv 0.025142 0.675937 -0.746813\\nv 0.025621 0.630874 -0.703500\\nv 0.027166 0.593250 -0.662373\\nv 0.010124 0.959876 -0.946750\\nv 0.014601 0.930126 -0.931000\\nv -0.000000 0.763000 -0.829937\\nv -0.000000 0.808063 -0.861000\\nv 0.021232 0.810687 -0.855313\\nv -0.000000 0.851813 -0.888123\\nv -0.000000 0.958126 -0.949373\\nv 0.045637 0.581874 -0.614250\\nv 0.035738 0.619937 -0.598937\\nv 0.027685 0.564813 -0.630437\\nv -0.000000 0.625624 -0.707873\\nv -0.000000 0.588000 -0.666750\\nv -0.000000 0.718376 -0.795373\\nv 0.041945 0.618624 -0.335563\\nv 0.043121 0.615124 -0.275625\\nv 0.088594 0.567000 -0.162750\\nv 0.045172 0.598937 -0.174344\\nv 0.043176 0.591937 -0.133984\\nv 0.085258 0.566563 -0.118125\\nv 0.084274 0.571376 -0.209344\\nv 0.044762 0.608124 -0.217984\\nv 0.076672 0.572250 -0.267750\\nv 0.070054 0.573124 -0.329437\\nv 0.109867 0.517563 -0.197313\\nv 0.114515 0.517563 -0.148313\\nv 0.099914 0.516687 -0.256375\\nv 0.090781 0.507063 -0.317623\\nv 0.117031 0.524563 -0.102648\\nv 0.083672 0.447126 0.162531\\nv 0.098327 0.416282 0.142626\\nv 0.111891 0.485187 0.108172\\nv 0.124142 0.493060 0.020316\\nv 0.129935 0.419997 0.074759\\nv 0.133655 0.431808 0.015751\\nv 0.118561 0.429621 -0.033741\\nv 0.121298 0.481684 -0.039457\\nv 0.113528 0.388500 0.115502\\nv 0.111227 0.346063 0.093519\\nv 0.129384 0.367716 0.052613\\nv 0.132884 0.375586 0.003169\\nv 0.111119 0.381713 -0.036446\\nv 0.029559 0.414968 0.185610\\nv 0.031008 0.443845 0.199610\\nv -0.001518 0.363126 0.161110\\nv -0.001161 0.341905 0.132672\\nv 0.047877 0.351095 0.136939\\nv 0.036175 0.382376 0.161985\\nv 0.065132 0.406000 0.161110\\nv 0.055535 0.433563 0.180360\\nv 0.059883 0.465500 0.191078\\nv 0.063109 0.490000 0.203985\\nv 0.037871 0.466376 0.219516\\nv 0.087664 0.491313 0.175328\\nv 0.076562 0.518876 0.189000\\nv 0.088758 0.528063 0.147438\\nv 0.081156 0.551250 0.175766\\nv 0.076344 0.581437 0.158485\\nv 0.092751 0.560874 0.072898\\nv 0.086078 0.567876 0.122828\\nv 0.099422 0.549937 0.008681\\nv 0.106805 0.534624 -0.051270\\nv 0.060922 0.615563 0.044653\\nv 0.063109 0.602876 0.097836\\nv 0.073172 0.601563 -0.009235\\nv 0.077930 0.579687 -0.064367\\nv 0.032867 0.622126 0.122610\\nv 0.041043 0.641813 0.152688\\nv 0.060758 0.603750 0.137703\\nv 0.032703 0.618187 0.087117\\nv 0.025648 0.618187 0.042492\\nv 0.034781 0.630437 -0.018170\\nv 0.040523 0.600250 -0.081047\\nv 0.017719 0.472497 -0.614250\\nv 0.033857 0.367279 -0.557376\\nv 0.001510 0.388497 -0.574876\\nv 0.000014 0.477747 -0.615563\\nv 0.001904 0.459813 0.219078\\nv 0.066336 0.620376 0.170188\\nv 0.052315 0.355468 -0.383468\\nv -0.000000 0.540750 -0.619063\\nv 0.055993 0.337966 -0.046591\\nv 0.040713 0.310405 -0.061413\\nv 0.000201 0.297937 -0.021000\\nv -0.017104 0.299905 -0.016120\\nv -0.065625 0.403592 0.160672\\nv 0.082520 0.370563 0.125126\\nv 0.065728 0.329658 0.091167\\nv 0.046017 0.067653 0.110485\\nv 0.056435 0.067434 0.120329\\nv 0.056819 0.111074 0.105291\\nv 0.048616 0.085973 0.099220\\nv 0.052799 0.040281 0.135969\\nv 0.056381 0.051520 0.127875\\nv 0.049108 0.037821 0.109938\\nv 0.047795 0.048430 0.108188\\nv 0.043748 0.056880 0.099985\\nv 0.050530 0.094504 0.086806\\nv 0.049435 0.113534 0.080683\\nv 0.056874 0.133769 0.100916\\nv 0.047220 0.129502 0.075542\\nv 0.056982 0.156409 0.096596\\nv 0.056542 0.209891 0.080078\\nv 0.040900 0.198952 0.060009\\nv 0.045004 0.145579 0.070401\\nv 0.041035 0.191295 0.041142\\nv 0.048390 0.182435 0.021879\\nv 0.060154 0.100683 0.061814\\nv 0.046154 0.072739 0.090743\\nv 0.054139 0.063661 0.084672\\nv 0.050967 0.055048 0.091344\\nv 0.057803 0.048567 0.089594\\nv 0.059772 0.015931 0.104633\\nv 0.046783 0.020402 0.116281\\nv 0.040276 0.018268 0.143625\\nv 0.043338 0.001488 0.148110\\nv 0.040330 0.013948 0.167360\\nv 0.044405 0.000364 0.164735\\nv 0.062670 0.002107 0.120547\\nv 0.042436 0.027551 0.161563\\nv 0.053565 0.038968 0.170313\\nv 0.055588 0.041073 0.156204\\nv 0.082084 0.050507 0.162656\\nv 0.080389 0.051738 0.146360\\nv 0.079623 0.061254 0.136188\\nv 0.080443 0.082583 0.127547\\nv 0.081921 0.125239 0.115735\\nv 0.081647 0.143832 0.109938\\nv 0.081428 0.162535 0.104086\\nv 0.108006 0.155644 0.089483\\nv 0.106256 0.136832 0.095937\\nv 0.102592 0.074380 0.116500\\nv 0.104507 0.118020 0.102391\\nv 0.103576 0.042113 0.133563\\nv 0.101608 0.052833 0.123281\\nv 0.108662 0.041292 0.150516\\nv 0.120530 0.017311 0.137500\\nv 0.110522 0.020744 0.112125\\nv 0.112108 0.039596 0.163313\\nv 0.121295 0.028139 0.153797\\nv 0.123155 0.015219 0.158938\\nv 0.116920 0.000117 0.142422\\nv 0.106748 0.038450 0.102391\\nv 0.108170 0.000994 0.128204\\nv 0.101772 0.000322 0.156094\\nv 0.112326 -0.002703 0.157079\\nv 0.118451 0.001649 0.159266\\nv 0.116155 0.023696 0.179282\\nv 0.112327 0.027360 0.177969\\nv 0.108061 0.027674 0.185188\\nv 0.090233 0.023313 0.198204\\nv 0.090561 0.004442 0.190329\\nv 0.103139 0.037163 0.183219\\nv 0.090233 0.034893 0.193938\\nv 0.084545 0.027073 0.197329\\nv 0.083178 0.048401 0.179829\\nv 0.121186 0.027469 0.166922\\nv 0.115827 0.030956 0.175672\\nv 0.064037 0.036780 0.187047\\nv 0.044213 0.026143 0.173813\\nv 0.050530 0.029534 0.182125\\nv 0.077983 0.034018 0.194922\\nv 0.059827 0.026157 0.189782\\nv 0.079405 0.021960 0.199954\\nv 0.054276 0.025774 0.183547\\nv 0.050393 0.022479 0.185516\\nv 0.057420 0.007693 0.180157\\nv 0.064803 0.003503 0.185407\\nv 0.077709 0.003320 0.191204\\nv 0.084108 0.007713 0.191969\\nv 0.069114 0.193481 -0.001984\\nv 0.045704 0.242153 -0.013126\\nv 0.058062 0.262058 -0.031133\\nv 0.070420 0.281963 -0.049154\\nv 0.057078 0.282839 -0.036604\\nv 0.070639 0.303181 -0.053777\\nv 0.070915 0.324402 -0.058400\\nv 0.056096 0.303621 -0.042048\\nv 0.051531 0.315652 -0.042404\\nv 0.105642 0.332713 -0.042077\\nv 0.128175 0.325058 -0.001757\\nv 0.106187 0.304058 -0.039697\\nv 0.106788 0.275183 -0.037317\\nv 0.073990 0.057864 0.076633\\nv 0.076560 0.091605 0.057056\\nv 0.099529 0.092753 0.059134\\nv 0.096631 0.052067 0.081172\\nv 0.076504 0.109596 0.046912\\nv 0.099692 0.111565 0.049508\\nv 0.076394 0.127642 0.036767\\nv 0.099521 0.193811 0.003742\\nv 0.099855 0.130377 0.039883\\nv 0.126642 0.299247 0.001668\\nv 0.125111 0.273217 0.005092\\nv 0.075685 0.030575 0.090524\\nv 0.059881 0.032462 0.095664\\nv 0.068084 0.082582 0.065642\\nv 0.057473 0.116048 0.054268\\nv 0.054847 0.131360 0.046667\\nv 0.059608 0.079793 0.072860\\nv 0.076670 0.014154 0.099875\\nv 0.077764 0.001731 0.117594\\nv 0.094990 0.015877 0.101899\\nv 0.093514 0.000519 0.118360\\nv 0.094826 0.031860 0.091727\\nv 0.079678 -0.002663 0.140672\\nv 0.049299 0.002477 0.131594\\nv 0.060319 -0.000195 0.159157\\nv 0.081592 0.004357 0.165282\\nv 0.071366 -0.003764 0.175782\\nv 0.094498 -0.001331 0.174360\\nv 0.103686 0.005249 0.182891\\nv 0.108608 0.009634 0.175782\\nv 0.050119 -0.004222 0.161782\\nv 0.051569 0.003306 0.178188\\nv 0.125988 0.319808 0.043018\\nv 0.096620 0.310624 0.068967\\nv 0.120192 0.274750 0.044249\\nv 0.123143 0.297279 0.043619\\nv 0.094051 0.289845 0.069023\\nv 0.091483 0.269063 0.069025\\nv 0.084432 0.218752 0.084450\\nv 0.114181 0.214486 0.063776\\nv 0.057959 0.257470 0.070832\\nv 0.062059 0.292908 0.074492\\nv 0.060036 0.275189 0.072635\\nv 0.063920 0.311284 0.082802\\nv 0.037642 0.248062 0.049068\\nv 0.033814 0.280000 0.052344\\nv 0.035727 0.264031 0.050706\\nv 0.028597 0.305813 0.062456\\nv 0.031190 0.292908 0.057428\\nv 0.025449 0.287655 0.017698\\nv 0.027648 0.277374 0.016141\\nv 0.032309 0.260530 0.018181\\nv 0.036984 0.243685 0.020207\\nv 0.117351 0.203109 0.031675\\nv 0.115387 0.140987 0.062030\\nv 0.112654 0.122285 0.069359\\nv 0.108334 0.059450 0.094133\\nv 0.110029 0.103473 0.076688\\nv 0.112545 0.004330 0.172282\\nv 0.041277 0.282842 -0.025709\\nv 0.043490 0.262497 -0.019417\\nv 0.036712 0.294874 -0.026052\\nv 0.023267 0.297937 0.019239\\nv 0.032154 0.307124 -0.026399\\nv -0.140124 0.326379 -0.431158\\nv -0.143075 0.358098 -0.419126\\nv -0.138918 0.362034 -0.493063\\nv -0.141653 0.333598 -0.493500\\nv -0.122291 0.330971 -0.551250\\nv -0.119557 0.358534 -0.556500\\nv -0.124041 0.306471 -0.549939\\nv -0.143731 0.305813 -0.499189\\nv -0.119014 0.309098 -0.397468\\nv -0.110371 0.340376 -0.380845\\nv -0.145591 0.266439 -0.460253\\nv -0.142858 0.296408 -0.445595\\nv -0.145698 0.278251 -0.505316\\nv -0.147224 0.220609 -0.531563\\nv -0.145476 0.210875 -0.500939\\nv -0.152033 0.167562 -0.564813\\nv -0.150065 0.163297 -0.532876\\nv -0.131141 0.171062 -0.589750\\nv -0.107789 0.168656 -0.607250\\nv -0.111016 0.150828 -0.604187\\nv -0.133766 0.149843 -0.589750\\nv -0.136501 0.128625 -0.589750\\nv -0.152798 0.128406 -0.567437\\nv -0.152361 0.147984 -0.566126\\nv -0.127207 0.226625 -0.557813\\nv -0.125899 0.282190 -0.549063\\nv -0.103744 0.227063 -0.584060\\nv -0.100789 0.151156 -0.597623\\nv -0.093790 0.133547 -0.587997\\nv -0.099916 0.071531 -0.549500\\nv -0.125674 0.070437 -0.556937\\nv -0.114297 0.132891 -0.600687\\nv -0.148424 0.071094 -0.554310\\nv -0.092096 0.165047 -0.552560\\nv -0.092040 0.151594 -0.585374\\nv -0.090345 0.169641 -0.582747\\nv -0.104892 0.027344 -0.510124\\nv -0.130267 0.024103 -0.516687\\nv -0.153783 0.027453 -0.514060\\nv -0.131470 0.011976 -0.497437\\nv -0.153236 0.014205 -0.495250\\nv -0.153564 0.020822 -0.504437\\nv -0.130924 0.018047 -0.507060\\nv -0.163627 0.036312 -0.503124\\nv -0.164939 0.028984 -0.493500\\nv -0.166142 0.021642 -0.483437\\nv -0.147767 0.006586 -0.479937\\nv -0.161111 0.006719 -0.469000\\nv -0.161767 0.078859 -0.538560\\nv -0.108392 0.014109 -0.493060\\nv -0.106642 0.020726 -0.501810\\nv -0.132018 0.005369 -0.482124\\nv -0.133002 0.000100 -0.463750\\nv -0.154330 0.004788 -0.438813\\nv -0.134861 0.005301 -0.430063\\nv -0.148096 0.001806 -0.421313\\nv -0.141861 0.006289 -0.404687\\nv -0.136064 0.009905 -0.401624\\nv -0.130486 0.005974 -0.403813\\nv -0.124143 0.002561 -0.419342\\nv -0.114299 0.002929 -0.437063\\nv -0.117580 0.006538 -0.409718\\nv -0.110416 0.011067 -0.414968\\nv -0.104947 0.006723 -0.417813\\nv -0.103963 0.001950 -0.434000\\nv -0.098713 0.004751 -0.431592\\nv -0.116377 0.006320 -0.479063\\nv -0.164721 0.003992 -0.436842\\nv -0.168658 0.005096 -0.451500\\nv -0.170955 0.006350 -0.434437\\nv -0.160455 0.013213 -0.417592\\nv -0.159471 0.030871 -0.406874\\nv -0.164174 0.031664 -0.413437\\nv -0.167127 0.025990 -0.413000\\nv -0.174674 0.021984 -0.431374\\nv -0.173252 0.023420 -0.454124\\nv -0.141096 0.024541 -0.394842\\nv -0.164283 0.046074 -0.426123\\nv -0.167346 0.034753 -0.416282\\nv -0.172377 0.032812 -0.426123\\nv -0.174127 0.034234 -0.436405\\nv -0.161002 0.049027 -0.440342\\nv -0.135189 0.057750 -0.428968\\nv -0.135846 0.052773 -0.411250\\nv -0.133220 0.057750 -0.452813\\nv -0.157283 0.046894 -0.463750\\nv -0.107353 0.045691 -0.435968\\nv -0.107244 0.043422 -0.463313\\nv -0.133111 0.066500 -0.473810\\nv -0.156845 0.055344 -0.484310\\nv -0.157064 0.051105 -0.474250\\nv -0.133111 0.062125 -0.463313\\nv -0.108119 0.093461 -0.510560\\nv -0.133549 0.101008 -0.501810\\nv -0.108392 0.055918 -0.482124\\nv -0.107791 0.049656 -0.472500\\nv -0.095049 0.022709 -0.451937\\nv -0.101174 0.033058 -0.457624\\nv -0.158486 0.093023 -0.514937\\nv -0.150393 0.131359 -0.537687\\nv -0.135737 0.134422 -0.522813\\nv -0.110416 0.131360 -0.530687\\nv -0.094994 0.079953 -0.531124\\nv -0.092697 0.126875 -0.556060\\nv -0.150284 0.147328 -0.535063\\nv -0.135300 0.148313 -0.519750\\nv -0.109597 0.146782 -0.527187\\nv -0.092369 0.145907 -0.554310\\nv -0.108832 0.162204 -0.523687\\nv -0.097024 0.204970 -0.490437\\nv -0.126665 0.204423 -0.481250\\nv -0.134863 0.162203 -0.516250\\nv -0.121858 0.255283 -0.437500\\nv -0.120437 0.282190 -0.417376\\nv -0.085489 0.252221 -0.449747\\nv -0.078925 0.311063 -0.410155\\nv -0.082208 0.281753 -0.430060\\nv -0.090299 0.341250 -0.387187\\nv -0.065688 0.333376 -0.396813\\nv -0.071158 0.257908 -0.495684\\nv -0.062791 0.281532 -0.486497\\nv -0.086793 0.223673 -0.557374\\nv -0.095163 0.273001 -0.581000\\nv -0.078868 0.271032 -0.540310\\nv -0.087561 0.214486 -0.525873\\nv -0.031315 0.334905 -0.466810\\nv -0.042883 0.319813 -0.472500\\nv -0.047040 0.341250 -0.551250\\nv -0.054478 0.304940 -0.477750\\nv -0.069408 0.294218 -0.542937\\nv -0.059947 0.317405 -0.545560\\nv -0.081274 0.346718 -0.590623\\nv -0.090735 0.296408 -0.581437\\nv -0.086306 0.320032 -0.581437\\nv -0.098057 0.029667 -0.420874\\nv -0.107572 0.043394 -0.420437\\nv -0.103416 0.033058 -0.411905\\nv -0.096416 0.032047 -0.433123\\nv -0.115830 0.037953 -0.406437\\nv -0.130268 0.037488 -0.398342\\nv -0.094611 0.017527 -0.428092\\nv -0.103471 0.025457 -0.409282\\nv -0.107353 0.029176 -0.410813\\nv -0.112549 0.029230 -0.404687\\nv -0.131799 0.024130 -0.394842\\nv -0.136174 0.029148 -0.395500\\nv -0.142846 0.037652 -0.398782\\nv -0.156846 0.039785 -0.407532\\nv -0.095541 0.034398 -0.495687\\nv -0.096088 0.026058 -0.489124\\nv -0.103853 0.007191 -0.467687\\nv -0.096580 0.017732 -0.483000\\nv -0.097947 0.006316 -0.447782\\nv -0.155533 0.007950 -0.411468\\nv -0.164393 0.007902 -0.421313\\nv 0.143076 0.358098 -0.419126\\nv 0.138919 0.362034 -0.493066\\nv 0.119557 0.358534 -0.556503\\nv 0.122292 0.330971 -0.551253\\nv 0.141654 0.333598 -0.493503\\nv 0.143732 0.305813 -0.499192\\nv 0.124041 0.306471 -0.549942\\nv 0.110317 0.340376 -0.380845\\nv 0.140125 0.326376 -0.431161\\nv 0.142860 0.296408 -0.445598\\nv 0.145475 0.210874 -0.500942\\nv 0.147223 0.220609 -0.531569\\nv 0.145698 0.278251 -0.505319\\nv 0.145592 0.266438 -0.460256\\nv 0.150063 0.163297 -0.532879\\nv 0.152030 0.167562 -0.564819\\nv 0.131138 0.171063 -0.589753\\nv 0.133763 0.149844 -0.589753\\nv 0.111012 0.150829 -0.604190\\nv 0.107786 0.168657 -0.607253\\nv 0.136497 0.128625 -0.589753\\nv 0.152358 0.147984 -0.566129\\nv 0.152795 0.128406 -0.567442\\nv 0.127205 0.226625 -0.558256\\nv 0.125899 0.282190 -0.549066\\nv 0.105547 0.226189 -0.583626\\nv 0.100786 0.151157 -0.597626\\nv 0.125671 0.070438 -0.556940\\nv 0.099913 0.071532 -0.549503\\nv 0.093786 0.133548 -0.588003\\nv 0.114294 0.132891 -0.600690\\nv 0.148421 0.071094 -0.554316\\nv 0.092694 0.126876 -0.556066\\nv 0.092366 0.145907 -0.554313\\nv 0.092037 0.151595 -0.585376\\nv 0.104889 0.027344 -0.510129\\nv 0.130264 0.024104 -0.516690\\nv 0.153780 0.027454 -0.514066\\nv 0.153561 0.020823 -0.504440\\nv 0.130921 0.018047 -0.507066\\nv 0.153233 0.014206 -0.495253\\nv 0.164936 0.028985 -0.493503\\nv 0.166139 0.021643 -0.483440\\nv 0.161108 0.006720 -0.469003\\nv 0.147764 0.006587 -0.479940\\nv 0.161764 0.078860 -0.538566\\nv 0.163624 0.036313 -0.503126\\nv 0.106639 0.020727 -0.501816\\nv 0.132014 0.005370 -0.482129\\nv 0.131467 0.011977 -0.497440\\nv 0.132998 0.000100 -0.463753\\nv 0.154326 0.004789 -0.438816\\nv 0.134858 0.005302 -0.430066\\nv 0.148092 0.001807 -0.421316\\nv 0.141858 0.006289 -0.404690\\nv 0.124139 0.002562 -0.419348\\nv 0.114295 0.002930 -0.437066\\nv 0.117576 0.006539 -0.409721\\nv 0.103959 0.001950 -0.434003\\nv 0.097944 0.006317 -0.447784\\nv 0.116374 0.006320 -0.479066\\nv 0.108389 0.014110 -0.493066\\nv 0.164717 0.003993 -0.436848\\nv 0.168655 0.005097 -0.451503\\nv 0.170951 0.006351 -0.434440\\nv 0.164389 0.007903 -0.421316\\nv 0.159467 0.030871 -0.406879\\nv 0.155530 0.007951 -0.411471\\nv 0.164170 0.031664 -0.413440\\nv 0.167123 0.025991 -0.413003\\nv 0.174670 0.021985 -0.431379\\nv 0.173248 0.023420 -0.454129\\nv 0.136061 0.009906 -0.401629\\nv 0.141092 0.024541 -0.394848\\nv 0.164280 0.046075 -0.426129\\nv 0.167342 0.034754 -0.416284\\nv 0.172373 0.032813 -0.426129\\nv 0.174123 0.034235 -0.436411\\nv 0.160998 0.049028 -0.440348\\nv 0.135186 0.057750 -0.428971\\nv 0.135842 0.052774 -0.411253\\nv 0.157280 0.046895 -0.463753\\nv 0.133217 0.057696 -0.452816\\nv 0.107131 0.042766 -0.462440\\nv 0.107350 0.045692 -0.435971\\nv 0.157061 0.051106 -0.474253\\nv 0.133108 0.062126 -0.463316\\nv 0.108116 0.093462 -0.510566\\nv 0.107952 0.055344 -0.482129\\nv 0.133108 0.066501 -0.473816\\nv 0.133546 0.101008 -0.501816\\nv 0.107569 0.049055 -0.472066\\nv 0.095209 0.022600 -0.451940\\nv 0.158483 0.093024 -0.514940\\nv 0.156842 0.055344 -0.484316\\nv 0.150390 0.131360 -0.537692\\nv 0.135734 0.134422 -0.522816\\nv 0.110413 0.131360 -0.530690\\nv 0.094991 0.079954 -0.531126\\nv 0.150281 0.147328 -0.535066\\nv 0.134861 0.162203 -0.516256\\nv 0.135297 0.148313 -0.519753\\nv 0.109594 0.146782 -0.527190\\nv 0.108829 0.162204 -0.523690\\nv 0.097023 0.204970 -0.490440\\nv 0.087559 0.214486 -0.525876\\nv 0.126664 0.204422 -0.481256\\nv 0.121859 0.255282 -0.437503\\nv 0.120439 0.282190 -0.417379\\nv 0.085490 0.252221 -0.449750\\nv 0.082209 0.281753 -0.430063\\nv 0.078926 0.311063 -0.410158\\nv 0.119016 0.309095 -0.397471\\nv 0.090246 0.341250 -0.387190\\nv 0.065635 0.333376 -0.396813\\nv 0.032053 0.334468 -0.467250\\nv 0.043266 0.319813 -0.472500\\nv 0.062792 0.281532 -0.486500\\nv 0.098990 0.274970 -0.579689\\nv 0.086791 0.223674 -0.557376\\nv 0.078868 0.271252 -0.539876\\nv 0.090342 0.169642 -0.582753\\nv 0.092093 0.165048 -0.552563\\nv 0.059947 0.317408 -0.545563\\nv 0.046903 0.342345 -0.551250\\nv 0.069408 0.294221 -0.542500\\nv 0.071158 0.257908 -0.495687\\nv 0.083134 0.349126 -0.590189\\nv 0.088330 0.320908 -0.581876\\nv 0.093633 0.297940 -0.581003\\nv 0.098053 0.029668 -0.420879\\nv 0.103412 0.033059 -0.411911\\nv 0.107569 0.043395 -0.420440\\nv 0.096412 0.032047 -0.433129\\nv 0.115826 0.037954 -0.406440\\nv 0.130264 0.037489 -0.398348\\nv 0.094608 0.017528 -0.428098\\nv 0.103467 0.025457 -0.409284\\nv 0.107350 0.029176 -0.410816\\nv 0.112545 0.029231 -0.404690\\nv 0.131795 0.024131 -0.394848\\nv 0.136170 0.029149 -0.395503\\nv 0.142842 0.037653 -0.398784\\nv 0.156842 0.039786 -0.407534\\nv 0.104944 0.006724 -0.417816\\nv 0.110412 0.011068 -0.414971\\nv 0.130483 0.005975 -0.403816\\nv 0.095538 0.035958 -0.499629\\nv 0.096139 0.028055 -0.490879\\nv 0.096741 0.020153 -0.482566\\nv 0.103850 0.007192 -0.467690\\nv 0.098709 0.004751 -0.431598\\nv 0.160451 0.013214 -0.417598\\nv 0.054478 0.304940 -0.477750\\nvt 0.200562 0.137695\\nvt 0.204956 0.137695\\nvt 0.204956 0.148437\\nvt 0.198730 0.147949\\nvt 0.201660 0.131836\\nvt 0.204956 0.129883\\nvt 0.204956 0.157715\\nvt 0.196777 0.157227\\nvt 0.193726 0.137695\\nvt 0.190552 0.145996\\nvt 0.189331 0.133301\\nvt 0.196167 0.132812\\nvt 0.193237 0.130859\\nvt 0.183960 0.142578\\nvt 0.187622 0.156250\\nvt 0.204956 0.167480\\nvt 0.192139 0.168457\\nvt 0.181030 0.133301\\nvt 0.173462 0.139648\\nvt 0.179199 0.151367\\nvt 0.183228 0.167480\\nvt 0.204956 0.184082\\nvt 0.188721 0.185059\\nvt 0.204956 0.204590\\nvt 0.186035 0.205078\\nvt 0.178101 0.184570\\nvt 0.173828 0.160645\\nvt 0.204956 0.238770\\nvt 0.179932 0.238281\\nvt 0.164429 0.211426\\nvt 0.171265 0.182129\\nvt 0.172119 0.171387\\nvt 0.156982 0.196289\\nvt 0.159180 0.238281\\nvt 0.128052 0.209473\\nvt 0.133545 0.197754\\nvt 0.124207 0.184570\\nvt 0.110474 0.187012\\nvt 0.124512 0.166016\\nvt 0.133667 0.170410\\nvt 0.124084 0.242676\\nvt 0.150391 0.272461\\nvt 0.127563 0.258789\\nvt 0.111816 0.225586\\nvt 0.076416 0.184570\\nvt 0.095886 0.244629\\nvt 0.063171 0.223145\\nvt 0.075622 0.156738\\nvt 0.093872 0.268066\\nvt 0.081115 0.261230\\nvt 0.073425 0.250488\\nvt 0.055511 0.299316\\nvt 0.063476 0.296875\\nvt 0.071716 0.319336\\nvt 0.060302 0.272949\\nvt 0.074279 0.288086\\nvt 0.095520 0.288574\\nvt 0.101013 0.268555\\nvt 0.116089 0.280762\\nvt 0.108582 0.300781\\nvt 0.094604 0.320801\\nvt 0.132446 0.283203\\nvt 0.124878 0.312500\\nvt 0.083374 0.341797\\nvt 0.200195 0.123535\\nvt 0.204834 0.121094\\nvt 0.204956 0.125000\\nvt 0.199951 0.127930\\nvt 0.194580 0.125488\\nvt 0.196533 0.128906\\nvt 0.197754 0.129883\\nvt 0.204102 0.113770\\nvt 0.193481 0.115723\\nvt 0.183838 0.119141\\nvt 0.179688 0.126953\\nvt 0.166260 0.127441\\nvt 0.175171 0.112305\\nvt 0.190674 0.107910\\nvt 0.197998 0.108887\\nvt 0.191528 0.105957\\nvt 0.179565 0.104980\\nvt 0.179443 0.104492\\nvt 0.163208 0.108398\\nvt 0.163208 0.108887\\nvt 0.163208 0.107910\\nvt 0.179321 0.104004\\nvt 0.191772 0.102539\\nvt 0.191284 0.104004\\nvt 0.191284 0.104492\\nvt 0.199097 0.106934\\nvt 0.199829 0.107422\\nvt 0.199707 0.104980\\nvt 0.198730 0.105957\\nvt 0.159546 0.105957\\nvt 0.180542 0.099609\\nvt 0.180298 0.100586\\nvt 0.159790 0.106445\\nvt 0.191772 0.100586\\nvt 0.191528 0.101562\\nvt 0.204956 0.100098\\nvt 0.204956 0.102051\\nvt 0.191650 0.099121\\nvt 0.191406 0.097168\\nvt 0.204956 0.047363\\nvt 0.204956 0.069336\\nvt 0.175537 0.076660\\nvt 0.163086 0.064453\\nvt 0.178589 0.091797\\nvt 0.158936 0.101562\\nvt 0.204956 0.079590\\nvt 0.192871 0.083008\\nvt 0.191772 0.089844\\nvt 0.204956 0.093262\\nvt 0.180542 0.098145\\nvt 0.180542 0.099121\\nvt 0.204956 0.103516\\nvt 0.159546 0.105469\\nvt 0.152710 0.049805\\nvt 0.204956 0.032715\\nvt 0.147949 0.107422\\nvt 0.137451 0.097656\\nvt 0.153931 0.105469\\nvt 0.125244 0.080078\\nvt 0.125854 0.112793\\nvt 0.096801 0.112305\\nvt 0.146484 0.113770\\nvt 0.151367 0.112793\\nvt 0.153442 0.108887\\nvt 0.160400 0.106934\\nvt 0.155762 0.108887\\nvt 0.160645 0.107422\\nvt 0.152710 0.111816\\nvt 0.152344 0.112305\\nvt 0.155640 0.110352\\nvt 0.157959 0.108398\\nvt 0.151367 0.116699\\nvt 0.135498 0.121582\\nvt 0.158081 0.110840\\nvt 0.157715 0.110352\\nvt 0.157837 0.109863\\nvt 0.158447 0.108887\\nvt 0.156128 0.117187\\nvt 0.163208 0.107422\\nvt 0.179443 0.102539\\nvt 0.158813 0.108398\\nvt 0.163208 0.106934\\nvt 0.199951 0.104004\\nvt 0.204712 0.109375\\nvt 0.204590 0.111816\\nvt 0.884277 0.566406\\nvt 0.865234 0.550293\\nvt 0.887695 0.555176\\nvt 0.712402 0.893921\\nvt 0.737793 0.904786\\nvt 0.739258 0.931031\\nvt 0.717285 0.919373\\nvt 0.679199 0.877686\\nvt 0.687500 0.907593\\nvt 0.659180 0.896118\\nvt 0.644043 0.871460\\nvt 0.628906 0.898193\\nvt 0.609863 0.876221\\nvt 0.609863 0.950104\\nvt 0.596680 0.934815\\nvt 0.607910 0.916687\\nvt 0.600586 0.969803\\nvt 0.587891 0.957215\\nvt 0.579102 0.971604\\nvt 0.584473 0.979706\\nvt 0.568359 0.988999\\nvt 0.568359 0.981995\\nvt 0.569824 0.969605\\nvt 0.577148 0.942200\\nvt 0.584473 0.916871\\nvt 0.594727 0.898071\\nvt 0.562500 0.935181\\nvt 0.558594 0.906311\\nvt 0.550781 0.943512\\nvt 0.555176 0.970200\\nvt 0.542480 0.962006\\nvt 0.562500 0.988900\\nvt 0.552734 0.976395\\nvt 0.552246 0.978699\\nvt 0.567871 0.990403\\nvt 0.584961 0.980607\\nvt 0.614258 0.963990\\nvt 0.645020 0.957398\\nvt 0.642090 0.918396\\nvt 0.691895 0.929017\\nvt 0.737793 0.947693\\nvt 0.761230 0.937714\\nvt 0.762207 0.916321\\nvt 0.892090 0.575928\\nvt 0.885742 0.572266\\nvt 0.893066 0.569336\\nvt 0.204956 0.014648\\nvt 0.112427 0.064941\\nvt 0.094726 0.140137\\nvt 0.116577 0.128418\\nvt 0.134644 0.152344\\nvt 0.146362 0.142090\\nvt 0.149658 0.132324\\nvt 0.155151 0.157227\\nvt 0.161377 0.150391\\nvt 0.168823 0.168945\\nvt 0.175537 0.166016\\nvt 0.166626 0.173828\\nvt 0.161133 0.170898\\nvt 0.164673 0.166504\\nvt 0.152466 0.163574\\nvt 0.151367 0.170410\\nvt 0.138672 0.175293\\nvt 0.151855 0.171387\\nvt 0.162476 0.175293\\nvt 0.165771 0.181641\\nvt 0.156250 0.187012\\nvt 0.153931 0.189941\\nvt 0.144409 0.190430\\nvt 0.139404 0.190918\\nvt 0.133911 0.183594\\nvt 0.873047 0.549316\\nvt 0.887695 0.548828\\nvt 0.499512 0.938508\\nvt 0.499512 0.918580\\nvt 0.521973 0.919129\\nvt 0.499512 0.897888\\nvt 0.528320 0.902283\\nvt 0.499512 0.874146\\nvt 0.529297 0.876282\\nvt 0.539551 0.926087\\nvt 0.560059 0.886230\\nvt 0.882324 0.577393\\nvt 0.888672 0.581787\\nvt 0.176147 0.280762\\nvt 0.873535 0.543945\\nvt 0.885742 0.543457\\nvt 0.889648 0.527588\\nvt 0.901367 0.514648\\nvt 0.901367 0.524414\\nvt 0.894043 0.541992\\nvt 0.901367 0.540283\\nvt 0.895508 0.547852\\nvt 0.901367 0.545898\\nvt 0.895996 0.556885\\nvt 0.901367 0.557129\\nvt 0.209106 0.137695\\nvt 0.211060 0.147949\\nvt 0.208008 0.131836\\nvt 0.212891 0.157227\\nvt 0.215942 0.137695\\nvt 0.219238 0.145996\\nvt 0.220459 0.133301\\nvt 0.213501 0.132812\\nvt 0.216553 0.130859\\nvt 0.225830 0.142578\\nvt 0.222046 0.156250\\nvt 0.217651 0.168457\\nvt 0.228760 0.133301\\nvt 0.236328 0.139648\\nvt 0.230469 0.151367\\nvt 0.226440 0.167480\\nvt 0.220947 0.185059\\nvt 0.223755 0.205078\\nvt 0.231567 0.184570\\nvt 0.235840 0.160645\\nvt 0.229858 0.238281\\nvt 0.245239 0.211426\\nvt 0.237549 0.171387\\nvt 0.238525 0.182129\\nvt 0.252686 0.196289\\nvt 0.250488 0.238281\\nvt 0.281738 0.209473\\nvt 0.276123 0.197754\\nvt 0.285400 0.166016\\nvt 0.299316 0.187012\\nvt 0.285400 0.184570\\nvt 0.276123 0.170410\\nvt 0.259277 0.272461\\nvt 0.285645 0.242676\\nvt 0.282227 0.258789\\nvt 0.297852 0.225586\\nvt 0.333496 0.184570\\nvt 0.342529 0.240234\\nvt 0.313721 0.244629\\nvt 0.346680 0.223145\\nvt 0.334229 0.156738\\nvt 0.336426 0.250488\\nvt 0.328613 0.261230\\nvt 0.315918 0.268066\\nvt 0.349365 0.272949\\nvt 0.358398 0.270508\\nvt 0.346191 0.296875\\nvt 0.335449 0.288086\\nvt 0.314209 0.288574\\nvt 0.308594 0.268555\\nvt 0.337891 0.319336\\nvt 0.293701 0.280762\\nvt 0.301025 0.300781\\nvt 0.315186 0.320801\\nvt 0.277344 0.283203\\nvt 0.326416 0.341797\\nvt 0.305908 0.328125\\nvt 0.347900 0.319824\\nvt 0.336670 0.340820\\nvt 0.209473 0.123535\\nvt 0.209839 0.127930\\nvt 0.215088 0.125488\\nvt 0.213257 0.128906\\nvt 0.211914 0.129883\\nvt 0.205688 0.113770\\nvt 0.216187 0.115723\\nvt 0.225952 0.119141\\nvt 0.229980 0.126953\\nvt 0.243530 0.127441\\nvt 0.234619 0.112305\\nvt 0.219116 0.107422\\nvt 0.211670 0.109375\\nvt 0.218140 0.105957\\nvt 0.230103 0.104980\\nvt 0.230225 0.104492\\nvt 0.246460 0.108398\\nvt 0.246460 0.108887\\nvt 0.230469 0.104004\\nvt 0.246460 0.107910\\nvt 0.217773 0.102539\\nvt 0.218628 0.104492\\nvt 0.218262 0.104980\\nvt 0.210449 0.106934\\nvt 0.210327 0.107422\\nvt 0.210571 0.106445\\nvt 0.210083 0.104980\\nvt 0.229370 0.100586\\nvt 0.229248 0.099609\\nvt 0.250000 0.105957\\nvt 0.249878 0.106445\\nvt 0.218140 0.099121\\nvt 0.218262 0.097168\\nvt 0.234253 0.076660\\nvt 0.246704 0.064453\\nvt 0.231079 0.091797\\nvt 0.250732 0.101562\\nvt 0.216797 0.083008\\nvt 0.218018 0.089844\\nvt 0.229126 0.098145\\nvt 0.218018 0.100586\\nvt 0.229126 0.099121\\nvt 0.250244 0.105469\\nvt 0.257080 0.049805\\nvt 0.261719 0.107422\\nvt 0.272217 0.097656\\nvt 0.255859 0.104980\\nvt 0.264160 0.029297\\nvt 0.284424 0.080078\\nvt 0.312988 0.112305\\nvt 0.283936 0.112793\\nvt 0.263184 0.113770\\nvt 0.258301 0.112793\\nvt 0.249268 0.106934\\nvt 0.230713 0.101562\\nvt 0.256348 0.108887\\nvt 0.253906 0.108887\\nvt 0.257080 0.111816\\nvt 0.257324 0.112305\\nvt 0.254150 0.110352\\nvt 0.251953 0.108887\\nvt 0.251221 0.108887\\nvt 0.274170 0.121582\\nvt 0.258301 0.116699\\nvt 0.251709 0.110840\\nvt 0.251953 0.110352\\nvt 0.251953 0.109863\\nvt 0.253662 0.117187\\nvt 0.246460 0.107422\\nvt 0.230225 0.102539\\nvt 0.229858 0.101562\\nvt 0.246460 0.106934\\nvt 0.218018 0.102051\\nvt 0.209839 0.104004\\nvt 0.901367 0.569336\\nvt 0.909668 0.569336\\nvt 0.910645 0.575928\\nvt 0.286621 0.893921\\nvt 0.281738 0.919373\\nvt 0.260010 0.931031\\nvt 0.261230 0.904786\\nvt 0.319824 0.877686\\nvt 0.311523 0.907593\\nvt 0.354980 0.871460\\nvt 0.339844 0.896118\\nvt 0.389404 0.876221\\nvt 0.370117 0.898193\\nvt 0.391113 0.916687\\nvt 0.402344 0.934815\\nvt 0.389404 0.950104\\nvt 0.398438 0.969803\\nvt 0.411133 0.957215\\nvt 0.419922 0.971604\\nvt 0.414551 0.979706\\nvt 0.430664 0.981995\\nvt 0.430908 0.988999\\nvt 0.422119 0.942200\\nvt 0.429443 0.969605\\nvt 0.414551 0.916871\\nvt 0.404297 0.898071\\nvt 0.440430 0.906311\\nvt 0.436523 0.935181\\nvt 0.448242 0.943512\\nvt 0.443848 0.970200\\nvt 0.456543 0.962006\\nvt 0.436523 0.988900\\nvt 0.446289 0.976395\\nvt 0.397217 0.970002\\nvt 0.356934 0.918396\\nvt 0.336914 0.918213\\nvt 0.918457 0.566406\\nvt 0.916992 0.572510\\nvt 0.314941 0.140137\\nvt 0.349854 0.109863\\nvt 0.293213 0.128418\\nvt 0.275146 0.152344\\nvt 0.263428 0.142090\\nvt 0.260010 0.132324\\nvt 0.254639 0.157227\\nvt 0.248291 0.150391\\nvt 0.240845 0.168945\\nvt 0.243164 0.173828\\nvt 0.234253 0.166016\\nvt 0.245117 0.166504\\nvt 0.248657 0.170898\\nvt 0.257324 0.163574\\nvt 0.258301 0.170410\\nvt 0.270996 0.175293\\nvt 0.257813 0.171387\\nvt 0.247192 0.175293\\nvt 0.253662 0.187012\\nvt 0.244019 0.181641\\nvt 0.255859 0.189941\\nvt 0.275879 0.183594\\nvt 0.270264 0.190918\\nvt 0.929688 0.562012\\nvt 0.915039 0.555420\\nvt 0.915039 0.548828\\nvt 0.929688 0.549316\\nvt 0.477051 0.919129\\nvt 0.480713 0.937989\\nvt 0.470703 0.902283\\nvt 0.469971 0.875916\\nvt 0.459717 0.926087\\nvt 0.438965 0.887207\\nvt 0.936035 0.540039\\nvt 0.929199 0.543945\\nvt 0.916992 0.543457\\nvt 0.923828 0.530029\\nvt 0.913086 0.527588\\nvt 0.908691 0.541992\\nvt 0.907227 0.547852\\nvt 0.906738 0.556885\\nvt 0.762695 0.291504\\nvt 0.772949 0.315918\\nvt 0.769531 0.291992\\nvt 0.762695 0.330078\\nvt 0.750000 0.305664\\nvt 0.759277 0.309570\\nvt 0.744141 0.329102\\nvt 0.771973 0.336914\\nvt 0.782715 0.312012\\nvt 0.771973 0.315430\\nvt 0.791016 0.336426\\nvt 0.781738 0.330078\\nvt 0.748535 0.292969\\nvt 0.750488 0.333984\\nvt 0.771973 0.292969\\nvt 0.760254 0.294922\\nvt 0.733887 0.332031\\nvt 0.763184 0.333496\\nvt 0.735352 0.331055\\nvt 0.771973 0.295898\\nvt 0.746582 0.292969\\nvt 0.772949 0.335449\\nvt 0.777344 0.313477\\nvt 0.756348 0.327148\\nvt 0.760742 0.311523\\nvt 0.761719 0.291504\\nvt 0.763672 0.330078\\nvt 0.777344 0.307617\\nvt 0.784180 0.330078\\nvt 0.766113 0.311523\\nvt 0.778809 0.333496\\nvt 0.789551 0.310059\\nvt 0.799316 0.336426\\nvt 0.763184 0.315918\\nvt 0.783203 0.330566\\nvt 0.759277 0.330078\\nvt 0.738770 0.292969\\nvt 0.771484 0.330078\\nvt 0.737305 0.330078\\nvt 0.775879 0.330078\\nvt 0.741699 0.292480\\nvt 0.775391 0.292480\\nvt 0.785645 0.291992\\nvt 0.762207 0.329590\\nvt 0.764648 0.292969\\nvt 0.770020 0.291992\\nvt 0.742676 0.291992\\nvt 0.751953 0.326172\\nvt 0.782715 0.291992\\nvt 0.791992 0.330566\\nvt 0.778809 0.329590\\nvt 0.769531 0.315918\\nvt 0.768066 0.332031\\nvt 0.789551 0.309082\\nvt 0.797852 0.330078\\nvt 0.755371 0.315430\\nvt 0.748047 0.292969\\nvt 0.741211 0.330078\\nvt 0.751953 0.330078\\nvt 0.753418 0.292480\\nvt 0.726563 0.330078\\nvt 0.744629 0.330078\\nvt 0.777832 0.330078\\nvt 0.796875 0.330078\\nvt 0.779297 0.306152\\nvt 0.780762 0.330078\\nvt 0.782715 0.328613\\nvt 0.766113 0.293457\\nvt 0.776367 0.293457\\nvt 0.773438 0.329102\\nvt 0.776855 0.291992\\nvt 0.780273 0.315918\\nvt 0.793945 0.330078\\nvt 0.779297 0.330078\\nvt 0.770508 0.310059\\nvt 0.764160 0.330078\\nvt 0.757813 0.330078\\nvt 0.747559 0.307129\\nvt 0.740723 0.330078\\nvt 0.780762 0.309570\\nvt 0.763184 0.291992\\nvt 0.759277 0.292480\\nvt 0.749512 0.311035\\nvt 0.789551 0.304687\\nvt 0.781250 0.330078\\nvt 0.740234 0.311523\\nvt 0.730469 0.336426\\nvt 0.748047 0.330078\\nvt 0.753418 0.313965\\nvt 0.757324 0.292480\\nvt 0.750000 0.304687\\nvt 0.742676 0.330078\\nvt 0.735840 0.331055\\nvt 0.771973 0.296387\\nvt 0.764160 0.292969\\nvt 0.747070 0.330078\\nvt 0.728027 0.330078\\nvt 0.739746 0.306641\\nvt 0.780273 0.316406\\nvt 0.761719 0.292969\\nvt 0.794922 0.329590\\nvt 0.786133 0.291992\\nvt 0.770996 0.291992\\nvt 0.741699 0.291992\\nvt 0.743652 0.329590\\nvt 0.751465 0.326660\\nvt 0.740234 0.305176\\nvt 0.727051 0.330078\\nvt 0.770508 0.291992\\nvt 0.780273 0.310059\\nvt 0.789551 0.305664\\nvt 0.779297 0.305664\\nvt 0.733398 0.292969\\nvt 0.741699 0.337402\\nvt 0.745605 0.310059\\nvt 0.787109 0.292480\\nvt 0.779785 0.330078\\nvt 0.794922 0.330078\\nvt 0.756348 0.312012\\nvt 0.762695 0.292969\\nvt 0.770508 0.292969\\nvt 0.778809 0.312988\\nvt 0.743652 0.310547\\nvt 0.751465 0.292969\\nvt 0.758789 0.292969\\nvt 0.776855 0.330078\\nvt 0.766113 0.292480\\nvt 0.765137 0.330078\\nvt 0.772461 0.297363\\nvt 0.764160 0.297363\\nvt 0.749023 0.316406\\nvt 0.765625 0.296875\\nvt 0.756348 0.296387\\nvt 0.760742 0.336914\\nvt 0.930664 0.673828\\nvt 0.931641 0.671875\\nvt 0.900391 0.673828\\nvt 0.900391 0.675293\\nvt 0.881836 0.669922\\nvt 0.881348 0.673584\\nvt 0.881836 0.653809\\nvt 0.900391 0.649902\\nvt 0.900391 0.648437\\nvt 0.881348 0.661865\\nvt 0.899902 0.661865\\nvt 0.931641 0.651855\\nvt 0.937012 0.661865\\nvt 0.812012 0.657227\\nvt 0.796387 0.657227\\nvt 0.793457 0.665527\\nvt 0.955078 0.651123\\nvt 0.960449 0.661865\\nvt 0.841797 0.667480\\nvt 0.866211 0.668213\\nvt 0.871094 0.657227\\nvt 0.847656 0.657227\\nvt 0.824707 0.276855\\nvt 0.836426 0.297363\\nvt 0.847168 0.319336\\nvt 0.846680 0.319824\\nvt 0.856934 0.342773\\nvt 0.856445 0.342773\\nvt 0.827148 0.276855\\nvt 0.841797 0.297363\\nvt 0.855469 0.319824\\nvt 0.854980 0.320312\\nvt 0.868652 0.343262\\nvt 0.868164 0.343262\\nvt 0.836914 0.303223\\nvt 0.839355 0.318848\\nvt 0.838867 0.319336\\nvt 0.842285 0.335937\\nvt 0.841797 0.336426\\nvt 0.834961 0.287109\\nvt 0.849609 0.305176\\nvt 0.849121 0.305176\\nvt 0.867676 0.325195\\nvt 0.866699 0.325684\\nvt 0.830566 0.275879\\nvt 0.842285 0.297852\\nvt 0.852051 0.320801\\nvt 0.851563 0.320801\\nvt 0.859375 0.344727\\nvt 0.858398 0.345215\\nvt 0.812988 0.254883\\nvt 0.828613 0.277344\\nvt 0.828613 0.276855\\nvt 0.863770 0.340820\\nvt 0.844238 0.305176\\nvt 0.845703 0.305176\\nvt 0.862305 0.340820\\nvt 0.818848 0.245117\\nvt 0.827637 0.265625\\nvt 0.839355 0.290039\\nvt 0.838867 0.290527\\nvt 0.854980 0.314453\\nvt 0.854004 0.313965\\nvt 0.878906 0.351074\\nvt 0.877441 0.351074\\nvt 0.887207 0.796143\\nvt 0.862305 0.789307\\nvt 0.895996 0.791260\\nvt 0.872559 0.795898\\nvt 0.914063 0.792603\\nvt 0.903320 0.808228\\nvt 0.904785 0.792603\\nvt 0.892578 0.806641\\nvt 0.873535 0.805786\\nvt 0.869629 0.805054\\nvt 0.862305 0.807861\\nvt 0.854980 0.791260\\nvt 0.855957 0.808960\\nvt 0.849609 0.810059\\nvt 0.847168 0.793335\\nvt 0.815430 0.810791\\nvt 0.812012 0.796509\\nvt 0.853027 0.825317\\nvt 0.824219 0.832031\\nvt 0.819824 0.821411\\nvt 0.863770 0.821899\\nvt 0.869141 0.819946\\nvt 0.872070 0.815186\\nvt 0.884766 0.806641\\nvt 0.882813 0.811646\\nvt 0.890625 0.815186\\nvt 0.911621 0.811890\\nvt 0.910156 0.819580\\nvt 0.925293 0.805542\\nvt 0.928711 0.797607\\nvt 0.937988 0.803223\\nvt 0.924805 0.790039\\nvt 0.929688 0.790283\\nvt 0.915527 0.774414\\nvt 0.929199 0.774536\\nvt 0.904785 0.774658\\nvt 0.896484 0.775146\\nvt 0.863770 0.777222\\nvt 0.846191 0.779419\\nvt 0.854980 0.778320\\nvt 0.852051 0.760010\\nvt 0.861816 0.759277\\nvt 0.896484 0.756836\\nvt 0.905273 0.756104\\nvt 0.916016 0.755981\\nvt 0.929199 0.754517\\nvt 0.931641 0.739746\\nvt 0.916016 0.736084\\nvt 0.933105 0.748291\\nvt 0.932617 0.754883\\nvt 0.942871 0.744629\\nvt 0.944336 0.738281\\nvt 0.904785 0.737793\\nvt 0.937500 0.736328\\nvt 0.954590 0.733154\\nvt 0.954590 0.739014\\nvt 0.953125 0.743164\\nvt 0.948730 0.755859\\nvt 0.955566 0.772339\\nvt 0.950684 0.772583\\nvt 0.946289 0.756348\\nvt 0.956055 0.774414\\nvt 0.934570 0.774048\\nvt 0.941895 0.749023\\nvt 0.947754 0.752441\\nvt 0.945313 0.753052\\nvt 0.947266 0.754272\\nvt 0.943848 0.790039\\nvt 0.937500 0.798462\\nvt 0.942871 0.793823\\nvt 0.950684 0.775879\\nvt 0.947754 0.791260\\nvt 0.955078 0.776611\\nvt 0.945313 0.792969\\nvt 0.944824 0.794434\\nvt 0.959961 0.798340\\nvt 0.958984 0.795654\\nvt 0.800781 0.714600\\nvt 0.762695 0.717041\\nvt 0.775391 0.709229\\nvt 0.758789 0.716553\\nvt 0.770020 0.708496\\nvt 0.754883 0.716064\\nvt 0.757813 0.707031\\nvt 0.764648 0.707764\\nvt 0.760254 0.697754\\nvt 0.739258 0.702637\\nvt 0.744629 0.727051\\nvt 0.713867 0.729248\\nvt 0.717773 0.707520\\nvt 0.715820 0.750000\\nvt 0.742188 0.751099\\nvt 0.762207 0.729492\\nvt 0.753418 0.728271\\nvt 0.854980 0.729004\\nvt 0.854980 0.716797\\nvt 0.895996 0.714600\\nvt 0.897461 0.727783\\nvt 0.838379 0.716797\\nvt 0.846680 0.716797\\nvt 0.846680 0.729004\\nvt 0.838379 0.728760\\nvt 0.798828 0.727295\\nvt 0.753906 0.750610\\nvt 0.866211 0.710937\\nvt 0.847168 0.706299\\nvt 0.920410 0.717529\\nvt 0.905273 0.715820\\nvt 0.908691 0.707520\\nvt 0.917480 0.727783\\nvt 0.932129 0.720947\\nvt 0.932617 0.729980\\nvt 0.904785 0.727539\\nvt 0.951172 0.722168\\nvt 0.934570 0.711182\\nvt 0.943848 0.704102\\nvt 0.962891 0.713379\\nvt 0.960449 0.724121\\nvt 0.969238 0.721191\\nvt 0.966309 0.732910\\nvt 0.970703 0.739746\\nvt 0.966797 0.748047\\nvt 0.979004 0.730957\\nvt 0.979004 0.727783\\nvt 0.975098 0.720947\\nvt 0.956055 0.703369\\nvt 0.965332 0.708984\\nvt 0.969238 0.705811\\nvt 0.748535 0.771362\\nvt 0.726074 0.776489\\nvt 0.736816 0.796631\\nvt 0.760742 0.790161\\nvt 0.770996 0.768066\\nvt 0.780273 0.786865\\nvt 0.770508 0.788574\\nvt 0.759766 0.769775\\nvt 0.800293 0.763184\\nvt 0.807129 0.783813\\nvt 0.842285 0.760742\\nvt 0.788574 0.799927\\nvt 0.770020 0.805420\\nvt 0.779297 0.802612\\nvt 0.761719 0.810303\\nvt 0.800293 0.812134\\nvt 0.784180 0.819214\\nvt 0.792480 0.815674\\nvt 0.795898 0.828369\\nvt 0.790527 0.831909\\nvt 0.776855 0.821533\\nvt 0.807129 0.823730\\nvt 0.801270 0.826050\\nvt 0.765137 0.750000\\nvt 0.795898 0.745605\\nvt 0.840332 0.744141\\nvt 0.849121 0.742432\\nvt 0.857910 0.740723\\nvt 0.896973 0.738281\\nvt 0.802734 0.841553\\nvt 0.807129 0.837646\\nvt 0.813477 0.835205\\nvt 0.780762 0.700439\\nvt 0.785156 0.835327\\nvt 0.752930 0.815063\\nvt 0.629883 0.364258\\nvt 0.643555 0.369141\\nvt 0.628906 0.370117\\nvt 0.625977 0.375977\\nvt 0.655273 0.386230\\nvt 0.660645 0.362793\\nvt 0.542969 0.484863\\nvt 0.544922 0.448242\\nvt 0.588867 0.467285\\nvt 0.585449 0.497559\\nvt 0.552734 0.428711\\nvt 0.593262 0.437988\\nvt 0.550293 0.400391\\nvt 0.584961 0.400879\\nvt 0.626465 0.403809\\nvt 0.630371 0.439941\\nvt 0.657227 0.413574\\nvt 0.683594 0.399414\\nvt 0.683594 0.421387\\nvt 0.627930 0.499512\\nvt 0.663574 0.447266\\nvt 0.694336 0.451172\\nvt 0.666504 0.512939\\nvt 0.707031 0.510986\\nvt 0.662109 0.537598\\nvt 0.619141 0.522461\\nvt 0.707031 0.535889\\nvt 0.708496 0.237305\\nvt 0.704590 0.255371\\nvt 0.698730 0.258301\\nvt 0.646973 0.671631\\nvt 0.677734 0.672363\\nvt 0.679199 0.714600\\nvt 0.645020 0.706787\\nvt 0.651855 0.637451\\nvt 0.693359 0.631592\\nvt 0.653809 0.600098\\nvt 0.695313 0.605957\\nvt 0.660645 0.558594\\nvt 0.704590 0.567139\\nvt 0.711914 0.539307\\nvt 0.661133 0.541992\\nvt 0.742188 0.543701\\nvt 0.732422 0.608398\\nvt 0.726074 0.633789\\nvt 0.744141 0.574951\\nvt 0.767090 0.610596\\nvt 0.761230 0.625732\\nvt 0.762207 0.663086\\nvt 0.763672 0.677490\\nvt 0.732422 0.681641\\nvt 0.499512 0.251465\\nvt 0.499512 0.214844\\nvt 0.526367 0.214844\\nvt 0.529785 0.251465\\nvt 0.499512 0.324219\\nvt 0.499512 0.288574\\nvt 0.533203 0.288574\\nvt 0.534668 0.322266\\nvt 0.562012 0.288574\\nvt 0.562988 0.320801\\nvt 0.554688 0.214844\\nvt 0.558594 0.251465\\nvt 0.524414 0.179199\\nvt 0.522461 0.144043\\nvt 0.549805 0.144043\\nvt 0.552246 0.179199\\nvt 0.522461 0.105957\\nvt 0.522461 0.068359\\nvt 0.543457 0.068359\\nvt 0.546875 0.105957\\nvt 0.499512 0.144043\\nvt 0.499512 0.105957\\nvt 0.499512 0.046387\\nvt 0.499512 0.024414\\nvt 0.525391 0.028809\\nvt 0.523926 0.048828\\nvt 0.499512 0.179199\\nvt 0.535156 0.027832\\nvt 0.539551 0.048340\\nvt 0.570801 0.105957\\nvt 0.563477 0.068359\\nvt 0.579590 0.179199\\nvt 0.581543 0.214844\\nvt 0.584961 0.251465\\nvt 0.587891 0.288574\\nvt 0.590332 0.317383\\nvt 0.549316 0.028320\\nvt 0.556641 0.048340\\nvt 0.573242 0.045898\\nvt 0.532227 0.012695\\nvt 0.499512 0.413574\\nvt 0.499512 0.390137\\nvt 0.563965 0.353027\\nvt 0.535645 0.356445\\nvt 0.613770 0.251465\\nvt 0.499512 0.436523\\nvt 0.499512 0.471680\\nvt 0.545898 0.537109\\nvt 0.499512 0.526123\\nvt 0.543945 0.573730\\nvt 0.499512 0.569092\\nvt 0.536133 0.673828\\nvt 0.539063 0.641602\\nvt 0.575684 0.650879\\nvt 0.570801 0.687256\\nvt 0.541016 0.607178\\nvt 0.575195 0.614990\\nvt 0.576172 0.580078\\nvt 0.581543 0.541748\\nvt 0.615234 0.627686\\nvt 0.617188 0.661865\\nvt 0.618164 0.591553\\nvt 0.619141 0.548828\\nvt 0.609375 0.697021\\nvt 0.712402 0.813354\\nvt 0.731934 0.821777\\nvt 0.703125 0.821777\\nvt 0.647461 0.815063\\nvt 0.683105 0.793579\\nvt 0.638672 0.766479\\nvt 0.675781 0.761353\\nvt 0.642578 0.732666\\nvt 0.678223 0.730957\\nvt 0.718750 0.669678\\nvt 0.762207 0.890625\\nvt 0.736816 0.879700\\nvt 0.740723 0.855957\\nvt 0.764648 0.875610\\nvt 0.747559 0.845825\\nvt 0.757324 0.835449\\nvt 0.720703 0.847656\\nvt 0.712891 0.867554\\nvt 0.712891 0.880676\\nvt 0.737305 0.892273\\nvt 0.680176 0.863770\\nvt 0.681152 0.849854\\nvt 0.642578 0.856567\\nvt 0.641113 0.841675\\nvt 0.688965 0.831177\\nvt 0.606445 0.855347\\nvt 0.603516 0.834351\\nvt 0.604004 0.803223\\nvt 0.603027 0.761108\\nvt 0.603516 0.725342\\nvt 0.573730 0.820923\\nvt 0.553711 0.788696\\nvt 0.558105 0.757324\\nvt 0.562500 0.722412\\nvt 0.537598 0.833618\\nvt 0.539063 0.850586\\nvt 0.499512 0.841553\\nvt 0.499512 0.827148\\nvt 0.535645 0.816650\\nvt 0.574219 0.842285\\nvt 0.526367 0.785278\\nvt 0.529785 0.746582\\nvt 0.531738 0.707520\\nvt 0.499512 0.743652\\nvt 0.499512 0.702637\\nvt 0.499512 0.779175\\nvt 0.499512 0.812622\\nvt 0.499512 0.604004\\nvt 0.499512 0.635742\\nvt 0.499512 0.668945\\nvt 0.638184 0.360840\\nvt 0.690918 0.382812\\nvt 0.661133 0.347656\\nvt 0.574219 0.863647\\nvt 0.499512 0.359863\\nvt 0.592773 0.346191\\nvt 0.577637 0.144043\\nvt 0.499512 0.068359\\nvt 0.582031 0.068359\\nvt 0.369141 0.347656\\nvt 0.377930 0.347656\\nvt 0.369385 0.364258\\nvt 0.388184 0.365723\\nvt 0.372803 0.403809\\nvt 0.373047 0.375977\\nvt 0.414307 0.400879\\nvt 0.370117 0.370117\\nvt 0.355713 0.369141\\nvt 0.343750 0.386230\\nvt 0.338379 0.362793\\nvt 0.410156 0.467285\\nvt 0.454102 0.448242\\nvt 0.456055 0.484863\\nvt 0.413818 0.497559\\nvt 0.406006 0.437988\\nvt 0.446289 0.428711\\nvt 0.448730 0.400391\\nvt 0.368652 0.439941\\nvt 0.341797 0.413574\\nvt 0.315430 0.399414\\nvt 0.315430 0.421387\\nvt 0.371094 0.499512\\nvt 0.335449 0.447266\\nvt 0.304688 0.451172\\nvt 0.332520 0.512939\\nvt 0.291992 0.510986\\nvt 0.379883 0.522461\\nvt 0.336914 0.537598\\nvt 0.291992 0.535889\\nvt 0.685059 0.258301\\nvt 0.670410 0.258301\\nvt 0.659668 0.237305\\nvt 0.674316 0.295898\\nvt 0.674316 0.276855\\nvt 0.684570 0.275879\\nvt 0.352051 0.671631\\nvt 0.354004 0.706787\\nvt 0.319824 0.714600\\nvt 0.321777 0.672852\\nvt 0.305420 0.631592\\nvt 0.347412 0.637451\\nvt 0.303711 0.605957\\nvt 0.345215 0.600098\\nvt 0.294434 0.567139\\nvt 0.338379 0.558594\\nvt 0.288330 0.541504\\nvt 0.337402 0.544189\\nvt 0.266602 0.607910\\nvt 0.272461 0.634033\\nvt 0.254883 0.574951\\nvt 0.222656 0.581543\\nvt 0.469238 0.251465\\nvt 0.472656 0.214844\\nvt 0.464600 0.322266\\nvt 0.465820 0.288574\\nvt 0.436035 0.320801\\nvt 0.437012 0.288574\\nvt 0.444336 0.214844\\nvt 0.440918 0.251465\\nvt 0.474609 0.179199\\nvt 0.447021 0.179199\\nvt 0.449219 0.144043\\nvt 0.476807 0.144043\\nvt 0.476807 0.105957\\nvt 0.452393 0.105957\\nvt 0.455811 0.068359\\nvt 0.476807 0.068359\\nvt 0.475098 0.048828\\nvt 0.473633 0.028809\\nvt 0.459717 0.048340\\nvt 0.464111 0.027832\\nvt 0.428711 0.105957\\nvt 0.435547 0.068359\\nvt 0.417480 0.214844\\nvt 0.419434 0.179199\\nvt 0.414307 0.251465\\nvt 0.411133 0.288574\\nvt 0.408691 0.317383\\nvt 0.449707 0.028320\\nvt 0.442627 0.048340\\nvt 0.391113 0.179199\\nvt 0.393555 0.144043\\nvt 0.421387 0.144043\\nvt 0.405518 0.105957\\nvt 0.435303 0.353027\\nvt 0.463379 0.356445\\nvt 0.406250 0.346191\\nvt 0.381836 0.288574\\nvt 0.384033 0.311523\\nvt 0.453125 0.537109\\nvt 0.455078 0.573730\\nvt 0.423340 0.650879\\nvt 0.460205 0.641602\\nvt 0.462891 0.673828\\nvt 0.428223 0.687256\\nvt 0.423828 0.614990\\nvt 0.458008 0.607178\\nvt 0.422852 0.580078\\nvt 0.417480 0.541748\\nvt 0.383789 0.627686\\nvt 0.381836 0.661865\\nvt 0.381104 0.591553\\nvt 0.379883 0.548828\\nvt 0.389648 0.697021\\nvt 0.310303 0.831055\\nvt 0.295654 0.822144\\nvt 0.351807 0.815063\\nvt 0.360352 0.766479\\nvt 0.315918 0.793579\\nvt 0.323242 0.761353\\nvt 0.320801 0.730957\\nvt 0.356445 0.732666\\nvt 0.286621 0.813354\\nvt 0.262207 0.796631\\nvt 0.272949 0.776489\\nvt 0.283203 0.750000\\nvt 0.285156 0.729248\\nvt 0.281250 0.707520\\nvt 0.226196 0.863403\\nvt 0.214355 0.849487\\nvt 0.241211 0.836548\\nvt 0.251465 0.845581\\nvt 0.270996 0.837158\\nvt 0.278320 0.846924\\nvt 0.286133 0.867554\\nvt 0.262207 0.879700\\nvt 0.258301 0.856201\\nvt 0.286621 0.880676\\nvt 0.261719 0.892273\\nvt 0.318115 0.849854\\nvt 0.319092 0.863770\\nvt 0.357910 0.841675\\nvt 0.356445 0.856567\\nvt 0.392578 0.855347\\nvt 0.395020 0.803223\\nvt 0.395996 0.834351\\nvt 0.395996 0.761108\\nvt 0.395508 0.725342\\nvt 0.445313 0.788696\\nvt 0.425293 0.820923\\nvt 0.440918 0.757324\\nvt 0.436523 0.722412\\nvt 0.461914 0.833618\\nvt 0.460205 0.850586\\nvt 0.425049 0.842285\\nvt 0.463379 0.816650\\nvt 0.472656 0.785278\\nvt 0.469238 0.746582\\nvt 0.467285 0.707520\\nvt 0.360840 0.360840\\nvt 0.308105 0.382812\\nvt 0.294434 0.349121\\nvt 0.358643 0.347656\\nvt 0.236938 0.903382\\nvt 0.424805 0.863647\\nvt 0.388916 0.214844\\nvt 0.260010 0.702637\\nvt 0.275146 0.694092\\nvt 0.725098 0.694580\\nvt 0.728027 0.836914\\nvt 0.267334 0.822021\\nvt 0.246216 0.815063\\nvt 0.744629 0.556641\\nvt 0.254150 0.556396\\nvt 0.219360 0.560059\\nvt 0.112000 0.796143\\nvt 0.103210 0.791748\\nvt 0.136841 0.789307\\nvt 0.126587 0.795898\\nvt 0.085083 0.792603\\nvt 0.094299 0.792603\\nvt 0.095825 0.808228\\nvt 0.106201 0.806519\\nvt 0.114197 0.806396\\nvt 0.129883 0.805054\\nvt 0.136841 0.807861\\nvt 0.144409 0.791260\\nvt 0.143311 0.808594\\nvt 0.151855 0.793335\\nvt 0.187134 0.796509\\nvt 0.183716 0.810791\\nvt 0.149658 0.809448\\nvt 0.179321 0.821411\\nvt 0.174927 0.832031\\nvt 0.135254 0.821899\\nvt 0.116516 0.811646\\nvt 0.125854 0.805664\\nvt 0.127075 0.815308\\nvt 0.108887 0.814819\\nvt 0.088989 0.819580\\nvt 0.087524 0.811890\\nvt 0.073791 0.805542\\nvt 0.061096 0.803223\\nvt 0.066528 0.813110\\nvt 0.054290 0.809326\\nvt 0.077209 0.820557\\nvt 0.070373 0.797607\\nvt 0.069397 0.790283\\nvt 0.074279 0.790039\\nvt 0.069885 0.774536\\nvt 0.083618 0.774414\\nvt 0.094299 0.774658\\nvt 0.102478 0.775146\\nvt 0.135254 0.777222\\nvt 0.144043 0.778320\\nvt 0.152954 0.779419\\nvt 0.156860 0.760742\\nvt 0.147095 0.760010\\nvt 0.102783 0.756836\\nvt 0.137329 0.759277\\nvt 0.083129 0.755981\\nvt 0.093811 0.756104\\nvt 0.069885 0.754517\\nvt 0.067504 0.739746\\nvt 0.083129 0.736084\\nvt 0.066528 0.754883\\nvt 0.065979 0.748291\\nvt 0.056213 0.744629\\nvt 0.054809 0.738281\\nvt 0.094299 0.737793\\nvt 0.061615 0.736328\\nvt 0.044494 0.733154\\nvt 0.044799 0.739014\\nvt 0.045990 0.743164\\nvt 0.050415 0.755859\\nvt 0.052795 0.756348\\nvt 0.048400 0.772583\\nvt 0.043609 0.772339\\nvt 0.043090 0.774414\\nvt 0.064514 0.774048\\nvt 0.057189 0.749023\\nvt 0.051391 0.752441\\nvt 0.053802 0.753052\\nvt 0.051910 0.754272\\nvt 0.055297 0.790039\\nvt 0.061615 0.798462\\nvt 0.056213 0.793823\\nvt 0.048400 0.775879\\nvt 0.051391 0.791260\\nvt 0.044006 0.776611\\nvt 0.053802 0.792969\\nvt 0.054290 0.794434\\nvt 0.040100 0.795654\\nvt 0.035186 0.793335\\nvt 0.030395 0.777588\\nvt 0.031799 0.773804\\nvt 0.029403 0.769653\\nvt 0.211548 0.701660\\nvt 0.223999 0.709229\\nvt 0.198242 0.714600\\nvt 0.236450 0.717041\\nvt 0.229370 0.708496\\nvt 0.240356 0.716553\\nvt 0.244141 0.716064\\nvt 0.234375 0.708008\\nvt 0.241577 0.707031\\nvt 0.254395 0.727051\\nvt 0.256836 0.751099\\nvt 0.245728 0.728271\\nvt 0.236938 0.729492\\nvt 0.103210 0.714600\\nvt 0.144043 0.716797\\nvt 0.144043 0.729004\\nvt 0.101807 0.727783\\nvt 0.152344 0.716797\\nvt 0.152344 0.729004\\nvt 0.160645 0.716797\\nvt 0.200317 0.727295\\nvt 0.160645 0.728760\\nvt 0.245483 0.750610\\nvt 0.234009 0.750000\\nvt 0.132935 0.710937\\nvt 0.151978 0.706299\\nvt 0.159302 0.706299\\nvt 0.133423 0.706055\\nvt 0.090393 0.707520\\nvt 0.093811 0.715820\\nvt 0.078674 0.717529\\nvt 0.081604 0.727783\\nvt 0.066528 0.729980\\nvt 0.067016 0.720947\\nvt 0.094299 0.727539\\nvt 0.048095 0.722168\\nvt 0.055297 0.704102\\nvt 0.036193 0.713379\\nvt 0.038696 0.724121\\nvt 0.029907 0.721191\\nvt 0.032897 0.732910\\nvt 0.028396 0.739746\\nvt 0.032287 0.748047\\nvt 0.019607 0.712158\\nvt 0.033691 0.708984\\nvt 0.250488 0.771362\\nvt 0.238403 0.790161\\nvt 0.228149 0.768066\\nvt 0.239380 0.769775\\nvt 0.228638 0.788574\\nvt 0.218750 0.786865\\nvt 0.192017 0.783813\\nvt 0.198853 0.763184\\nvt 0.210449 0.799927\\nvt 0.229126 0.805420\\nvt 0.219849 0.802612\\nvt 0.237671 0.810303\\nvt 0.198853 0.812134\\nvt 0.214844 0.819214\\nvt 0.206909 0.815674\\nvt 0.229858 0.823853\\nvt 0.222412 0.821533\\nvt 0.208862 0.831909\\nvt 0.203491 0.828369\\nvt 0.197876 0.826050\\nvt 0.192261 0.823730\\nvt 0.203247 0.745605\\nvt 0.158813 0.744141\\nvt 0.150024 0.742432\\nvt 0.102417 0.738281\\nvt 0.141235 0.740723\\nvt 0.225220 0.699219\\nvt 0.218384 0.700439\\nvt 0.232056 0.698486\\nvt 0.214233 0.835327\\nvt 0.725098 0.499512\\nvt 0.716309 0.505371\\nvt 0.707031 0.456055\\nvt 0.719727 0.460937\\nvt 0.717773 0.430664\\nvt 0.700684 0.426270\\nvt 0.730469 0.430664\\nvt 0.735352 0.459961\\nvt 0.734375 0.518066\\nvt 0.720703 0.527100\\nvt 0.759277 0.486816\\nvt 0.742188 0.493164\\nvt 0.750488 0.459473\\nvt 0.784180 0.452148\\nvt 0.792969 0.468262\\nvt 0.815430 0.432129\\nvt 0.823242 0.451660\\nvt 0.812500 0.419922\\nvt 0.814941 0.410156\\nvt 0.818848 0.409668\\nvt 0.818848 0.419434\\nvt 0.824707 0.418457\\nvt 0.832520 0.427734\\nvt 0.824219 0.429687\\nvt 0.773438 0.424316\\nvt 0.742676 0.430664\\nvt 0.769043 0.408691\\nvt 0.820313 0.404297\\nvt 0.825684 0.398437\\nvt 0.870117 0.395020\\nvt 0.872559 0.404785\\nvt 0.822266 0.409180\\nvt 0.872070 0.417480\\nvt 0.819336 0.397461\\nvt 0.812988 0.396484\\nvt 0.812012 0.381836\\nvt 0.924316 0.389648\\nvt 0.921875 0.397461\\nvt 0.920898 0.410645\\nvt 0.938477 0.398437\\nvt 0.935547 0.408691\\nvt 0.928223 0.409668\\nvt 0.930176 0.397949\\nvt 0.920898 0.420410\\nvt 0.927734 0.418457\\nvt 0.934082 0.416992\\nvt 0.950195 0.410156\\nvt 0.955566 0.416992\\nvt 0.874512 0.427734\\nvt 0.933105 0.390137\\nvt 0.941895 0.391113\\nvt 0.949219 0.401855\\nvt 0.960938 0.401855\\nvt 0.972656 0.414062\\nvt 0.978516 0.405273\\nvt 0.982422 0.415039\\nvt 0.996094 0.414551\\nvt 0.997070 0.412109\\nvt 0.997070 0.408691\\nvt 0.986816 0.401855\\nvt 0.980957 0.394531\\nvt 0.993164 0.401855\\nvt 0.998535 0.397949\\nvt 0.997559 0.393066\\nvt 0.983398 0.389648\\nvt 0.986816 0.386719\\nvt 0.951660 0.392090\\nvt 0.972168 0.419922\\nvt 0.961914 0.418945\\nvt 0.966309 0.437012\\nvt 0.965332 0.435059\\nvt 0.984375 0.428711\\nvt 0.965332 0.433105\\nvt 0.971191 0.424316\\nvt 0.960449 0.425293\\nvt 0.949707 0.420410\\nvt 0.950195 0.435547\\nvt 0.962891 0.434082\\nvt 0.959473 0.430176\\nvt 0.951172 0.429199\\nvt 0.947266 0.435547\\nvt 0.946777 0.455078\\nvt 0.952637 0.455078\\nvt 0.933105 0.455566\\nvt 0.933594 0.437012\\nvt 0.941895 0.471191\\nvt 0.931152 0.473633\\nvt 0.921387 0.455566\\nvt 0.921875 0.437988\\nvt 0.927734 0.437500\\nvt 0.927246 0.455566\\nvt 0.883789 0.477051\\nvt 0.878906 0.461914\\nvt 0.921387 0.473633\\nvt 0.926270 0.473633\\nvt 0.942871 0.486816\\nvt 0.937012 0.479980\\nvt 0.874512 0.443848\\nvt 0.841309 0.448242\\nvt 0.845703 0.460937\\nvt 0.854004 0.479004\\nvt 0.888184 0.491699\\nvt 0.856934 0.497559\\nvt 0.832520 0.449707\\nvt 0.836914 0.462891\\nvt 0.847168 0.479980\\nvt 0.853027 0.498047\\nvt 0.840332 0.480469\\nvt 0.808105 0.495605\\nvt 0.797363 0.484375\\nvt 0.828125 0.464355\\nvt 0.764648 0.502197\\nvt 0.749512 0.510254\\nvt 0.782227 0.509277\\nvt 0.756836 0.523926\\nvt 0.769531 0.516602\\nvt 0.731934 0.529785\\nvt 0.749512 0.533691\\nvt 0.811523 0.519287\\nvt 0.770020 0.394043\\nvt 0.742188 0.412598\\nvt 0.745117 0.393066\\nvt 0.782227 0.374512\\nvt 0.701172 0.350098\\nvt 0.718262 0.354492\\nvt 0.704590 0.385742\\nvt 0.731934 0.391113\\nvt 0.718262 0.388672\\nvt 0.734863 0.359375\\nvt 0.699219 0.402832\\nvt 0.728516 0.409668\\nvt 0.714844 0.406250\\nvt 0.955566 0.479980\\nvt 0.947754 0.471191\\nvt 0.960938 0.474609\\nvt 0.946777 0.478516\\nvt 0.961914 0.470703\\nvt 0.968750 0.457031\\nvt 0.956055 0.484375\\nvt 0.962891 0.475586\\nvt 0.963379 0.474121\\nvt 0.965820 0.472168\\nvt 0.973145 0.457520\\nvt 0.973633 0.455078\\nvt 0.968262 0.453613\\nvt 0.963867 0.437500\\nvt 0.973145 0.452637\\nvt 0.919922 0.489258\\nvt 0.924805 0.491211\\nvt 0.943359 0.496094\\nvt 0.929688 0.492676\\nvt 0.951172 0.494141\\nvt 0.988281 0.420898\\nvt 0.803711 0.524658\\nvt 0.282959 0.505371\\nvt 0.291992 0.456055\\nvt 0.298340 0.426270\\nvt 0.281250 0.430664\\nvt 0.279297 0.460937\\nvt 0.263916 0.459961\\nvt 0.268799 0.430664\\nvt 0.278320 0.527100\\nvt 0.273926 0.499512\\nvt 0.256836 0.493164\\nvt 0.206055 0.468262\\nvt 0.214844 0.452148\\nvt 0.248657 0.459473\\nvt 0.239746 0.486816\\nvt 0.175903 0.451660\\nvt 0.183716 0.432129\\nvt 0.186646 0.419922\\nvt 0.180542 0.419434\\nvt 0.180542 0.409668\\nvt 0.184204 0.410156\\nvt 0.174438 0.418457\\nvt 0.175171 0.429687\\nvt 0.166626 0.427734\\nvt 0.225708 0.424316\\nvt 0.256348 0.430664\\nvt 0.230103 0.408691\\nvt 0.178833 0.404297\\nvt 0.126587 0.404785\\nvt 0.129028 0.395020\\nvt 0.173340 0.398437\\nvt 0.176880 0.409180\\nvt 0.126953 0.417480\\nvt 0.168579 0.388184\\nvt 0.177856 0.384766\\nvt 0.179810 0.397461\\nvt 0.077209 0.397461\\nvt 0.074829 0.389648\\nvt 0.078186 0.410645\\nvt 0.070922 0.409668\\nvt 0.068908 0.397949\\nvt 0.063598 0.408691\\nvt 0.071594 0.418457\\nvt 0.065002 0.416992\\nvt 0.043609 0.416992\\nvt 0.048889 0.410156\\nvt 0.124573 0.427734\\nvt 0.078186 0.420410\\nvt 0.065979 0.390137\\nvt 0.049896 0.401855\\nvt 0.060607 0.398437\\nvt 0.038299 0.401855\\nvt 0.026504 0.414062\\nvt 0.020599 0.405273\\nvt 0.016601 0.415039\\nvt 0.003000 0.414551\\nvt 0.018203 0.394531\\nvt 0.012199 0.401855\\nvt 0.006000 0.401855\\nvt 0.025497 0.384277\\nvt 0.015792 0.389648\\nvt 0.047485 0.392090\\nvt 0.057189 0.391113\\nvt 0.026992 0.419922\\nvt 0.037200 0.418945\\nvt 0.027893 0.424316\\nvt 0.016693 0.424316\\nvt 0.038696 0.425293\\nvt 0.033813 0.433105\\nvt 0.049408 0.420410\\nvt 0.018203 0.437012\\nvt 0.032806 0.437012\\nvt 0.026001 0.452637\\nvt 0.033813 0.435059\\nvt 0.048889 0.435547\\nvt 0.036193 0.434082\\nvt 0.039611 0.430176\\nvt 0.047912 0.429199\\nvt 0.051910 0.435547\\nvt 0.052307 0.455078\\nvt 0.046508 0.455078\\nvt 0.065490 0.437012\\nvt 0.065979 0.455566\\nvt 0.067993 0.473633\\nvt 0.057189 0.471191\\nvt 0.071350 0.437500\\nvt 0.071838 0.455566\\nvt 0.115295 0.477051\\nvt 0.077697 0.473633\\nvt 0.077697 0.455566\\nvt 0.120178 0.461914\\nvt 0.072876 0.473633\\nvt 0.056213 0.486816\\nvt 0.124573 0.443848\\nvt 0.077209 0.437988\\nvt 0.157837 0.448242\\nvt 0.153442 0.460937\\nvt 0.145142 0.479004\\nvt 0.110901 0.491699\\nvt 0.166870 0.449707\\nvt 0.171021 0.464355\\nvt 0.162231 0.462891\\nvt 0.151978 0.479980\\nvt 0.158813 0.480469\\nvt 0.191040 0.495605\\nvt 0.171021 0.507812\\nvt 0.201782 0.484375\\nvt 0.234497 0.502197\\nvt 0.249634 0.510254\\nvt 0.216919 0.509277\\nvt 0.229614 0.516602\\nvt 0.242310 0.523926\\nvt 0.264648 0.518066\\nvt 0.267090 0.529785\\nvt 0.211304 0.546387\\nvt 0.207397 0.538086\\nvt 0.249512 0.533691\\nvt 0.195557 0.524658\\nvt 0.256836 0.412598\\nvt 0.229126 0.394043\\nvt 0.253906 0.393066\\nvt 0.186157 0.396484\\nvt 0.187134 0.381836\\nvt 0.299805 0.402832\\nvt 0.294434 0.385742\\nvt 0.284180 0.406250\\nvt 0.270508 0.409668\\nvt 0.267334 0.391113\\nvt 0.281006 0.388672\\nvt 0.043609 0.479980\\nvt 0.038208 0.474609\\nvt 0.051391 0.471191\\nvt 0.052307 0.478516\\nvt 0.037200 0.470703\\nvt 0.030395 0.457031\\nvt 0.043090 0.484375\\nvt 0.036193 0.475586\\nvt 0.035705 0.474121\\nvt 0.033294 0.472168\\nvt 0.026001 0.457520\\nvt 0.025497 0.455078\\nvt 0.030899 0.453613\\nvt 0.035186 0.437500\\nvt 0.021606 0.479004\\nvt 0.022598 0.476074\\nvt 0.011802 0.458496\\nvt 0.014297 0.455078\\nvt 0.079223 0.489258\\nvt 0.074279 0.491211\\nvt 0.069397 0.492676\\nvt 0.055786 0.496094\\nvt 0.036712 0.490234\\nvt 0.203369 0.529785\\nvt 0.204956 0.283203\\nvt 0.067077 0.240234\\nvt 0.036895 0.184082\\nvt 0.051391 0.270508\\nvt 0.061706 0.319824\\nvt 0.103882 0.328125\\nvt 0.073120 0.340820\\nvt 0.205078 0.112305\\nvt 0.204590 0.112305\\nvt 0.204956 0.106445\\nvt 0.204956 0.105957\\nvt 0.145508 0.029297\\nvt 0.179077 0.101562\\nvt 0.157837 0.108887\\nvt 0.179810 0.101562\\nvt 0.191772 0.102051\\nvt 0.873047 0.562012\\nvt 0.901367 0.577393\\nvt 0.633301 0.930481\\nvt 0.533691 0.947388\\nvt 0.529785 0.954102\\nvt 0.540527 0.965912\\nvt 0.563477 0.990304\\nvt 0.602051 0.970002\\nvt 0.662109 0.918213\\nvt 0.720215 0.938813\\nvt 0.759277 0.957795\\nvt 0.059906 0.109863\\nvt 0.037902 0.145020\\nvt 0.138672 0.174805\\nvt 0.134644 0.185059\\nvt 0.877441 0.571045\\nvt 0.518555 0.937989\\nvt 0.866699 0.540039\\nvt 0.878906 0.529785\\nvt 0.886719 0.522949\\nvt 0.891602 0.518555\\nvt 0.894531 0.583740\\nvt 0.901367 0.585205\\nvt 0.233643 0.280762\\nvt 0.372803 0.184082\\nvt 0.354248 0.299316\\nvt 0.284912 0.312500\\nvt 0.218262 0.101562\\nvt 0.249146 0.107422\\nvt 0.251709 0.108398\\nvt 0.250977 0.108398\\nvt 0.937500 0.550293\\nvt 0.365723 0.930481\\nvt 0.465332 0.947388\\nvt 0.469238 0.954102\\nvt 0.458496 0.965912\\nvt 0.447021 0.978699\\nvt 0.435547 0.990304\\nvt 0.431152 0.990403\\nvt 0.414307 0.980607\\nvt 0.385010 0.963990\\nvt 0.354004 0.957398\\nvt 0.307129 0.929017\\nvt 0.278809 0.938813\\nvt 0.261230 0.947693\\nvt 0.239746 0.957795\\nvt 0.237915 0.937714\\nvt 0.236938 0.916321\\nvt 0.297363 0.064941\\nvt 0.371826 0.145020\\nvt 0.270996 0.174805\\nvt 0.265381 0.190430\\nvt 0.274902 0.185059\\nvt 0.925293 0.571045\\nvt 0.920410 0.577393\\nvt 0.914063 0.581787\\nvt 0.916504 0.523193\\nvt 0.911621 0.518555\\nvt 0.901367 0.524658\\nvt 0.908203 0.583740\\nvt 0.752441 0.329590\\nvt 0.754395 0.293457\\nvt 0.746582 0.328613\\nvt 0.787109 0.330078\\nvt 0.779785 0.292480\\nvt 0.755859 0.332031\\nvt 0.778809 0.294922\\nvt 0.758301 0.293457\\nvt 0.785645 0.333984\\nvt 0.732422 0.293457\\nvt 0.746094 0.330078\\nvt 0.749512 0.309570\\nvt 0.744629 0.293457\\nvt 0.736816 0.329102\\nvt 0.770508 0.292480\\nvt 0.755371 0.290527\\nvt 0.734863 0.305664\\nvt 0.727539 0.330078\\nvt 0.766602 0.292480\\nvt 0.760254 0.292480\\nvt 0.770508 0.310547\\nvt 0.757324 0.316895\\nvt 0.758789 0.293457\\nvt 0.778320 0.294922\\nvt 0.785156 0.333496\\nvt 0.759766 0.295410\\nvt 0.778320 0.330078\\nvt 0.754883 0.290527\\nvt 0.956543 0.674072\\nvt 0.955078 0.672607\\nvt 0.847656 0.656982\\nvt 0.841797 0.646729\\nvt 0.812500 0.644531\\nvt 0.812012 0.656982\\nvt 0.793457 0.648682\\nvt 0.796387 0.656982\\nvt 0.871094 0.656982\\nvt 0.866211 0.645996\\nvt 0.961914 0.661865\\nvt 0.956543 0.649658\\nvt 0.930664 0.649902\\nvt 0.881348 0.650146\\nvt 0.812500 0.669678\\nvt 0.858398 0.823608\\nvt 0.900879 0.816406\\nvt 0.925781 0.814941\\nvt 0.932617 0.813110\\nvt 0.944824 0.809326\\nvt 0.921875 0.820557\\nvt 0.964844 0.743408\\nvt 0.962891 0.756104\\nvt 0.969727 0.769653\\nvt 0.963867 0.793335\\nvt 0.968750 0.777588\\nvt 0.967285 0.773804\\nvt 0.787598 0.701660\\nvt 0.809082 0.701904\\nvt 0.865723 0.706055\\nvt 0.895508 0.706543\\nvt 0.854492 0.706543\\nvt 0.839844 0.706299\\nvt 0.924316 0.709717\\nvt 0.978516 0.733887\\nvt 0.980469 0.717529\\nvt 0.979492 0.712158\\nvt 0.769531 0.823853\\nvt 0.810547 0.836426\\nvt 0.767090 0.698486\\nvt 0.773926 0.699219\\nvt 0.798340 0.845459\\nvt 0.611816 0.347656\\nvt 0.615234 0.347168\\nvt 0.610840 0.365723\\nvt 0.629883 0.347656\\nvt 0.621094 0.347656\\nvt 0.727539 0.234863\\nvt 0.683105 0.258789\\nvt 0.684082 0.234375\\nvt 0.683594 0.275879\\nvt 0.694336 0.276367\\nvt 0.700684 0.278320\\nvt 0.782227 0.541504\\nvt 0.779785 0.560059\\nvt 0.776367 0.581543\\nvt 0.607910 0.179199\\nvt 0.605469 0.144043\\nvt 0.593750 0.105957\\nvt 0.564453 0.022949\\nvt 0.612793 0.333984\\nvt 0.617188 0.288574\\nvt 0.615234 0.311523\\nvt 0.610352 0.214844\\nvt 0.772949 0.863403\\nvt 0.784668 0.849487\\nvt 0.770996 0.826538\\nvt 0.791016 0.842163\\nvt 0.704590 0.349121\\nvt 0.640625 0.347656\\nvt 0.762207 0.903382\\nvt 0.681641 0.137207\\nvt 0.653320 0.065918\\nvt 0.681641 0.079590\\nvt 0.658691 0.131348\\nvt 0.681641 0.191895\\nvt 0.635254 0.193848\\nvt 0.387207 0.347656\\nvt 0.384033 0.347168\\nvt 0.663574 0.254883\\nvt 0.640625 0.234863\\nvt 0.684082 0.294434\\nvt 0.667480 0.277832\\nvt 0.256592 0.543457\\nvt 0.216919 0.541504\\nvt 0.280029 0.668701\\nvt 0.231812 0.610596\\nvt 0.237061 0.625977\\nvt 0.236694 0.663086\\nvt 0.269043 0.680420\\nvt 0.235596 0.677490\\nvt 0.416992 0.068359\\nvt 0.425781 0.045898\\nvt 0.434814 0.022949\\nvt 0.466797 0.012695\\nvt 0.386230 0.333984\\nvt 0.385254 0.251465\\nvt 0.236938 0.890625\\nvt 0.235229 0.874878\\nvt 0.228027 0.826782\\nvt 0.208130 0.842163\\nvt 0.337891 0.347656\\nvt 0.709961 0.065918\\nvt 0.704590 0.131836\\nvt 0.728516 0.194824\\nvt 0.238892 0.697754\\nvt 0.246094 0.697998\\nvt 0.234009 0.695312\\nvt 0.765137 0.695312\\nvt 0.754395 0.699463\\nvt 0.693848 0.295898\\nvt 0.700195 0.297852\\nvt 0.667969 0.297852\\nvt 0.146118 0.825317\\nvt 0.140747 0.823608\\nvt 0.130005 0.819946\\nvt 0.112610 0.818848\\nvt 0.098205 0.816406\\nvt 0.073303 0.814941\\nvt 0.039215 0.798340\\nvt 0.034301 0.743408\\nvt 0.036193 0.756104\\nvt 0.189941 0.701904\\nvt 0.100525 0.710205\\nvt 0.144653 0.706543\\nvt 0.074829 0.709717\\nvt 0.064514 0.711182\\nvt 0.020599 0.733887\\nvt 0.020095 0.730957\\nvt 0.020095 0.727783\\nvt 0.024002 0.720947\\nvt 0.018600 0.717529\\nvt 0.043090 0.703369\\nvt 0.029907 0.705811\\nvt 0.196411 0.841553\\nvt 0.192017 0.837646\\nvt 0.185547 0.835205\\nvt 0.188843 0.836426\\nvt 0.200806 0.845459\\nvt 0.821289 0.384766\\nvt 0.830566 0.388184\\nvt 0.870117 0.384277\\nvt 0.928223 0.379883\\nvt 0.936523 0.381348\\nvt 0.944824 0.382812\\nvt 0.973633 0.384277\\nvt 0.961914 0.384766\\nvt 0.982422 0.424316\\nvt 0.980957 0.437012\\nvt 0.984863 0.455078\\nvt 0.987793 0.450195\\nvt 0.849121 0.498535\\nvt 0.828125 0.507812\\nvt 0.789063 0.547607\\nvt 0.792480 0.538818\\nvt 0.795898 0.529785\\nvt 0.746582 0.362305\\nvt 0.757813 0.365723\\nvt 0.977539 0.479004\\nvt 0.976563 0.476074\\nvt 0.981445 0.474609\\nvt 0.987305 0.458496\\nvt 0.962402 0.490234\\nvt 0.129028 0.384277\\nvt 0.070922 0.379883\\nvt 0.062622 0.381348\\nvt 0.002000 0.412109\\nvt 0.002000 0.408691\\nvt 0.000599 0.397949\\nvt 0.001600 0.393066\\nvt 0.012298 0.386719\\nvt 0.037200 0.384766\\nvt 0.054290 0.382812\\nvt 0.014701 0.428711\\nvt 0.011299 0.450195\\nvt 0.142212 0.497559\\nvt 0.146118 0.498047\\nvt 0.150024 0.498535\\nvt 0.187622 0.519287\\nvt 0.216919 0.374512\\nvt 0.264404 0.359375\\nvt 0.281738 0.354980\\nvt 0.252930 0.362793\\nvt 0.241333 0.365723\\nvt 0.017700 0.474609\\nvt 0.047912 0.494141\\nvt 0.010803 0.420898\\nvt 0.298828 0.350586\\nvn -0.263500 -0.018200 0.964500\\nvn -0.000200 0.019100 0.999800\\nvn 0.020300 0.405700 0.913800\\nvn -0.292300 0.373000 0.880500\\nvn -0.496500 -0.446700 0.744200\\nvn 0.000000 -0.415200 0.909700\\nvn 0.003800 0.508700 0.860900\\nvn -0.334200 0.474100 0.814500\\nvn -0.548300 -0.056100 0.834400\\nvn -0.632500 0.279700 0.722300\\nvn -0.541800 -0.177800 0.821400\\nvn -0.281300 -0.716300 0.638500\\nvn -0.193000 -0.261500 0.945700\\nvn -0.639500 0.243600 0.729100\\nvn -0.611000 0.376300 0.696400\\nvn 0.006100 0.429200 0.903200\\nvn -0.369100 0.284800 0.884700\\nvn -0.445700 0.249900 0.859600\\nvn -0.588300 0.223400 0.777100\\nvn -0.545300 0.394800 0.739400\\nvn -0.777900 0.118400 0.617000\\nvn -0.007500 0.246700 0.969100\\nvn -0.134000 0.217100 0.966900\\nvn 0.002400 0.415800 0.909400\\nvn -0.171500 0.441200 0.880900\\nvn -0.457900 -0.029500 0.888500\\nvn -0.568600 0.596700 0.566200\\nvn 0.003200 0.758200 0.652000\\nvn -0.240800 0.723800 0.646600\\nvn -0.374100 0.431900 0.820700\\nvn -0.534200 -0.453800 0.713200\\nvn -0.765300 -0.208000 0.609100\\nvn -0.466000 0.011300 0.884700\\nvn -0.378200 0.662400 0.646700\\nvn -0.537800 0.470000 0.699900\\nvn -0.533700 0.093100 0.840500\\nvn -0.440100 0.060900 0.895800\\nvn -0.691700 0.184800 0.698100\\nvn -0.643300 0.066700 0.762700\\nvn -0.242400 0.366200 0.898400\\nvn -0.602200 0.705200 0.374300\\nvn 0.008400 0.671600 0.740900\\nvn -0.711800 0.698900 0.068500\\nvn -0.619000 0.542800 0.567500\\nvn -0.814300 0.170200 0.554900\\nvn -0.412800 0.898600 -0.148600\\nvn -0.872300 0.331300 0.359600\\nvn -0.837600 -0.102500 0.536600\\nvn -0.384900 0.542400 0.746700\\nvn 0.189700 0.475100 0.859200\\nvn 0.567000 0.733800 0.374000\\nvn 0.096700 -0.435700 0.894900\\nvn 0.575500 -0.465300 0.672400\\nvn 0.063300 -0.690000 0.721100\\nvn 0.831700 -0.138900 0.537600\\nvn 0.205400 -0.538700 0.817000\\nvn -0.456400 -0.601000 0.656000\\nvn -0.897100 0.186800 0.400400\\nvn -0.961900 0.244700 -0.121600\\nvn -0.807200 -0.528700 0.262300\\nvn -0.492300 -0.726700 0.479000\\nvn -0.804700 -0.209300 0.555500\\nvn -0.607100 -0.585000 0.537800\\nvn -0.207700 -0.415400 0.885600\\nvn -0.091800 -0.311500 0.945800\\nvn -0.010100 -0.409700 0.912100\\nvn -0.005900 -0.568700 0.822500\\nvn -0.655300 -0.358500 0.664800\\nvn -0.067300 -0.051900 0.996400\\nvn 0.008100 -0.013100 0.999900\\nvn -0.499800 -0.697400 0.513500\\nvn 0.082700 -0.448300 0.890000\\nvn -0.068300 -0.489900 0.869000\\nvn -0.418200 -0.419100 0.805900\\nvn -0.495600 0.083600 0.864500\\nvn -0.743200 -0.161600 0.649200\\nvn -0.554600 -0.744700 0.371200\\nvn -0.171900 -0.857500 0.484800\\nvn 0.175900 -0.791500 0.585200\\nvn 0.218400 -0.855300 -0.469900\\nvn 0.208700 -0.822400 -0.529200\\nvn 0.579500 -0.367900 -0.727100\\nvn 0.633400 -0.555300 -0.538900\\nvn 0.115200 -0.953400 -0.278700\\nvn 0.427700 -0.869400 -0.247600\\nvn 0.333500 -0.845300 -0.417300\\nvn 0.368500 -0.578000 -0.728000\\nvn 0.262900 -0.449800 -0.853500\\nvn 0.340400 -0.219700 -0.914200\\nvn 0.437100 -0.608100 -0.662700\\nvn 0.680700 -0.692600 -0.238500\\nvn 0.148800 -0.446400 -0.882300\\nvn 0.173800 -0.742200 -0.647200\\nvn 0.365900 0.896600 0.249200\\nvn 0.436200 0.898700 0.045000\\nvn 0.515700 0.856400 -0.022900\\nvn 0.506400 0.862000 -0.023800\\nvn 0.174700 0.983700 -0.043200\\nvn 0.133400 0.969200 0.206900\\nvn -0.014000 0.150400 0.988500\\nvn 0.000000 0.980300 0.197300\\nvn 0.065400 0.952100 0.298500\\nvn -0.378000 0.107100 0.919600\\nvn 0.002000 -0.868500 -0.495700\\nvn -0.005800 -0.870400 -0.492200\\nvn -0.507400 -0.840700 -0.189000\\nvn -0.483000 -0.866600 -0.125000\\nvn -0.647300 -0.684100 0.336100\\nvn -0.663300 -0.664000 0.345300\\nvn -0.040900 -0.939000 0.341300\\nvn -0.303800 -0.947600 0.098300\\nvn -0.427000 -0.710100 0.559800\\nvn -0.018900 -0.735200 0.677600\\nvn -0.667500 -0.450600 0.592800\\nvn -0.315300 0.594700 0.739500\\nvn -0.009400 0.999400 -0.032400\\nvn -0.448700 0.227400 0.864300\\nvn -0.296400 -0.927500 -0.227900\\nvn 0.008000 -0.954100 -0.299300\\nvn -0.454200 -0.761500 0.462300\\nvn -0.402300 -0.879900 0.252600\\nvn 0.273500 -0.133600 0.952500\\nvn -0.446900 -0.889500 0.095100\\nvn -0.633400 -0.602100 0.486000\\nvn -0.706800 -0.582800 0.400900\\nvn -0.430200 -0.700700 0.569100\\nvn -0.337500 -0.703700 0.625100\\nvn 0.786100 0.553500 0.274900\\nvn 0.525800 0.805000 0.274800\\nvn 0.862300 0.396400 0.315100\\nvn 0.280800 0.841000 0.462500\\nvn 0.784500 -0.306500 0.539100\\nvn 0.239300 -0.652800 0.718700\\nvn 0.952400 -0.300400 0.051400\\nvn 0.878500 0.464200 0.113000\\nvn -0.440100 -0.680800 0.585400\\nvn -0.594000 -0.487100 0.640200\\nvn -0.100700 -0.936100 0.336900\\nvn 0.562500 -0.825400 0.046800\\nvn 0.602000 -0.781100 0.165400\\nvn 0.847200 -0.479900 -0.227800\\nvn -0.604600 -0.701000 0.378200\\nvn 0.633100 -0.629500 -0.450400\\nvn 0.613700 -0.608800 -0.502700\\nvn 0.898800 -0.017500 -0.437900\\nvn 0.841900 0.071400 -0.534900\\nvn 0.289200 -0.261700 -0.920800\\nvn 0.055500 -0.593600 -0.802800\\nvn -0.019300 -0.842400 -0.538500\\nvn 0.815000 -0.454800 -0.359000\\nvn 0.952700 -0.085800 -0.291400\\nvn 0.754400 -0.651600 -0.078400\\nvn -0.774800 -0.543200 0.323400\\nvn -0.484400 -0.660300 0.573900\\nvn -0.459200 -0.795600 0.395100\\nvn -0.543600 -0.839300 0.010000\\nvn -0.878400 -0.457700 -0.137800\\nvn -0.731100 -0.661200 -0.168100\\nvn -0.922400 -0.159500 -0.351800\\nvn -0.939800 -0.024700 -0.340700\\nvn -0.910100 0.014600 -0.414000\\nvn -0.923900 0.099600 -0.369500\\nvn -0.826200 0.088400 0.556400\\nvn -0.908600 0.189600 -0.372100\\nvn -0.928000 0.070700 -0.365700\\nvn -0.959200 0.116100 0.257900\\nvn -0.696600 0.511800 -0.502800\\nvn -0.403500 0.697300 -0.592300\\nvn -0.967800 0.244400 -0.059300\\nvn -0.579100 0.759100 0.297300\\nvn 0.027400 0.883700 -0.467200\\nvn 0.252300 0.817700 -0.517300\\nvn -0.174200 0.776200 -0.605800\\nvn -0.595400 0.453900 -0.662800\\nvn -0.760600 0.222100 -0.609900\\nvn 0.302300 0.880500 -0.365000\\nvn -0.044200 0.757200 -0.651600\\nvn 0.707400 0.704100 0.060700\\nvn 0.717900 0.694200 0.052000\\nvn 0.435800 -0.037200 0.899200\\nvn 0.222200 0.668800 0.709400\\nvn 0.345400 0.067400 0.936000\\nvn -0.474000 -0.589500 0.654000\\nvn -0.595500 -0.090500 0.798200\\nvn -0.428400 -0.572200 0.699200\\nvn 0.509300 0.028100 0.860100\\nvn -0.071100 0.843300 0.532700\\nvn -0.992900 0.049200 0.108400\\nvn -0.810000 -0.565300 0.155900\\nvn -0.265800 -0.955700 -0.126600\\nvn -0.031600 -0.811600 0.583400\\nvn 0.002300 -0.806900 0.590600\\nvn 0.388000 -0.553000 -0.737300\\nvn 0.722100 -0.209700 -0.659200\\nvn 0.367900 -0.873800 -0.318000\\nvn -0.021500 -0.975500 0.218800\\nvn -0.492900 -0.863400 -0.107500\\nvn -0.790900 -0.300800 0.532800\\nvn -0.721900 -0.360700 0.590600\\nvn -0.626300 -0.122800 0.769900\\nvn -0.664800 -0.171000 0.727100\\nvn -0.699800 -0.393300 0.596300\\nvn -0.314800 0.496700 0.808800\\nvn -0.441100 0.289900 0.849300\\nvn -0.595500 0.378300 0.708700\\nvn -0.818400 0.267000 0.508800\\nvn -0.668600 -0.077900 0.739500\\nvn -0.374000 0.614700 0.694400\\nvn -0.268800 0.724900 0.634200\\nvn -0.033600 0.743400 0.668000\\nvn 0.019400 0.856800 0.515300\\nvn 0.213900 0.557200 0.802300\\nvn -0.054000 0.810400 0.583400\\nvn -0.630800 0.095800 0.770000\\nvn -0.581600 -0.547800 0.601400\\nvn -0.510900 -0.712300 0.481100\\nvn -0.433700 -0.577000 0.692100\\nvn -0.077200 -0.729200 0.679900\\nvn -0.305100 -0.456000 0.836000\\nvn -0.128700 0.019500 0.991500\\nvn 0.973600 -0.220000 -0.060000\\nvn 0.836900 -0.247000 0.488400\\nvn -0.005100 0.919100 0.394100\\nvn 0.014400 0.996000 0.087600\\nvn 0.177100 0.981500 0.072000\\nvn -0.008500 0.949600 -0.313200\\nvn 0.039200 0.922700 -0.383600\\nvn -0.003400 0.931900 -0.362800\\nvn -0.300500 0.849200 -0.434100\\nvn 0.445500 0.893900 0.049000\\nvn -0.408600 0.665200 -0.624900\\nvn 0.734500 -0.033900 -0.677800\\nvn 0.548300 -0.258400 -0.795300\\nvn 0.025300 0.885800 0.463300\\nvn 0.965100 0.103200 0.240700\\nvn 0.646800 0.579800 0.495500\\nvn 0.006600 0.823600 0.567100\\nvn -0.005900 0.951900 0.306200\\nvn 0.000000 0.906000 0.423100\\nvn 0.377100 0.661300 0.648400\\nvn 0.000000 0.659800 0.751400\\nvn 0.468900 -0.329400 0.819500\\nvn 0.000000 -0.362600 0.931900\\nvn 0.358900 -0.919300 0.161300\\nvn 0.000000 -0.974900 0.222800\\nvn 0.269300 -0.008100 0.963000\\nvn 0.305500 0.378600 0.873700\\nvn 0.496400 -0.447200 0.744000\\nvn 0.332800 0.466900 0.819300\\nvn 0.558800 -0.049300 0.827800\\nvn 0.617700 0.275100 0.736700\\nvn 0.540300 -0.141300 0.829500\\nvn 0.286200 -0.711400 0.641800\\nvn 0.203400 -0.259000 0.944200\\nvn 0.629500 0.234800 0.740700\\nvn 0.601300 0.379500 0.703100\\nvn 0.370600 0.282700 0.884700\\nvn 0.440500 0.243300 0.864100\\nvn 0.590700 0.227700 0.774100\\nvn 0.555900 0.398400 0.729500\\nvn 0.777600 0.119600 0.617200\\nvn 0.140100 0.215200 0.966500\\nvn 0.163900 0.456000 0.874700\\nvn 0.460900 -0.033000 0.886800\\nvn 0.575900 0.592600 0.563000\\nvn 0.221400 0.727800 0.649100\\nvn 0.361100 0.435400 0.824600\\nvn 0.762000 -0.215700 0.610500\\nvn 0.535800 -0.453400 0.712300\\nvn 0.472800 0.004800 0.881100\\nvn 0.362500 0.663700 0.654300\\nvn 0.536500 0.461000 0.706800\\nvn 0.536600 0.079400 0.840100\\nvn 0.651700 0.050000 0.756800\\nvn 0.686400 0.184300 0.703400\\nvn 0.456700 0.076800 0.886300\\nvn 0.240200 0.357200 0.902600\\nvn -0.024700 0.682900 0.730000\\nvn 0.598200 0.711000 0.369500\\nvn 0.713500 0.697400 0.067200\\nvn 0.620700 0.542000 0.566400\\nvn 0.815300 0.173200 0.552400\\nvn 0.086200 0.837500 0.539500\\nvn 0.412800 0.898600 -0.148100\\nvn 0.873100 0.333600 0.355400\\nvn 0.832400 -0.113600 0.542400\\nvn -0.567000 0.733800 0.374000\\nvn -0.189700 0.475100 0.859200\\nvn 0.384900 0.542400 0.746700\\nvn -0.831000 -0.137600 0.538900\\nvn -0.512100 0.025100 0.858500\\nvn -0.560200 -0.478900 0.675900\\nvn -0.207000 -0.538800 0.816600\\nvn 0.457300 -0.599400 0.656900\\nvn 0.897100 0.186800 0.400400\\nvn -0.070500 -0.685500 0.724600\\nvn 0.961900 0.244600 -0.121500\\nvn 0.813000 -0.526500 0.248500\\nvn 0.490000 -0.727700 0.480000\\nvn 0.801200 -0.229800 0.552500\\nvn 0.214700 -0.421600 0.881000\\nvn 0.491100 -0.590000 0.640800\\nvn 0.437200 -0.560000 0.703700\\nvn 0.566400 -0.181700 0.803800\\nvn 0.098800 -0.300900 0.948500\\nvn 0.651700 -0.349300 0.673200\\nvn 0.078100 -0.053000 0.995500\\nvn 0.004400 -0.018600 0.999800\\nvn 0.495500 -0.695800 0.519900\\nvn -0.093500 -0.450500 0.887800\\nvn 0.063400 -0.484500 0.872500\\nvn 0.412800 -0.409500 0.813600\\nvn 0.483000 0.095200 0.870400\\nvn 0.744700 -0.155500 0.648900\\nvn 0.553400 -0.748300 0.365800\\nvn 0.167500 -0.858600 0.484500\\nvn -0.182200 -0.792000 0.582700\\nvn -0.227800 -0.850800 -0.473500\\nvn -0.208700 -0.822000 -0.529900\\nvn -0.579500 -0.367900 -0.727100\\nvn -0.633400 -0.555300 -0.538900\\nvn -0.116400 -0.953200 -0.279200\\nvn -0.333500 -0.845300 -0.417300\\nvn -0.427700 -0.869400 -0.247600\\nvn -0.372600 -0.578200 -0.725800\\nvn -0.274200 -0.446800 -0.851600\\nvn -0.356400 -0.205300 -0.911500\\nvn -0.461400 -0.560700 -0.687500\\nvn -0.686500 -0.681100 -0.254500\\nvn -0.165900 -0.767200 -0.619600\\nvn -0.144300 -0.462200 -0.874900\\nvn -0.528200 0.849000 0.006700\\nvn -0.433600 0.900300 0.037800\\nvn -0.347000 0.895000 0.280400\\nvn -0.492100 0.870400 -0.008800\\nvn -0.043200 0.926900 0.372600\\nvn 0.391500 0.051900 0.918700\\nvn 0.513300 -0.836200 -0.193100\\nvn 0.488100 -0.861000 -0.142900\\nvn 0.655900 -0.672300 0.343200\\nvn 0.669100 -0.651700 0.357000\\nvn 0.250500 -0.963300 0.096200\\nvn 0.420700 -0.707200 0.568200\\nvn 0.681500 -0.475100 0.556600\\nvn -0.166900 0.985600 -0.025200\\nvn 0.390500 0.547500 0.740000\\nvn 0.443000 0.213300 0.870800\\nvn 0.295500 -0.926600 -0.232600\\nvn 0.458400 -0.765600 0.451300\\nvn 0.396000 -0.883600 0.249600\\nvn -0.208000 -0.125700 0.970000\\nvn 0.281700 -0.958200 -0.050200\\nvn 0.452300 -0.887300 0.089500\\nvn 0.716000 -0.566100 0.408400\\nvn 0.645300 -0.598200 0.475100\\nvn 0.426900 -0.714900 0.553800\\nvn 0.329800 -0.724400 0.605300\\nvn -0.517100 0.824200 0.231000\\nvn -0.294200 0.903000 0.313100\\nvn -0.751900 0.577900 0.317300\\nvn -0.864300 0.397400 0.308200\\nvn -0.787400 -0.287500 0.545200\\nvn -0.203600 -0.675300 0.708900\\nvn -0.952000 -0.301900 0.050900\\nvn -0.952700 -0.085800 -0.291400\\nvn -0.847200 -0.479900 -0.227800\\nvn 0.600500 -0.478000 0.640900\\nvn 0.440600 -0.693300 0.570200\\nvn 0.083100 -0.939700 0.331800\\nvn -0.560700 -0.826600 0.047900\\nvn -0.602000 -0.781100 0.165400\\nvn 0.597400 -0.701300 0.388800\\nvn -0.633100 -0.629500 -0.450400\\nvn -0.613700 -0.608800 -0.502700\\nvn -0.734500 -0.033900 -0.677800\\nvn -0.841900 0.071400 -0.534900\\nvn -0.548300 -0.258400 -0.795300\\nvn -0.289600 -0.266200 -0.919400\\nvn 0.000000 -0.948700 -0.316000\\nvn -0.367900 -0.873800 -0.318000\\nvn -0.388000 -0.553000 -0.737300\\nvn 0.767000 -0.567500 0.299400\\nvn 0.578400 -0.815700 0.003100\\nvn 0.447800 -0.815800 0.365900\\nvn 0.504100 -0.658400 0.558900\\nvn 0.883800 -0.450000 -0.128200\\nvn 0.741700 -0.648300 -0.172000\\nvn 0.939300 -0.019800 -0.342500\\nvn 0.932000 -0.145900 -0.331700\\nvn 0.924600 0.100900 -0.367100\\nvn 0.912700 0.011900 -0.408500\\nvn 0.931000 0.066900 -0.358800\\nvn 0.911100 0.181600 -0.370000\\nvn 0.825300 0.078700 0.559100\\nvn 0.956500 0.108300 0.270700\\nvn 0.706100 0.504800 -0.496500\\nvn 0.388800 0.722500 -0.571600\\nvn 0.965700 0.255600 -0.046100\\nvn -0.040300 0.880600 -0.472200\\nvn 0.587500 0.742900 0.320600\\nvn 0.160500 0.777900 -0.607500\\nvn -0.263300 0.832000 -0.488300\\nvn 0.585700 0.442000 -0.679400\\nvn 0.741500 0.241200 -0.626000\\nvn 0.048400 0.729900 -0.681800\\nvn -0.305300 0.875800 -0.373800\\nvn -0.708300 0.704300 0.047900\\nvn -0.706700 0.705100 0.057000\\nvn -0.428700 -0.023300 0.903100\\nvn -0.237600 0.669800 0.703400\\nvn -0.347600 0.088600 0.933400\\nvn -0.085700 -0.442100 0.892800\\nvn 0.994400 0.039300 0.098100\\nvn 0.973600 -0.177400 0.143800\\nvn -0.815000 -0.454800 -0.359000\\nvn -0.722100 -0.209700 -0.659200\\nvn 0.782900 -0.303400 0.543100\\nvn 0.817300 -0.551700 0.165900\\nvn 0.739200 -0.349400 0.575600\\nvn 0.635000 -0.115000 0.763900\\nvn 0.665800 -0.170100 0.726500\\nvn 0.700500 -0.393100 0.595600\\nvn 0.304000 0.478900 0.823500\\nvn 0.449100 0.284900 0.846800\\nvn 0.586700 0.370500 0.720000\\nvn 0.668100 -0.078700 0.739900\\nvn 0.815600 0.251100 0.521200\\nvn 0.282800 0.720700 0.632900\\nvn 0.388600 0.583500 0.713000\\nvn 0.036000 0.727000 0.685700\\nvn -0.029900 0.842700 0.537500\\nvn -0.246600 0.553800 0.795200\\nvn 0.072500 0.779000 0.622800\\nvn 0.623300 0.096900 0.776000\\nvn 0.510900 -0.712300 0.481100\\nvn 0.580800 -0.546800 0.603000\\nvn 0.435900 -0.575700 0.691700\\nvn 0.137400 0.044100 0.989500\\nvn 0.301400 -0.447800 0.841800\\nvn -0.898800 -0.017500 -0.437900\\nvn -0.754400 -0.651600 -0.078400\\nvn -0.836900 -0.247000 0.488400\\nvn -0.973600 -0.220000 -0.060000\\nvn -0.193400 0.972200 0.131800\\nvn -0.014200 0.900700 0.434200\\nvn -0.030800 0.916300 -0.399200\\nvn 0.333700 0.848600 -0.410500\\nvn -0.529800 0.844700 0.076400\\nvn 0.430400 0.666600 -0.608600\\nvn -0.878500 0.464000 0.113400\\nvn -0.965100 0.103200 0.240700\\nvn -0.646800 0.579800 0.495500\\nvn -0.280600 0.841400 0.461700\\nvn -0.006700 0.823700 0.566900\\nvn -0.377100 0.661300 0.648400\\nvn -0.468900 -0.329400 0.819500\\nvn -0.358900 -0.919300 0.161300\\nvn 0.242000 -0.800900 0.547700\\nvn -0.933300 -0.197600 0.299800\\nvn -0.651600 -0.758300 -0.016700\\nvn -0.755800 -0.485600 0.439300\\nvn -0.504000 -0.849500 -0.155900\\nvn -0.578900 -0.780500 0.235700\\nvn -0.881900 -0.399400 -0.250300\\nvn -0.629600 0.035200 0.776100\\nvn 0.032000 0.541200 0.840300\\nvn -0.404200 0.319200 0.857100\\nvn 0.058200 -0.106700 0.992600\\nvn -0.641900 -0.545500 0.538900\\nvn 0.560800 -0.795300 0.230000\\nvn 0.667400 -0.447600 0.595100\\nvn -0.530700 -0.823400 0.200900\\nvn 0.351400 0.084000 0.932500\\nvn -0.842900 -0.282400 0.458000\\nvn -0.139400 -0.457500 0.878200\\nvn -0.913500 -0.079200 0.398900\\nvn 0.154500 0.078400 0.984900\\nvn -0.791300 0.315700 0.523600\\nvn 0.232200 -0.353700 0.906100\\nvn 0.959700 0.280200 -0.020100\\nvn -0.254700 0.762100 -0.595200\\nvn -0.275500 0.695100 -0.664000\\nvn 0.698500 0.671400 0.247600\\nvn -0.219200 0.936100 -0.275000\\nvn 0.687900 0.300500 -0.660700\\nvn 0.816200 0.532900 0.222900\\nvn 0.994500 0.094300 0.044900\\nvn 0.822800 0.468800 -0.321100\\nvn 0.683700 0.329700 -0.651100\\nvn 0.796900 0.572000 0.194300\\nvn 0.993400 0.113400 0.016200\\nvn 0.959500 -0.250700 -0.128400\\nvn -0.094000 -0.372500 -0.923200\\nvn 0.832000 -0.416900 -0.366100\\nvn 0.603400 -0.300600 -0.738600\\nvn -0.714600 0.133600 -0.686600\\nvn 0.741800 0.211100 -0.636400\\nvn -0.396300 0.315400 -0.862200\\nvn 0.668800 -0.445200 -0.595400\\nvn -0.328200 -0.268200 -0.905700\\nvn 0.592100 0.804800 0.042400\\nvn -0.716000 0.515500 -0.470600\\nvn -0.457700 0.886300 -0.070700\\nvn 0.687400 0.709300 0.156000\\nvn -0.521900 0.616300 -0.589700\\nvn -0.428900 0.901600 -0.055500\\nvn -0.335300 0.671600 -0.660600\\nvn 0.645400 0.715100 0.268500\\nvn 0.948200 0.317000 0.017900\\nvn 0.919000 0.364800 -0.149200\\nvn 0.230900 -0.481900 0.845300\\nvn 0.244500 -0.655700 0.714300\\nvn 0.049400 0.530200 0.846400\\nvn 0.065800 -0.143600 0.987400\\nvn 0.171000 -0.242700 0.954900\\nvn 0.465700 -0.799400 0.379600\\nvn 0.840200 0.179400 -0.511600\\nvn 0.517100 -0.401000 0.756100\\nvn 0.285700 -0.908300 0.305700\\nvn 0.924700 -0.126300 -0.359000\\nvn 0.392800 -0.655900 0.644600\\nvn 0.855000 0.442800 -0.269900\\nvn -0.132300 -0.601600 0.787700\\nvn 0.649600 -0.711600 -0.267800\\nvn 0.942200 -0.298100 0.152700\\nvn -0.872200 -0.469400 -0.137600\\nvn 0.141300 -0.176200 -0.974200\\nvn -0.570300 -0.771000 -0.283200\\nvn 0.093400 0.198800 -0.975600\\nvn -0.108200 -0.482900 -0.869000\\nvn -0.266000 -0.192600 -0.944500\\nvn -0.994100 -0.080800 0.071500\\nvn -0.837500 -0.399500 0.372800\\nvn 0.943900 -0.289200 0.159200\\nvn 0.828300 -0.298400 -0.474200\\nvn 0.823100 0.009100 -0.567700\\nvn -0.618000 0.010400 0.786100\\nvn -0.363900 0.819200 0.443100\\nvn -0.884500 0.448000 0.130000\\nvn 0.706300 0.293900 -0.644000\\nvn -0.622000 -0.743400 0.245800\\nvn -0.364800 -0.876500 -0.314000\\nvn 0.235200 -0.915100 0.327600\\nvn 0.247400 -0.380300 -0.891200\\nvn 0.700000 -0.269700 -0.661200\\nvn -0.115800 -0.935000 0.335200\\nvn -0.775000 -0.452200 0.441500\\nvn -0.597600 0.033300 0.801100\\nvn -0.399500 0.826300 0.397000\\nvn -0.876000 0.466200 0.123200\\nvn -0.991100 -0.068700 0.114100\\nvn -0.936000 -0.151300 0.317800\\nvn -0.752500 0.388100 0.532100\\nvn 0.600900 -0.789500 -0.124900\\nvn 0.896900 -0.403400 -0.181000\\nvn 0.779300 -0.419300 0.465700\\nvn -0.032000 0.541200 0.840300\\nvn -0.058200 -0.106700 0.992600\\nvn 0.629600 0.035200 0.776100\\nvn 0.913500 -0.079200 0.398900\\nvn 0.791300 0.315700 0.523600\\nvn -0.154500 0.078400 0.984900\\nvn -0.232200 -0.353700 0.906100\\nvn -0.180900 0.091300 0.979200\\nvn -0.230900 -0.481900 0.845300\\nvn 0.936000 -0.151300 0.317800\\nvn 0.991100 -0.068700 0.114100\\nvn -0.244500 -0.655700 0.714300\\nvn -0.687900 0.300500 -0.660700\\nvn -0.994500 0.094300 0.044900\\nvn -0.816200 0.532900 0.222900\\nvn -0.822800 0.468800 -0.321100\\nvn -0.857800 0.034700 -0.512700\\nvn -0.118000 -0.134600 -0.983800\\nvn -0.271000 -0.609200 -0.745300\\nvn -0.700000 -0.269700 -0.661200\\nvn -0.796900 0.572000 0.194300\\nvn -0.761700 0.524600 -0.380300\\nvn -0.683700 0.329700 -0.651100\\nvn 0.714700 0.133600 -0.686600\\nvn 0.441500 -0.456000 -0.772700\\nvn -0.603400 -0.300600 -0.738600\\nvn -0.741800 0.211100 -0.636400\\nvn 0.396300 0.315400 -0.862200\\nvn 0.328200 -0.268200 -0.905700\\nvn -0.668800 -0.445200 -0.595400\\nvn 0.716000 0.515500 -0.470700\\nvn -0.765200 0.517500 -0.382900\\nvn -0.592100 0.804800 0.042400\\nvn -0.687400 0.709300 0.156000\\nvn 0.428900 0.901600 -0.055500\\nvn 0.521900 0.616300 -0.589700\\nvn 0.335300 0.671600 -0.660600\\nvn -0.948200 0.317000 0.017900\\nvn -0.645400 0.715100 0.268500\\nvn -0.698500 0.671400 0.247600\\nvn -0.959700 0.280200 -0.020100\\nvn -0.919000 0.364800 -0.149100\\nvn -0.203700 -0.672900 -0.711100\\nvn -0.126400 -0.135100 -0.982700\\nvn -0.049400 0.530200 0.846400\\nvn -0.065800 -0.143600 0.987400\\nvn -0.993400 0.113400 0.016200\\nvn -0.831900 -0.416900 -0.366100\\nvn -0.959500 -0.250700 -0.128400\\nvn -0.171000 -0.242700 0.954900\\nvn -0.242000 -0.800900 0.547700\\nvn -0.793200 -0.519700 -0.317400\\nvn -0.465700 -0.799400 0.379600\\nvn -0.517100 -0.401000 0.756100\\nvn -0.840200 0.179400 -0.511600\\nvn -0.285700 -0.908300 0.305700\\nvn -0.392800 -0.655900 0.644600\\nvn -0.924700 -0.126300 -0.359000\\nvn 0.573800 -0.739000 0.353000\\nvn 0.143600 -0.864300 0.481900\\nvn -0.623100 -0.752500 -0.213000\\nvn 0.842900 -0.282400 0.458000\\nvn 0.741300 0.122900 0.659800\\nvn 0.876100 0.466200 0.123200\\nvn -0.098300 0.609100 -0.787000\\nvn -0.359400 0.898600 -0.251600\\nvn 0.933300 -0.197600 0.299800\\nvn 0.651600 -0.758300 -0.016700\\nvn 0.108200 -0.482900 -0.869000\\nvn 0.266000 -0.192600 -0.944500\\nvn 0.994100 -0.080800 0.071500\\nvn 0.094000 -0.372500 -0.923200\\nvn 0.641900 -0.545500 0.538900\\nvn 0.837500 -0.399500 0.372800\\nvn 0.719000 -0.694400 -0.029400\\nvn -0.225200 -0.918900 0.323900\\nvn 0.381600 -0.870800 -0.310100\\nvn 0.779700 -0.426100 0.458700\\nvn 0.042600 -0.569700 0.820700\\nvn -0.943900 -0.289200 0.159200\\nvn -0.823100 0.009200 -0.567700\\nvn -0.828300 -0.298400 -0.474200\\nvn 0.424800 0.332800 0.841900\\nvn 0.315700 0.926200 0.206100\\nvn -0.266700 0.611800 0.744700\\nvn 0.398800 0.311300 0.862500\\nvn -0.638300 0.525400 -0.562600\\nvn -0.370700 0.692800 -0.618500\\nvn 0.618100 0.010300 0.786000\\nvn 0.884500 0.447900 0.130000\\nvn 0.363900 0.819200 0.443200\\nvn -0.929400 0.335100 0.154100\\nvn 0.622800 0.007800 0.782300\\nvn -0.706300 0.294000 -0.643900\\nvn 0.364800 -0.876500 -0.314000\\nvn -0.235200 -0.915100 0.327500\\nvn -0.888200 -0.378300 -0.260500\\nvn -0.828900 0.078500 -0.553800\\nvn -0.951200 0.302600 0.059800\\nvn -0.394400 0.666200 -0.632900\\nvn 0.399500 0.826300 0.397000\\nvn 0.418100 0.376100 0.826800\\nvn 0.597600 0.033300 0.801100\\nvn -0.285300 0.567300 0.772400\\nvn 0.265500 0.957100 0.116000\\nvn -0.718400 0.279800 -0.636900\\nvn 0.404200 0.319200 0.857100\\nvn 0.578900 -0.780600 0.235700\\nvn 0.504000 -0.849500 -0.155900\\nvn -0.911500 -0.379300 -0.158800\\nvn -0.564900 0.698100 0.439800\\nvn -0.564100 0.823000 -0.065800\\nvn -0.965400 -0.257600 -0.041000\\nvn -0.369600 0.758300 -0.536900\\nvn -0.886700 -0.447000 0.118500\\nvn 0.369700 0.758300 -0.536900\\nvn 0.564100 0.823000 -0.065800\\nvn 0.965400 -0.257600 -0.041000\\nvn 0.000000 0.869800 -0.493400\\nvn 0.000000 0.993700 -0.111700\\nvn 0.564900 0.698100 0.439800\\nvn 0.000000 0.790100 0.612900\\nvn 0.000000 -0.990500 0.137500\\nvn 0.000000 -0.928500 0.371300\\nvn 0.886600 -0.447000 0.118500\\nvn 0.678400 0.109400 0.726500\\nvn 0.000000 -0.134000 0.991000\\nvn 0.911500 -0.379300 -0.158800\\nvn 0.653200 -0.745300 -0.133000\\nvn 0.000000 -0.996300 0.085800\\nvn 0.000000 -0.914500 -0.404400\\nvn -0.751700 -0.652700 0.094000\\nvn -0.777500 -0.621300 0.097200\\nvn -0.764300 -0.637600 0.096100\\nvn -0.819300 -0.535500 0.204700\\nvn -0.789200 -0.581600 0.197200\\nvn -0.885400 -0.440700 0.147900\\nvn -0.885700 -0.440300 0.147000\\nvn -0.239300 -0.684400 0.688700\\nvn -0.314200 -0.669100 0.673500\\nvn -0.263900 -0.679700 0.684300\\nvn -0.471100 -0.578100 0.666200\\nvn -0.371300 -0.620900 0.690400\\nvn -0.553400 -0.552800 0.623000\\nvn -0.553700 -0.553000 0.622500\\nvn 0.457200 -0.681500 0.571400\\nvn 0.297700 -0.709100 0.639100\\nvn 0.377500 -0.696500 0.610200\\nvn 0.303400 -0.456400 0.836500\\nvn 0.384900 -0.449800 0.805900\\nvn 0.236800 -0.458000 0.856800\\nvn 0.236800 -0.458100 0.856800\\nvn 0.000000 0.554700 0.832000\\nvn 0.000000 0.442200 0.896900\\nvn 0.001600 0.468400 0.883500\\nvn 0.350600 0.263200 0.898800\\nvn 0.351900 0.262800 0.898400\\nvn 0.000000 0.453500 0.891200\\nvn 0.000000 0.472900 0.881100\\nvn 0.000000 0.461000 0.887400\\nvn 0.000000 0.480300 0.877100\\nvn -0.324200 0.914000 0.243600\\nvn -0.375900 0.882600 0.282400\\nvn -0.351300 0.897100 0.267900\\nvn -0.102300 0.405100 0.908500\\nvn -0.105000 0.403800 0.908700\\nvn -0.279400 0.605800 0.744900\\nvn -0.280600 0.607300 0.743200\\nvn 0.247300 0.031100 0.968400\\nvn 0.081500 0.449300 0.889600\\nvn 0.259300 0.034200 0.965100\\nvn 0.256600 0.032200 0.966000\\nvn 0.080400 0.451400 0.888700\\nvn -0.293600 0.427500 0.855000\\nvn -0.284600 0.428700 0.857400\\nvn -0.286300 0.428500 0.857000\\nvn -0.167100 0.449200 0.877700\\nvn -0.223900 0.433600 0.872800\\nvn -0.221400 0.433900 0.873300\\nvn -0.167100 0.449200 0.877600\\nvn -0.333800 0.928100 0.165100\\nvn -0.299600 0.942400 0.148300\\nvn -0.319800 0.934200 0.157900\\nvn -0.254800 0.967000 0.000200\\nvn -0.256400 0.966500 0.003800\\nvn -0.264000 0.406100 0.874800\\nvn -0.262600 0.404900 0.875900\\nvn -0.189900 0.429400 0.882900\\nvn -0.189900 0.429500 0.882800\\nvn 0.751500 -0.652900 0.094500\\nvn 0.764100 -0.637800 0.096700\\nvn 0.777200 -0.621600 0.097700\\nvn 0.819500 -0.535300 0.204300\\nvn 0.789400 -0.581400 0.196800\\nvn 0.885300 -0.440800 0.148200\\nvn 0.885600 -0.440400 0.147300\\nvn 0.239200 -0.684400 0.688700\\nvn 0.263900 -0.679700 0.684300\\nvn 0.314300 -0.669100 0.673400\\nvn 0.471100 -0.578100 0.666200\\nvn 0.371300 -0.620900 0.690400\\nvn 0.553600 -0.552900 0.622700\\nvn 0.554000 -0.553000 0.622300\\nvn -0.457400 -0.681400 0.571300\\nvn -0.377700 -0.696500 0.610100\\nvn -0.297800 -0.709100 0.639100\\nvn -0.303400 -0.456300 0.836500\\nvn -0.385000 -0.449700 0.805900\\nvn -0.236900 -0.457900 0.856800\\nvn -0.236800 -0.457900 0.856800\\nvn 0.000000 0.554700 0.832100\\nvn -0.001600 0.468400 0.883500\\nvn -0.350600 0.263200 0.898800\\nvn -0.351900 0.262800 0.898300\\nvn 0.000000 0.472800 0.881200\\nvn 0.324100 0.914100 0.243600\\nvn 0.351300 0.897100 0.267900\\nvn 0.375900 0.882500 0.282400\\nvn 0.102200 0.405000 0.908500\\nvn 0.104900 0.403800 0.908800\\nvn 0.279500 0.605900 0.744800\\nvn 0.280700 0.607400 0.743100\\nvn -0.247400 0.030900 0.968400\\nvn -0.081500 0.449300 0.889600\\nvn -0.256700 0.032100 0.965900\\nvn -0.259400 0.034100 0.965100\\nvn -0.080400 0.451400 0.888700\\nvn 0.293600 0.427500 0.855000\\nvn 0.286300 0.428500 0.857000\\nvn 0.284600 0.428700 0.857400\\nvn 0.221400 0.433800 0.873300\\nvn 0.223800 0.433600 0.872800\\nvn 0.167100 0.449200 0.877600\\nvn 0.167100 0.449100 0.877700\\nvn 0.333700 0.928100 0.164800\\nvn 0.319700 0.934300 0.157600\\nvn 0.299500 0.942500 0.147900\\nvn 0.254800 0.967000 0.000200\\nvn 0.256500 0.966500 0.003800\\nvn 0.264000 0.406200 0.874800\\nvn 0.262600 0.405000 0.875800\\nvn 0.189900 0.429500 0.882800\\nvn 0.882400 0.081200 0.463400\\nvn 0.770000 0.197000 0.606900\\nvn 0.630800 0.233600 0.740000\\nvn 0.966600 0.236500 0.098700\\nvn 0.802800 0.575700 0.155000\\nvn 0.973000 -0.055700 -0.223900\\nvn 0.753400 0.405600 0.517500\\nvn 0.974900 -0.217000 0.050100\\nvn 0.935900 0.019600 -0.351600\\nvn 0.983500 0.042300 -0.176100\\nvn 0.994500 -0.103400 -0.013800\\nvn 0.736700 0.124800 0.664600\\nvn 0.990400 -0.131400 0.041800\\nvn 0.991400 -0.105500 0.077200\\nvn 0.674100 0.167800 0.719300\\nvn 0.955000 0.017800 0.296200\\nvn 0.566100 0.207200 0.797900\\nvn 0.740800 -0.375800 -0.556700\\nvn 0.791900 -0.347800 -0.501800\\nvn 0.980700 -0.145800 -0.129700\\nvn 0.710700 -0.351700 -0.609300\\nvn 0.643700 -0.290000 -0.708200\\nvn 0.707200 -0.244900 -0.663200\\nvn 0.928800 -0.310900 -0.201800\\nvn 0.699700 -0.402700 -0.590100\\nvn 0.583300 -0.415800 -0.697700\\nvn 0.892400 -0.186000 -0.411100\\nvn 0.497900 -0.553000 -0.668000\\nvn 0.982300 0.114100 -0.148500\\nvn 0.882100 0.470900 0.003300\\nvn 0.957700 -0.103700 0.268500\\nvn 0.573400 0.818900 0.025000\\nvn 0.574200 0.782700 0.240100\\nvn -0.008200 0.943800 0.330400\\nvn 0.000200 0.995500 0.094600\\nvn -0.036200 0.555000 0.831000\\nvn -0.032700 0.326900 0.944500\\nvn -0.055900 0.266700 0.962100\\nvn -0.094400 0.300700 0.949000\\nvn -0.075200 0.281700 0.956500\\nvn -0.811400 0.120100 0.572000\\nvn -0.817800 0.120400 0.562700\\nvn -0.813000 0.156000 0.561000\\nvn -0.854900 0.295900 0.426000\\nvn -0.776900 0.626900 0.057300\\nvn -0.582200 0.804400 -0.117600\\nvn -0.946200 0.064100 -0.317100\\nvn -0.857500 -0.173100 -0.484400\\nvn -0.889300 0.428400 -0.159600\\nvn -0.596300 0.791200 0.135600\\nvn -0.981800 -0.141800 0.126400\\nvn -0.603400 -0.762800 -0.232300\\nvn -0.947500 -0.119800 -0.296300\\nvn -0.476100 -0.802300 -0.360000\\nvn 0.050700 -0.994500 0.091500\\nvn -0.094800 -0.988200 0.119900\\nvn -0.775700 -0.590800 0.221500\\nvn -0.750800 0.142200 0.644900\\nvn -0.194400 -0.048900 0.979700\\nvn -0.133600 0.572300 0.809000\\nvn -0.558800 0.650000 0.514900\\nvn -0.087600 0.263500 0.960700\\nvn -0.022700 0.921000 0.389000\\nvn -0.927900 0.298500 0.223500\\nvn -0.427100 0.003500 0.904200\\nvn -0.373400 0.668800 0.642900\\nvn -0.451700 0.354500 0.818700\\nvn 0.483500 0.624000 0.613800\\nvn 0.876900 0.342400 0.337100\\nvn 0.290300 0.641700 0.709900\\nvn 0.041700 0.563800 0.824800\\nvn 0.627000 0.105300 0.771800\\nvn -0.027300 -0.068200 0.997300\\nvn 0.263900 0.319100 0.910200\\nvn 0.292900 0.025500 0.955800\\nvn 0.204400 -0.706000 0.678000\\nvn 0.311800 -0.622100 0.718100\\nvn 0.214600 -0.489700 -0.845000\\nvn 0.202400 -0.283100 -0.937500\\nvn 0.555100 -0.327400 -0.764600\\nvn 0.156300 -0.218000 -0.963300\\nvn 0.615600 -0.226800 -0.754600\\nvn 0.117600 -0.118100 -0.986000\\nvn 0.595200 -0.126100 -0.793600\\nvn 0.578100 -0.224100 -0.784600\\nvn 0.095100 -0.902400 -0.420300\\nvn -0.207400 -0.640300 -0.739600\\nvn -0.663800 -0.011600 -0.747800\\nvn -0.779500 -0.081600 -0.621100\\nvn -0.840500 -0.487800 -0.235700\\nvn -0.977900 -0.043600 -0.204200\\nvn -0.966700 -0.070300 -0.246100\\nvn -0.612200 -0.246700 -0.751200\\nvn -0.667800 -0.080100 -0.740000\\nvn -0.560500 -0.395900 -0.727300\\nvn 0.167200 -0.471200 -0.866000\\nvn 0.172500 -0.461200 -0.870400\\nvn -0.464200 -0.431600 -0.773500\\nvn 0.146700 -0.487700 -0.860600\\nvn 0.169800 -0.482800 -0.859100\\nvn -0.568700 -0.389300 -0.724600\\nvn -0.564900 -0.397900 -0.722900\\nvn -0.552400 -0.407300 -0.727200\\nvn -0.978700 -0.079700 -0.188900\\nvn 0.435700 -0.417500 -0.797400\\nvn 0.726700 -0.392100 -0.564000\\nvn 0.073900 -0.670300 -0.738300\\nvn 0.129400 -0.475800 -0.869900\\nvn 0.593700 -0.373400 -0.712800\\nvn -0.377100 -0.592100 -0.712100\\nvn 0.067800 -0.899700 -0.431300\\nvn -0.176800 -0.871700 -0.457000\\nvn -0.428300 -0.458100 -0.778900\\nvn 0.012100 -0.999800 0.016800\\nvn 0.274600 -0.863500 -0.423000\\nvn 0.570400 -0.762100 -0.306400\\nvn -0.070500 -0.997300 0.020400\\nvn -0.052900 -0.997400 0.047600\\nvn -0.063000 -0.993900 0.090800\\nvn 0.012300 -0.991700 0.127500\\nvn -0.635700 -0.598300 0.487700\\nvn -0.533000 -0.556000 0.637700\\nvn -0.123500 -0.688700 0.714400\\nvn -0.128800 -0.770000 0.624900\\nvn 0.513100 -0.623100 0.590300\\nvn 0.682900 -0.707500 -0.181600\\nvn 0.065100 -0.997000 0.040800\\nvn 0.761800 -0.594500 0.257200\\nvn -0.931700 -0.168300 0.321800\\nvn -0.974500 -0.107600 0.197000\\nvn -0.654900 -0.467200 0.594000\\nvn -0.506700 -0.356000 0.785100\\nvn -0.892400 -0.038300 0.449500\\nvn -0.370800 0.083100 0.925000\\nvn -0.420800 -0.057400 0.905300\\nvn -0.889200 -0.095300 0.447500\\nvn -0.867200 0.103400 0.487200\\nvn -0.195300 0.269000 0.943100\\nvn -0.801700 0.142000 0.580600\\nvn 0.423300 0.089200 0.901600\\nvn 0.143900 -0.276400 0.950200\\nvn 0.282200 -0.063100 0.957200\\nvn 0.074400 -0.491800 0.867500\\nvn 0.929700 -0.067400 0.362200\\nvn 0.830600 -0.232900 0.505800\\nvn 0.870300 -0.146400 0.470300\\nvn 0.968800 -0.233100 -0.084200\\nvn 0.977900 -0.203600 -0.047000\\nvn 0.766600 -0.360000 0.531600\\nvn 0.972500 -0.205300 -0.110100\\nvn 0.962700 -0.257300 -0.083200\\nvn -0.974500 -0.144900 -0.170800\\nvn -0.968800 -0.154900 -0.193500\\nvn -0.982400 -0.149600 -0.111900\\nvn -0.980700 -0.167800 -0.099800\\nvn -0.986800 -0.124500 -0.103600\\nvn -0.977200 -0.139300 -0.160200\\nvn 0.765200 -0.298800 -0.570100\\nvn 0.733600 -0.288800 -0.615100\\nvn 0.762700 -0.322100 -0.560800\\nvn 0.793200 -0.254900 -0.553100\\nvn 0.594500 -0.803800 0.019100\\nvn -0.163900 -0.680800 0.713900\\nvn -0.074800 0.001500 -0.997200\\nvn 0.029100 -0.132300 -0.990800\\nvn -0.015300 0.057800 -0.998200\\nvn -0.331300 0.114600 -0.936500\\nvn -0.262200 -0.117400 -0.957800\\nvn 0.159800 -0.360100 -0.919100\\nvn -0.556400 0.830100 0.035700\\nvn -0.496300 0.866800 -0.047600\\nvn -0.801600 0.597200 0.026800\\nvn -0.831100 0.518800 0.200400\\nvn -0.517600 0.845400 -0.131700\\nvn -0.812900 0.549400 -0.193300\\nvn -0.636100 0.764500 -0.104600\\nvn -0.761900 0.363300 -0.536200\\nvn -0.781900 0.233000 -0.578100\\nvn -0.944600 0.273900 -0.180500\\nvn -0.852300 0.049200 -0.520800\\nvn -0.091900 -0.311400 -0.945800\\nvn -0.857100 -0.001600 -0.515000\\nvn -0.924000 0.347700 0.159000\\nvn -0.977800 0.123000 -0.169500\\nvn -0.980000 0.089900 -0.177600\\nvn -0.936600 0.177700 0.301700\\nvn -0.944600 -0.015600 0.327900\\nvn -0.896500 0.021100 0.442500\\nvn -0.911100 0.276700 0.305600\\nvn -0.419000 -0.361500 0.832900\\nvn -0.193200 -0.853800 0.483400\\nvn 0.492400 -0.676700 0.547300\\nvn -0.110500 -0.968500 0.223200\\nvn -0.999000 -0.028900 -0.034700\\nvn -0.899100 -0.430600 0.078100\\nvn -0.935400 -0.346000 0.072400\\nvn -0.997600 0.023000 0.065500\\nvn -0.990300 -0.025100 -0.136600\\nvn -0.918000 -0.394100 -0.044400\\nvn -0.978600 -0.032700 -0.202800\\nvn -0.906800 -0.375900 -0.191000\\nvn -0.984800 -0.059400 -0.163000\\nvn -0.888600 -0.421300 -0.181400\\nvn -0.797900 -0.518100 0.307900\\nvn -0.994900 -0.100500 -0.001200\\nvn -0.137800 -0.888100 0.438600\\nvn -0.606700 -0.761700 -0.227300\\nvn -0.642700 -0.766100 -0.001400\\nvn -0.582600 -0.756800 -0.296200\\nvn 0.000500 -0.968100 -0.250400\\nvn -0.000200 -0.995000 -0.099600\\nvn -0.002100 -0.998800 0.047500\\nvn -0.002000 -0.996500 0.083200\\nvn -0.618200 -0.782600 0.072500\\nvn 0.000000 0.709300 0.704800\\nvn 0.000000 0.667300 0.744800\\nvn -0.686000 0.490600 0.537300\\nvn -0.688500 0.519500 0.506000\\nvn 0.000400 0.841300 0.540500\\nvn 0.000000 0.782800 0.622300\\nvn -0.714300 0.550900 0.431500\\nvn -0.728000 0.607400 0.317900\\nvn -0.993200 -0.063500 -0.097800\\nvn -0.987600 -0.031200 -0.153400\\nvn -0.996900 -0.043200 -0.066000\\nvn -0.995200 -0.060300 -0.076500\\nvn -0.687900 0.477700 0.546400\\nvn -0.692900 0.479500 0.538400\\nvn -0.991900 -0.000200 -0.127300\\nvn -0.997000 0.006700 -0.077200\\nvn -0.708300 0.454500 0.540100\\nvn -0.687400 0.475100 0.549300\\nvn -0.994700 0.026100 -0.099800\\nvn -0.994600 0.020800 -0.101600\\nvn 0.000000 0.642900 0.765900\\nvn 0.000000 0.609000 0.793100\\nvn 0.000000 0.637700 0.770200\\nvn 0.000000 0.942700 0.333600\\nvn -0.703000 0.627500 0.334700\\nvn -0.714000 0.478300 0.511300\\nvn 0.000000 0.635500 0.772000\\nvn -0.855400 0.450000 -0.256200\\nvn -0.990500 0.065800 -0.120200\\nvn -0.625600 -0.394500 -0.673000\\nvn -0.613400 -0.387200 -0.688300\\nvn -0.591200 -0.457400 -0.664300\\nvn -0.594500 -0.520300 -0.613000\\nvn -0.601500 -0.553500 -0.576000\\nvn -0.601400 -0.566200 -0.563600\\nvn -0.597400 -0.576200 -0.557800\\nvn -0.600200 -0.000900 -0.799800\\nvn -0.647500 -0.333200 -0.685300\\nvn 0.000000 -0.494100 -0.869400\\nvn 0.000000 0.816000 -0.578000\\nvn 0.010600 0.994000 -0.108800\\nvn 0.062200 0.996400 0.057300\\nvn -0.922400 -0.031000 -0.385100\\nvn -0.750300 0.640400 0.163800\\nvn 0.000000 -0.692900 -0.721000\\nvn 0.027600 0.997100 -0.071200\\nvn 0.051900 0.997600 -0.045700\\nvn -0.684000 0.728400 0.038600\\nvn 0.041800 0.999000 0.013400\\nvn -0.666400 0.743900 0.049600\\nvn 0.024600 0.996000 0.085500\\nvn -0.441000 0.897500 -0.002900\\nvn -0.517300 0.840100 0.163100\\nvn -0.761600 0.647600 0.023400\\nvn -0.725300 0.687900 -0.025800\\nvn -0.594200 0.795500 0.118900\\nvn -0.803800 0.593200 -0.042800\\nvn -0.876900 0.474000 -0.078800\\nvn -0.905400 0.422900 0.036600\\nvn -0.945800 0.297800 -0.129500\\nvn -0.935900 0.343800 -0.075900\\nvn -0.953800 0.248400 -0.168700\\nvn -0.980800 0.192000 -0.032700\\nvn -0.917100 0.398500 0.000700\\nvn -0.783000 -0.333100 0.525200\\nvn -0.462700 -0.560000 0.687200\\nvn -0.734200 -0.153200 0.661400\\nvn -0.941800 0.192800 0.275300\\nvn -0.973400 0.007900 0.228900\\nvn -0.967700 0.250200 0.030700\\nvn -0.996600 0.057900 -0.059100\\nvn -0.992000 0.119500 -0.040000\\nvn -0.962300 -0.134200 -0.236200\\nvn -0.709500 -0.691300 0.136500\\nvn 0.045000 -0.562400 0.825600\\nvn -0.314100 -0.459000 0.831000\\nvn -0.178000 -0.493000 0.851600\\nvn 0.069200 -0.522500 0.849800\\nvn -0.333100 -0.546600 0.768300\\nvn -0.336300 -0.714900 0.613000\\nvn -0.611800 -0.327500 0.720000\\nvn -0.663200 -0.345300 0.664000\\nvn -0.783900 -0.328500 0.526800\\nvn -0.422100 -0.578900 0.697600\\nvn -0.956200 -0.130900 0.261700\\nvn -0.867400 -0.058700 0.494200\\nvn -0.999400 0.018300 0.030400\\nvn -0.946700 0.186300 0.262700\\nvn -0.757600 -0.142300 0.637000\\nvn -0.955700 0.290500 -0.046300\\nvn -0.926800 0.369500 0.067000\\nvn -0.887400 0.452400 0.087600\\nvn -0.900400 0.434700 0.013600\\nvn -0.909300 0.416100 -0.003800\\nvn -0.642500 0.766100 -0.016600\\nvn -0.541900 0.830600 0.128400\\nvn -0.738200 0.669500 -0.082600\\nvn -0.746800 0.653400 -0.123800\\nvn -0.439600 0.797700 -0.412800\\nvn -0.555000 0.686500 -0.469700\\nvn -0.005500 0.844000 -0.536200\\nvn -0.041500 0.875000 -0.482300\\nvn -0.252400 0.966100 -0.053700\\nvn -0.764200 0.605700 -0.221500\\nvn 0.020100 0.995700 0.090200\\nvn -0.111600 0.986200 -0.121800\\nvn -0.389900 0.904800 -0.170800\\nvn -0.034400 0.987400 -0.154600\\nvn 0.061100 0.994800 -0.080800\\nvn -0.011200 0.999700 0.022200\\nvn -0.078300 0.986700 -0.142200\\nvn 0.028500 0.988100 0.151000\\nvn 0.003000 0.965000 0.262300\\nvn 0.003600 0.992300 0.123600\\nvn -0.016500 -0.214900 -0.976500\\nvn 0.465400 -0.658600 -0.591200\\nvn -0.011600 -0.342800 -0.939300\\nvn -0.818300 0.421900 -0.390200\\nvn 0.023600 0.942700 0.332700\\nvn -0.560200 -0.529800 -0.636700\\nvn -0.602600 -0.412600 -0.683100\\nvn 0.000000 0.629800 0.776700\\nvn 0.000000 -0.516400 -0.856300\\nvn -0.066700 -0.075400 -0.994900\\nvn -0.037200 0.093700 -0.994900\\nvn 0.083400 -0.029500 -0.996100\\nvn 0.352600 -0.057600 -0.934000\\nvn 0.785900 0.236200 -0.571500\\nvn 0.257800 0.097400 -0.961300\\nvn 0.763700 0.363600 -0.533400\\nvn -0.036200 0.023200 -0.999100\\nvn -0.045200 -0.178100 -0.983000\\nvn 0.308100 -0.126300 -0.942900\\nvn -0.147600 -0.360100 -0.921100\\nvn 0.786100 0.617800 0.018900\\nvn 0.509700 0.860100 -0.017600\\nvn 0.556300 0.830100 0.037400\\nvn 0.808700 0.560000 0.179900\\nvn 0.808400 0.556900 -0.190300\\nvn 0.526400 0.842600 -0.113800\\nvn 0.638900 0.759600 -0.121400\\nvn 0.944600 0.273900 -0.180500\\nvn 0.855400 0.046300 -0.515900\\nvn 0.119500 -0.288000 -0.950100\\nvn 0.856300 0.001800 -0.516500\\nvn 0.928900 0.337400 0.152500\\nvn 0.977800 0.123000 -0.169500\\nvn 0.980000 0.089900 -0.177600\\nvn 0.936600 0.177700 0.302000\\nvn 0.944200 -0.015800 0.329100\\nvn 0.913400 0.259600 0.313400\\nvn 0.895000 0.019000 0.445600\\nvn 0.418100 -0.360500 0.833800\\nvn -0.029900 -0.967400 0.251500\\nvn 0.234000 -0.950400 0.204800\\nvn 0.204300 -0.853100 0.479900\\nvn 0.241400 -0.965700 -0.095900\\nvn 0.136900 -0.989600 0.043800\\nvn -0.011200 -0.999300 0.036400\\nvn 0.999000 -0.028500 -0.035000\\nvn 0.997600 0.024000 0.065300\\nvn 0.935500 -0.345700 0.072800\\nvn 0.899400 -0.430200 0.077600\\nvn 0.918100 -0.393800 -0.045100\\nvn 0.990300 -0.025100 -0.136600\\nvn 0.904300 -0.378900 -0.196400\\nvn 0.978500 -0.033300 -0.203700\\nvn 0.884300 -0.431300 -0.178700\\nvn 0.984100 -0.062000 -0.166600\\nvn 0.801600 -0.514600 0.304200\\nvn 0.994500 -0.104400 -0.000200\\nvn 0.607200 -0.758200 -0.237300\\nvn 0.642400 -0.766300 -0.002300\\nvn 0.596500 -0.751000 -0.283000\\nvn 0.007400 -0.948500 -0.316500\\nvn 0.688500 0.519500 0.506000\\nvn 0.686000 0.490600 0.537300\\nvn 0.732000 0.592200 0.336900\\nvn 0.714400 0.550600 0.431700\\nvn 0.989700 -0.027800 -0.140100\\nvn 0.993200 -0.063500 -0.097500\\nvn 0.996900 -0.043200 -0.066000\\nvn 0.995200 -0.060300 -0.076500\\nvn 0.687900 0.477700 0.546400\\nvn 0.997000 0.006700 -0.077200\\nvn 0.991900 -0.000200 -0.127300\\nvn 0.692900 0.479500 0.538400\\nvn 0.708300 0.454500 0.540100\\nvn 0.994600 0.020800 -0.101600\\nvn 0.994700 0.026100 -0.099800\\nvn 0.687400 0.475000 0.549300\\nvn 0.714000 0.478300 0.511300\\nvn 0.703000 0.627500 0.334700\\nvn 0.990500 0.065800 -0.120200\\nvn 0.855400 0.450000 -0.256200\\nvn 0.625600 -0.394500 -0.673000\\nvn 0.613400 -0.387200 -0.688300\\nvn 0.594500 -0.520300 -0.613000\\nvn 0.591200 -0.457400 -0.664300\\nvn 0.601500 -0.553500 -0.576000\\nvn 0.601400 -0.566200 -0.563600\\nvn 0.597400 -0.576200 -0.557800\\nvn 0.600200 -0.000900 -0.799800\\nvn 0.647500 -0.333200 -0.685300\\nvn 0.000000 -0.581500 -0.813500\\nvn 0.000000 -0.545200 -0.838300\\nvn 0.602600 -0.412600 -0.683100\\nvn 0.000000 -0.522800 -0.852500\\nvn 0.921800 -0.014700 -0.387200\\nvn 0.760800 0.637300 0.122100\\nvn 0.561800 -0.521000 -0.642500\\nvn 0.000000 -0.714600 -0.699500\\nvn 0.000000 -0.739100 -0.673500\\nvn 0.689100 0.723200 0.044300\\nvn 0.667900 0.742900 0.043900\\nvn 0.756900 0.652900 0.028200\\nvn 0.516300 0.838400 0.174300\\nvn 0.450700 0.892300 0.024300\\nvn 0.708200 0.705600 -0.023500\\nvn 0.801500 0.596400 -0.043900\\nvn 0.596000 0.797400 0.094400\\nvn 0.862800 0.498200 -0.085800\\nvn 0.900600 0.429300 0.066900\\nvn 0.945800 0.297800 -0.129500\\nvn 0.935900 0.343800 -0.075900\\nvn 0.953800 0.248300 -0.168800\\nvn 0.981100 0.190700 -0.032900\\nvn 0.917100 0.398500 0.000700\\nvn 0.748500 -0.190300 0.635300\\nvn 0.739800 -0.180500 0.648100\\nvn 0.945800 0.167700 0.277900\\nvn 0.964500 0.261500 0.034800\\nvn 0.973100 0.030100 0.228400\\nvn 0.996000 0.056100 -0.069200\\nvn 0.961700 -0.135300 -0.238300\\nvn 0.991900 0.120300 -0.041600\\nvn 0.792000 -0.227800 0.566300\\nvn 0.649100 -0.462500 0.603900\\nvn 0.978400 -0.101300 0.180000\\nvn 0.977300 -0.046100 -0.206900\\nvn 0.781700 -0.083100 -0.618000\\nvn 0.843100 -0.487000 -0.228000\\nvn 0.024600 -0.618100 0.785700\\nvn -0.020100 -0.825100 0.564600\\nvn 0.335300 -0.689900 0.641500\\nvn 0.287700 -0.492900 0.821100\\nvn 0.500400 -0.408100 0.763600\\nvn 0.527800 -0.354100 0.772000\\nvn 0.647100 -0.388500 0.656000\\nvn 0.326300 -0.538300 0.777000\\nvn 0.211800 -0.503500 0.837600\\nvn 0.767700 -0.342100 0.541900\\nvn 0.457000 -0.566500 0.685700\\nvn 0.866400 -0.056200 0.496100\\nvn 0.953000 -0.136900 0.270100\\nvn 0.956400 0.182000 0.228200\\nvn 0.998800 0.035300 0.033500\\nvn 0.948000 0.310500 -0.069800\\nvn 0.902100 0.423400 0.082500\\nvn 0.929900 0.358300 0.083200\\nvn 0.895500 0.445100 0.003200\\nvn 0.905500 0.424200 0.009900\\nvn 0.552500 0.829600 0.080800\\nvn 0.683200 0.728000 0.055800\\nvn 0.769500 0.631000 -0.097900\\nvn 0.724300 0.678100 -0.124500\\nvn 0.446500 0.820900 -0.355900\\nvn 0.574100 0.683600 -0.450600\\nvn 0.782400 0.592000 -0.193400\\nvn 0.204500 0.978200 -0.034000\\nvn -0.080600 0.994600 0.065200\\nvn 0.098700 0.980500 -0.169900\\nvn 0.408600 0.895800 -0.174800\\nvn 0.009400 -0.243300 -0.969900\\nvn -0.437100 -0.661700 -0.609100\\nvn 0.005700 -0.637600 -0.770300\\nvn -0.012100 -0.234600 -0.972000\\nvn -0.004500 -0.678200 0.734900\\nvn 0.821700 0.421800 -0.383200\\nvn 0.000000 -0.643700 -0.765300\\nvn 0.226100 -0.649600 -0.725800\\nvn 0.825500 -0.538300 0.169500\\nvn -0.817000 -0.554800 0.156800\\nvn -0.546200 -0.390500 0.741000\\nvn 0.474100 -0.530700 0.702500\\nvn 0.145800 -0.656000 0.740500\\nvn -0.558900 -0.826400 -0.068300\\nvn 0.553900 -0.830300 -0.060500\\nvn -0.005900 -0.999500 -0.030200\\nvn -0.883800 0.084400 0.460200\\nvn -0.630300 0.233900 0.740300\\nvn -0.770700 0.196200 0.606200\\nvn -0.968200 0.233500 0.089300\\nvn -0.802900 0.575500 0.155400\\nvn -0.753200 0.405500 0.517900\\nvn -0.972700 -0.055400 -0.225200\\nvn -0.972200 -0.223700 0.069200\\nvn -0.943500 -0.285400 -0.168200\\nvn -0.983800 0.049300 -0.172400\\nvn -0.994200 -0.106400 -0.013200\\nvn -0.736700 0.124900 0.664600\\nvn -0.990400 -0.131500 0.041500\\nvn -0.674000 0.167800 0.719400\\nvn -0.566000 0.207200 0.797900\\nvn -0.954900 0.017800 0.296200\\nvn -0.991400 -0.105700 0.077000\\nvn -0.980800 -0.145800 -0.129600\\nvn -0.791900 -0.348000 -0.501800\\nvn -0.711800 -0.351300 -0.608200\\nvn -0.686000 -0.439100 -0.580200\\nvn -0.935400 0.002100 -0.353600\\nvn -0.608700 -0.314800 -0.728300\\nvn -0.578800 -0.427100 -0.694600\\nvn -0.497800 -0.552900 -0.668200\\nvn -0.892300 -0.186300 -0.411100\\nvn -0.982300 0.113700 -0.148700\\nvn -0.957900 -0.103000 0.268000\\nvn -0.682900 -0.707400 -0.182000\\nvn -0.762400 -0.594400 0.255700\\nvn -0.274600 -0.863600 -0.422900\\nvn -0.882000 0.471200 0.002900\\nvn -0.574200 0.782800 0.239700\\nvn -0.573200 0.819000 0.024900\\nvn -0.000200 0.995500 0.094700\\nvn 0.008100 0.943700 0.330600\\nvn 0.036000 0.554900 0.831100\\nvn 0.032800 0.326800 0.944500\\nvn 0.056000 0.266800 0.962100\\nvn 0.075300 0.281700 0.956500\\nvn 0.094400 0.300800 0.949000\\nvn 0.801800 0.142000 0.580500\\nvn 0.811400 0.120100 0.571900\\nvn 0.812500 0.157200 0.561400\\nvn 0.817800 0.120400 0.562700\\nvn 0.777100 0.626600 0.058400\\nvn 0.855100 0.294700 0.426500\\nvn 0.582300 0.804400 -0.117600\\nvn 0.946400 0.063700 -0.316600\\nvn 0.857600 -0.172400 -0.484500\\nvn 0.596400 0.791100 0.135600\\nvn 0.889300 0.428400 -0.159600\\nvn 0.982100 -0.140100 0.125300\\nvn 0.603000 -0.762800 -0.233300\\nvn 0.947200 -0.120500 -0.297000\\nvn 0.475900 -0.802600 -0.359600\\nvn -0.050500 -0.994500 0.091500\\nvn 0.091700 -0.988600 0.119600\\nvn 0.776400 -0.590100 0.221200\\nvn 0.750100 0.142300 0.645800\\nvn 0.558800 0.650000 0.514900\\nvn 0.134200 0.570700 0.810100\\nvn 0.202500 -0.050600 0.978000\\nvn 0.094300 0.260500 0.960800\\nvn 0.022700 0.921000 0.388900\\nvn 0.927900 0.300300 0.221000\\nvn 0.433600 0.004700 0.901100\\nvn 0.371100 0.671700 0.641200\\nvn 0.452300 0.353800 0.818600\\nvn -0.483800 0.624000 0.613600\\nvn -0.876900 0.341900 0.337700\\nvn -0.290900 0.641000 0.710300\\nvn -0.041000 0.564000 0.824800\\nvn -0.627100 0.105300 0.771800\\nvn 0.027500 -0.068800 0.997200\\nvn -0.263500 0.319600 0.910200\\nvn -0.290600 0.026100 0.956500\\nvn -0.306200 -0.622500 0.720200\\nvn -0.513100 -0.623100 0.590200\\nvn 0.128700 -0.770000 0.624900\\nvn 0.125500 -0.687600 0.715200\\nvn 0.034100 -0.766700 0.641100\\nvn -0.762700 -0.322200 -0.560700\\nvn -0.555100 -0.327500 -0.764600\\nvn -0.214600 -0.489900 -0.844900\\nvn -0.202400 -0.283200 -0.937400\\nvn -0.615700 -0.226900 -0.754600\\nvn -0.156300 -0.218100 -0.963300\\nvn -0.117300 -0.121600 -0.985600\\nvn -0.579800 -0.222600 -0.783700\\nvn -0.597000 -0.127700 -0.792000\\nvn 0.663800 -0.012000 -0.747800\\nvn 0.966700 -0.070500 -0.246000\\nvn 0.667800 -0.080200 -0.740000\\nvn 0.612200 -0.246800 -0.751200\\nvn -0.196800 -0.461000 -0.865300\\nvn -0.166700 -0.473100 -0.865000\\nvn 0.559500 -0.397300 -0.727400\\nvn 0.459400 -0.431100 -0.776500\\nvn -0.170300 -0.481900 -0.859500\\nvn 0.568500 -0.389200 -0.724700\\nvn -0.147100 -0.487600 -0.860600\\nvn 0.552400 -0.407500 -0.727200\\nvn 0.564500 -0.398100 -0.723100\\nvn 0.978700 -0.079700 -0.189000\\nvn 0.974500 -0.144900 -0.170900\\nvn -0.440600 -0.420200 -0.793200\\nvn -0.726900 -0.392000 -0.563800\\nvn -0.740200 -0.376400 -0.557100\\nvn -0.675700 -0.291100 -0.677200\\nvn -0.588200 -0.364800 -0.721800\\nvn -0.133500 -0.470000 -0.872500\\nvn -0.073900 -0.670300 -0.738400\\nvn 0.376600 -0.592000 -0.712500\\nvn 0.176500 -0.871800 -0.456900\\nvn -0.067800 -0.899600 -0.431300\\nvn 0.428400 -0.458000 -0.778900\\nvn -0.012100 -0.999800 0.016800\\nvn -0.569800 -0.762600 -0.306100\\nvn 0.070800 -0.997300 0.020100\\nvn 0.052800 -0.997500 0.047600\\nvn 0.062800 -0.993900 0.090800\\nvn -0.012300 -0.991700 0.127600\\nvn 0.634300 -0.598600 0.489200\\nvn 0.530300 -0.556200 0.639900\\nvn -0.202700 -0.704200 0.680500\\nvn -0.065200 -0.997100 0.039600\\nvn 0.934400 -0.176200 0.309600\\nvn 0.498600 -0.379200 0.779400\\nvn 0.892400 -0.038200 0.449500\\nvn 0.889200 -0.095200 0.447500\\nvn 0.423300 -0.058100 0.904100\\nvn 0.371800 0.082600 0.924600\\nvn 0.195400 0.269100 0.943100\\nvn 0.867200 0.103500 0.487100\\nvn -0.423600 0.087100 0.901600\\nvn -0.157900 -0.241100 0.957500\\nvn -0.281600 -0.067900 0.957100\\nvn -0.087300 -0.440000 0.893700\\nvn -0.929600 -0.067000 0.362300\\nvn -0.831800 -0.234500 0.503100\\nvn -0.870500 -0.147700 0.469300\\nvn -0.338500 -0.738600 0.583000\\nvn -0.762900 -0.357000 0.539000\\nvn -0.977900 -0.202800 -0.049500\\nvn -0.968800 -0.232600 -0.085400\\nvn -0.962700 -0.257200 -0.083100\\nvn -0.972500 -0.205300 -0.110100\\nvn 0.968800 -0.154800 -0.193600\\nvn 0.982400 -0.149600 -0.112000\\nvn 0.980700 -0.167800 -0.099800\\nvn 0.977100 -0.139700 -0.160500\\nvn 0.986800 -0.124100 -0.103700\\nvn -0.735800 -0.285900 -0.613900\\nvn -0.793200 -0.254900 -0.553000\\nvn -0.768700 -0.289400 -0.570300\\nvn -0.587400 -0.809300 -0.004700\\nvn -0.962900 -0.120300 0.241500\\nvn -0.960600 -0.145600 0.236800\\nvn -0.982900 0.080600 -0.165300\\nvn -0.985700 0.099200 -0.135700\\nvn -0.832900 0.014400 -0.553300\\nvn -0.846400 -0.016400 -0.532200\\nvn -0.816400 0.050700 -0.575200\\nvn -0.982000 0.100700 -0.160000\\nvn -0.380400 -0.465800 0.798900\\nvn -0.290700 -0.405800 0.866500\\nvn -0.924900 -0.164500 0.342700\\nvn -0.946000 -0.086800 0.312300\\nvn -0.981000 0.091500 -0.170800\\nvn -0.964000 0.144900 -0.222800\\nvn -0.922500 -0.188900 0.336400\\nvn -0.932700 0.155300 -0.325300\\nvn -0.934800 -0.078200 0.346400\\nvn -0.667000 0.224600 -0.710400\\nvn 0.134300 0.121500 -0.983500\\nvn -0.019900 -0.158300 -0.987200\\nvn -0.655400 0.063500 -0.752500\\nvn -0.580300 -0.188800 -0.792200\\nvn -0.940600 -0.007500 -0.339300\\nvn -0.957200 0.040900 -0.286400\\nvn -0.754600 0.258300 -0.603100\\nvn -0.812000 0.101400 -0.574700\\nvn 0.091400 0.270300 -0.958400\\nvn 0.689100 -0.116900 -0.715100\\nvn 0.819400 -0.277100 -0.501700\\nvn 0.697700 -0.463000 -0.546600\\nvn 0.065300 -0.594800 -0.801200\\nvn 0.019800 -0.343400 -0.939000\\nvn -0.495600 -0.464700 -0.733800\\nvn 0.953200 -0.039600 -0.299700\\nvn 0.952100 0.016300 -0.305300\\nvn 0.962200 -0.127200 0.240500\\nvn 0.592500 -0.617800 -0.517000\\nvn 0.039100 -0.762700 -0.645600\\nvn -0.531100 -0.628300 -0.568400\\nvn 0.008200 -0.879300 -0.476200\\nvn -0.451800 -0.787500 -0.419100\\nvn -0.499700 -0.708600 -0.498100\\nvn 0.020000 -0.840200 -0.541900\\nvn -0.970900 -0.143500 -0.191600\\nvn -0.969200 -0.133400 -0.206700\\nvn -0.928400 -0.259200 -0.266200\\nvn -0.271900 -0.901200 -0.337300\\nvn -0.533300 -0.796500 -0.284800\\nvn -0.959500 -0.076000 -0.271100\\nvn 0.514800 -0.712200 -0.477200\\nvn 0.417300 -0.805000 -0.421600\\nvn 0.001900 -0.939800 -0.341600\\nvn -0.008100 -0.996200 -0.086800\\nvn -0.054800 -0.997500 0.045100\\nvn -0.022600 -0.998900 0.040000\\nvn -0.129100 -0.988600 0.077300\\nvn -0.022500 -0.821900 0.569200\\nvn -0.063500 -0.665100 0.744000\\nvn -0.056400 -0.815300 0.576200\\nvn 0.002000 -0.994700 0.102700\\nvn 0.030300 -0.998900 0.034700\\nvn 0.488500 -0.691400 0.532200\\nvn 0.358600 -0.632000 0.687000\\nvn 0.249700 -0.749700 0.612800\\nvn 0.144500 -0.988800 0.036000\\nvn 0.724300 -0.665200 0.181500\\nvn 0.241000 -0.924300 -0.295900\\nvn -0.095900 -0.990600 0.097200\\nvn -0.599600 -0.775000 -0.199600\\nvn -0.719300 0.027000 0.694200\\nvn -0.556000 0.253500 0.791600\\nvn -0.515100 -0.583700 0.627600\\nvn -0.415300 -0.112200 0.902700\\nvn -0.742900 -0.647300 0.170500\\nvn -0.973500 -0.126700 0.190300\\nvn -0.969900 0.074800 -0.231700\\nvn -0.625100 0.739300 0.250200\\nvn -0.562100 0.494500 0.662900\\nvn -0.914900 0.270100 0.300100\\nvn -0.920900 0.384000 -0.066500\\nvn -0.582800 0.807900 -0.087700\\nvn 0.028900 0.989800 0.139000\\nvn 0.010300 0.860900 0.508700\\nvn 0.056100 0.990100 0.128200\\nvn -0.742600 0.669700 0.005800\\nvn 0.634300 0.772900 0.012100\\nvn 0.762100 0.632300 0.139000\\nvn -0.031000 0.793500 0.607700\\nvn -0.834100 0.440700 0.331600\\nvn -0.792300 0.569900 0.217800\\nvn 0.013200 0.919800 0.392100\\nvn 0.698600 0.405100 0.589700\\nvn -0.069800 0.566200 0.821300\\nvn 0.729800 0.509300 0.456000\\nvn 0.727800 0.594500 0.341700\\nvn 0.986900 0.116900 -0.110900\\nvn 0.882100 0.469800 -0.033500\\nvn -0.857000 0.342900 0.384600\\nvn -0.932000 0.160800 0.324600\\nvn -0.273200 0.188900 0.943200\\nvn 0.657300 0.107200 0.745900\\nvn 0.994400 0.020400 0.103200\\nvn 0.978600 -0.019400 0.204800\\nvn -0.909100 -0.055000 0.412700\\nvn -0.265100 -0.204900 0.942200\\nvn 0.593600 -0.196600 0.780400\\nvn 0.957300 -0.056500 0.283400\\nvn 0.625400 -0.383500 0.679500\\nvn 0.644800 -0.587600 0.488800\\nvn -0.280000 -0.600900 0.748600\\nvn -0.318400 -0.414300 0.852600\\nvn -0.306600 -0.556100 0.772500\\nvn -0.356300 -0.525800 0.772400\\nvn 0.615300 -0.541200 0.573000\\nvn 0.513900 -0.580300 0.631700\\nvn 0.617800 -0.495500 0.610500\\nvn 0.207600 -0.543500 0.813300\\nvn 0.455000 -0.643300 0.615700\\nvn 0.942500 -0.334200 0.003300\\nvn 0.967100 -0.048200 -0.249800\\nvn 0.181600 0.014800 -0.983200\\nvn 0.927500 -0.240100 -0.286600\\nvn 0.961700 -0.266500 0.064000\\nvn 0.298700 -0.954200 -0.017100\\nvn 0.781500 -0.620200 0.068200\\nvn 0.766700 -0.501300 -0.401000\\nvn 0.865900 -0.363500 -0.343600\\nvn 0.810400 -0.458700 -0.364400\\nvn 0.861800 -0.500600 0.081900\\nvn -0.026200 -0.336700 -0.941200\\nvn 0.160700 -0.082700 -0.983500\\nvn 0.073400 -0.244000 -0.967000\\nvn 0.906100 0.284100 0.313400\\nvn 0.599700 0.724800 0.339100\\nvn 0.407400 0.515400 0.753900\\nvn 0.905400 0.424500 0.011400\\nvn 0.524400 0.525700 0.669800\\nvn 0.097700 0.489500 0.866500\\nvn 0.963600 -0.134200 0.231200\\nvn 0.334700 -0.054500 0.940700\\nvn 0.304500 0.211100 0.928800\\nvn 0.638400 0.052900 0.767900\\nvn 0.074700 -0.152100 0.985500\\nvn -0.005100 0.183200 0.983000\\nvn -0.158000 0.475000 0.865600\\nvn -0.595600 0.498900 0.629500\\nvn -0.154700 -0.142500 0.977600\\nvn 0.995800 -0.076200 -0.051500\\nvn 0.971700 -0.176600 -0.156600\\nvn 0.552600 -0.817400 -0.162300\\nvn 0.868200 -0.445800 -0.217800\\nvn 0.707300 -0.688600 -0.159800\\nvn -0.633800 -0.618900 0.464000\\nvn 0.937500 -0.345300 0.042200\\nvn 0.960500 -0.145600 0.237200\\nvn 0.982900 0.080600 -0.165300\\nvn 0.851600 -0.011500 -0.524000\\nvn 0.841800 0.017000 -0.539500\\nvn 0.985700 0.099200 -0.135700\\nvn 0.982000 0.100700 -0.160000\\nvn 0.827000 0.052600 -0.559700\\nvn 0.289600 -0.403700 0.867900\\nvn 0.962900 -0.120300 0.241400\\nvn 0.946000 -0.086800 0.312300\\nvn 0.922500 -0.188900 0.336400\\nvn 0.964600 0.144500 -0.220300\\nvn 0.981000 0.091400 -0.170800\\nvn 0.924900 -0.164600 0.342700\\nvn 0.934800 -0.078200 0.346400\\nvn 0.933000 0.154100 -0.325100\\nvn 0.667600 0.221700 -0.710700\\nvn 0.655400 0.063500 -0.752500\\nvn 0.019900 -0.158300 -0.987200\\nvn -0.138300 0.127400 -0.982100\\nvn 0.580300 -0.188800 -0.792200\\nvn 0.957200 0.040900 -0.286400\\nvn 0.940600 -0.007500 -0.339400\\nvn 0.764800 0.252200 -0.592800\\nvn 0.824300 0.103700 -0.556500\\nvn -0.063400 0.285200 -0.956400\\nvn -0.689200 -0.116800 -0.715100\\nvn -0.065300 -0.594800 -0.801200\\nvn -0.697700 -0.463000 -0.546600\\nvn -0.819400 -0.277100 -0.501700\\nvn -0.019800 -0.343400 -0.939000\\nvn 0.495500 -0.464700 -0.733800\\nvn -0.978600 -0.019400 0.204800\\nvn -0.957300 -0.056500 0.283500\\nvn -0.953200 -0.039600 -0.299700\\nvn -0.039200 -0.762600 -0.645600\\nvn -0.578200 -0.626600 -0.522500\\nvn 0.531100 -0.628400 -0.568400\\nvn 0.499800 -0.708600 -0.498000\\nvn -0.024300 -0.842400 -0.538200\\nvn 0.451800 -0.787500 -0.419100\\nvn 0.969200 -0.133400 -0.206700\\nvn 0.928400 -0.259200 -0.266200\\nvn 0.533300 -0.796500 -0.284800\\nvn 0.271900 -0.901200 -0.337300\\nvn 0.959500 -0.076000 -0.271100\\nvn 0.970900 -0.143500 -0.191500\\nvn -0.510800 -0.721400 -0.467600\\nvn -0.001900 -0.939800 -0.341600\\nvn -0.014100 -0.877300 -0.479700\\nvn 0.008100 -0.996200 -0.086800\\nvn 0.054800 -0.997500 0.045100\\nvn 0.022600 -0.998900 0.040000\\nvn 0.129100 -0.988600 0.077300\\nvn 0.022500 -0.821800 0.569300\\nvn -0.030300 -0.998900 0.034700\\nvn -0.002000 -0.994700 0.102700\\nvn -0.488400 -0.691400 0.532200\\nvn -0.709300 -0.686200 -0.161100\\nvn -0.144500 -0.988800 0.036000\\nvn -0.265500 -0.916300 -0.299700\\nvn -0.447600 -0.803700 -0.391900\\nvn 0.095900 -0.990600 0.097100\\nvn 0.599600 -0.775000 -0.199500\\nvn 0.742900 -0.647300 0.170500\\nvn 0.214600 -0.764000 0.608400\\nvn 0.973500 -0.126700 0.190300\\nvn 0.415200 -0.112200 0.902700\\nvn 0.969900 0.074800 -0.231700\\nvn 0.633800 -0.618800 0.464000\\nvn 0.719300 0.026900 0.694200\\nvn 0.154800 -0.142600 0.977600\\nvn 0.555900 0.253500 0.791700\\nvn 0.625100 0.739300 0.250200\\nvn 0.562100 0.494500 0.662900\\nvn 0.914900 0.270100 0.300000\\nvn 0.920900 0.384000 -0.066500\\nvn 0.582400 0.808100 -0.088000\\nvn -0.029000 0.990000 0.138100\\nvn -0.010300 0.860900 0.508700\\nvn 0.742400 0.669900 0.006100\\nvn -0.059800 0.989900 0.128400\\nvn -0.783900 0.612900 0.098900\\nvn -0.634500 0.772900 0.005400\\nvn 0.792300 0.569900 0.217800\\nvn -0.015900 0.919200 0.393400\\nvn -0.698000 0.406300 0.589600\\nvn -0.751200 0.485300 0.447400\\nvn 0.028400 0.792800 0.608700\\nvn 0.069800 0.566200 0.821300\\nvn -0.761400 0.559500 0.327300\\nvn -0.986900 0.115300 -0.112300\\nvn 0.857000 0.342900 0.384600\\nvn 0.834100 0.440700 0.331600\\nvn 0.932100 0.160800 0.324600\\nvn 0.273200 0.188800 0.943200\\nvn -0.657300 0.107200 0.745900\\nvn -0.994500 0.020500 0.102800\\nvn 0.909100 -0.055000 0.412700\\nvn 0.318400 -0.414200 0.852600\\nvn 0.265100 -0.204800 0.942200\\nvn -0.593600 -0.196600 0.780400\\nvn -0.625400 -0.383400 0.679600\\nvn -0.644800 -0.587600 0.488800\\nvn -0.961800 -0.266000 0.063900\\nvn 0.280000 -0.600900 0.748600\\nvn 0.306600 -0.556100 0.772500\\nvn 0.356300 -0.525800 0.772400\\nvn -0.615300 -0.541200 0.573000\\nvn -0.617800 -0.495500 0.610500\\nvn -0.514700 -0.580200 0.631100\\nvn 0.380500 -0.465700 0.798900\\nvn -0.207300 -0.542300 0.814200\\nvn -0.311100 -0.950000 -0.025600\\nvn -0.786400 -0.613900 0.069000\\nvn -0.456200 -0.644300 0.613800\\nvn -0.937600 -0.345300 0.041200\\nvn -0.094200 0.016300 -0.995400\\nvn -0.959600 -0.029400 -0.279900\\nvn -0.916600 -0.236700 -0.322000\\nvn -0.950400 0.026300 -0.309700\\nvn -0.962200 -0.127200 0.240500\\nvn 0.038900 -0.284800 -0.957800\\nvn -0.765500 -0.487100 -0.420300\\nvn -0.045000 -0.234400 -0.971100\\nvn -0.098200 -0.105200 -0.989600\\nvn -0.853200 -0.370900 -0.366600\\nvn -0.806000 -0.453000 -0.381000\\nvn -0.906100 0.284100 0.313300\\nvn -0.407600 0.515400 0.753700\\nvn -0.599700 0.724800 0.339100\\nvn -0.905900 0.423500 0.006700\\nvn -0.524400 0.525700 0.669800\\nvn -0.097800 0.489500 0.866500\\nvn -0.964100 -0.133500 0.229400\\nvn -0.334800 -0.054400 0.940700\\nvn -0.304600 0.211100 0.928800\\nvn -0.638300 0.052900 0.767900\\nvn -0.074900 -0.152200 0.985500\\nvn 0.004900 0.183100 0.983100\\nvn 0.158100 0.475000 0.865700\\nvn 0.595700 0.498900 0.629500\\nvn -0.249700 -0.749700 0.612800\\nvn -0.358600 -0.632000 0.687000\\nvn 0.056500 -0.815300 0.576300\\nvn 0.063500 -0.665100 0.744000\\nvn -0.991100 -0.117100 -0.062400\\nvn -0.985800 -0.154900 -0.064800\\nvn -0.933500 -0.324700 -0.151700\\nvn -0.570300 -0.797700 -0.196100\\nvn -0.724300 -0.665100 0.181500\\nvn -0.865700 -0.493800 0.082300\\nvn -0.000100 -0.547700 0.836700\\nvn 0.002500 -0.955700 0.294200\\nvn 0.002000 -0.246300 -0.969100\\nvn 0.245500 0.911100 0.331100\\nvn 0.000000 -0.574600 -0.818400\\nvn -0.973500 -0.179100 0.142200\\nvn 0.336300 0.604100 0.722500\\nvn 0.249600 0.024500 0.968000\\nvn 0.593300 -0.590600 0.546900\\nvn -0.124300 0.974200 0.188100\\nvn 0.478000 -0.874400 -0.082900\\nvn -0.315800 0.592700 0.740900\\nvn 0.070700 -0.720900 0.689400\\nvn -0.286600 -0.004600 0.958000\\nvn 0.348800 -0.105900 0.931200\\nvn -0.779300 -0.419300 0.465700\\nvn -0.600900 -0.789500 -0.124900\\nvn -0.675300 -0.674500 0.298500\\nvn -0.896900 -0.403400 -0.181000\\nvn -0.622800 0.007800 0.782300\\nvn -0.398800 0.311300 0.862600\\nvn 0.006300 -0.822500 0.568600\\nvn 0.065400 -0.645800 0.760700\\nvn -0.804300 -0.391100 0.447400\\nvn -0.654100 -0.748300 0.110100\\nvn -0.719000 -0.694400 -0.029400\\nvn 0.458400 0.162900 0.873700\\nvn -0.638000 0.148500 0.755500\\nvn 0.000000 -0.397500 0.917600\\nvn -0.741300 0.123000 0.659800\\nvn 0.180900 0.091300 0.979200\\nvn 0.851500 -0.004500 -0.524400\\nvn 0.203700 -0.672900 -0.711100\\nvn 0.126400 -0.135100 -0.982700\\nvn 0.635300 -0.403800 -0.658300\\nvn 0.857800 0.034700 -0.512700\\nvn 0.271000 -0.609200 -0.745300\\nvn 0.117900 -0.134600 -0.983800\\nvn 0.803000 -0.595700 -0.019200\\nvn 0.994900 -0.098000 0.024400\\nvn 0.761700 0.524600 -0.380300\\nvn 0.793200 -0.519700 -0.317400\\nvn -0.441500 -0.456000 -0.772700\\nvn -0.533700 0.182700 -0.825600\\nvn 0.742500 -0.355600 -0.567700\\nvn -0.377300 -0.347100 -0.858600\\nvn 0.765200 0.517500 -0.382900\\nvn -0.287600 0.944900 -0.156200\\nvn 0.623200 -0.752500 -0.213000\\nvn -0.573800 -0.739000 0.352900\\nvn -0.143700 -0.864300 0.481900\\nvn -0.042600 -0.569700 0.820700\\nvn 0.384700 0.896000 -0.221700\\nvn 0.101000 0.623300 -0.775400\\nvn 0.359400 0.898600 -0.251600\\nvn 0.098300 0.609100 -0.787000\\nvn -0.381500 -0.870800 -0.310100\\nvn 0.225000 -0.918900 0.324000\\nvn 0.878100 -0.400300 -0.262000\\nvn 0.243600 -0.415100 -0.876500\\nvn -0.779700 -0.426100 0.458800\\nvn -0.424800 0.332800 0.841800\\nvn 0.266800 0.611800 0.744700\\nvn -0.315800 0.926100 0.206200\\nvn 0.638300 0.525300 -0.562600\\nvn 0.370800 0.692800 -0.618500\\nvn 0.929500 0.335000 0.154100\\nvn 0.854400 -0.241800 -0.459900\\nvn 0.888200 -0.378300 -0.260400\\nvn 0.828900 0.078500 -0.553800\\nvn -0.418100 0.376100 0.826800\\nvn 0.285300 0.567300 0.772400\\nvn -0.265500 0.957100 0.116000\\nvn 0.639300 0.514000 -0.571800\\nvn 0.394400 0.666200 -0.632900\\nvn 0.951200 0.302600 0.059800\\nvn 0.718400 0.279800 -0.636900\\nvn -0.348800 -0.105900 0.931200\\nvn 0.675300 -0.674400 0.298500\\nvn 0.755800 -0.485600 0.439300\\nvn 0.881900 -0.399400 -0.250300\\nvn 0.872200 -0.469400 -0.137600\\nvn -0.065400 -0.645800 0.760700\\nvn -0.006300 -0.822500 0.568600\\nvn 0.570300 -0.771000 -0.283200\\nvn -0.667400 -0.447600 0.595100\\nvn -0.560800 -0.795300 0.230100\\nvn 0.530700 -0.823400 0.200900\\nvn 0.804300 -0.391100 0.447400\\nvn 0.654100 -0.748300 0.110100\\nvn 0.139400 -0.457500 0.878200\\nvn 0.638000 0.148500 0.755500\\nvn -0.458400 0.162900 0.873700\\nvn -0.351400 0.084000 0.932500\\nvn 0.752500 0.388100 0.532100\\nvn 0.254700 0.762100 -0.595200\\nvn 0.275500 0.695100 -0.664000\\nvn 0.219200 0.936100 -0.275000\\nvn -0.851500 -0.004500 -0.524300\\nvn -0.635300 -0.403700 -0.658300\\nvn -0.093400 0.198800 -0.975600\\nvn -0.141300 -0.176200 -0.974200\\nvn -0.803000 -0.595700 -0.019200\\nvn -0.994900 -0.098000 0.024400\\nvn 0.533700 0.182700 -0.825600\\nvn 0.377300 -0.347100 -0.858600\\nvn -0.742500 -0.355700 -0.567700\\nvn 0.457700 0.886300 -0.070700\\nvn -0.855000 0.442800 -0.269900\\nvn 0.287600 0.944900 -0.156200\\nvn -0.101000 0.623300 -0.775400\\nvn -0.384700 0.896000 -0.221700\\nvn 0.132300 -0.601600 0.787700\\nvn -0.942200 -0.298100 0.152700\\nvn -0.649600 -0.711600 -0.267800\\nvn 0.115800 -0.935000 0.335200\\nvn -0.878100 -0.400200 -0.262100\\nvn -0.243800 -0.415100 -0.876500\\nvn 0.622000 -0.743400 0.245800\\nvn -0.854400 -0.241800 -0.459900\\nvn -0.247400 -0.380300 -0.891100\\nvn 0.775000 -0.452200 0.441500\\nvn -0.639300 0.514000 -0.571800\\nvn -0.653200 -0.745300 -0.133000\\nvn -0.678400 0.109400 0.726500\\nvn -0.245300 -0.708000 0.662200\\nvn -0.033700 -0.767800 0.639700\\nvn -0.024300 -0.415800 -0.909100\\nvn -0.021400 -0.041800 -0.998900\\nvn -0.369200 -0.070400 -0.926700\\nvn -0.004800 -0.834300 0.551200\\nvn -0.143200 -0.986200 0.082400\\nvn 0.003600 -0.992700 0.120600\\nvn 0.000000 -0.151700 -0.988400\\nvn -0.007800 -0.637100 -0.770700\\nvn 0.000900 -0.956800 -0.290600\\nvn 0.001000 -0.998200 -0.059900\\nvn 0.144100 -0.888500 0.435700\\nvn 0.712800 -0.689300 0.129200\\nvn 0.625900 -0.775700 0.079700\\nvn -0.092400 -0.906500 -0.412000\\nvn -0.236200 -0.966200 -0.102800\\nvn 0.242500 -0.708400 0.662800\\nvn -0.214700 -0.764100 0.608300\\nvn 0.514900 -0.583800 0.627700\\nvn -0.942700 -0.333500 0.001900\\nusemtl cat\\ns 1\\nf 88/53/85 89/54/86 90/55/87\\nf 90/55/87 91/56/88 88/53/85\\nf 89/54/86 88/53/85 92/57/89\\nf 92/57/89 93/58/90 89/54/86\\nf 91/56/88 90/55/87 94/59/91\\nf 94/59/91 95/60/92 91/56/88\\nf 96/61/93 88/53/85 91/56/88\\nf 91/56/88 97/62/94 96/61/93\\nf 98/63/95 99/64/96 96/61/93\\nf 99/64/96 98/63/95 100/65/97\\nf 98/63/95 96/61/93 97/62/94\\nf 97/62/94 101/66/98 98/63/95\\nf 97/62/94 91/56/88 95/60/92\\nf 95/60/92 102/67/99 97/62/94\\nf 95/60/92 94/59/91 103/68/100\\nf 103/68/100 104/69/101 95/60/92\\nf 105/70/102 98/63/95 101/66/98\\nf 101/66/98 106/71/103 105/70/102\\nf 101/66/98 97/62/94 102/67/99\\nf 102/67/99 107/72/104 101/66/98\\nf 102/67/99 95/60/92 104/69/101\\nf 104/69/101 108/73/105 102/67/99\\nf 104/69/101 103/68/100 109/74/106\\nf 109/74/106 110/75/107 104/69/101\\nf 110/75/107 109/74/106 111/76/108\\nf 111/76/108 112/77/109 110/75/107\\nf 104/69/101 110/75/107 113/78/110\\nf 113/78/110 108/73/105 104/69/101\\nf 107/72/104 102/67/99 108/73/105\\nf 108/73/105 114/79/111 107/72/104\\nf 112/77/109 111/76/108 86/80/112\\nf 86/80/112 85/81/113 112/77/109\\nf 113/78/110 110/75/107 112/77/109\\nf 112/77/109 115/82/114 113/78/110\\nf 113/78/110 116/83/115 117/84/116\\nf 117/84/116 108/73/105 113/78/110\\nf 118/85/117 116/83/115 113/78/110\\nf 113/78/110 115/82/114 118/85/117\\nf 115/82/114 112/77/109 85/81/113\\nf 85/81/113 119/86/118 115/82/114\\nf 118/85/117 115/82/114 120/87/119\\nf 120/87/119 121/88/120 118/85/117\\nf 122/89/121 123/90/122 124/91/123\\nf 124/91/123 125/92/124 122/89/121\\nf 123/90/122 122/89/121 121/88/120\\nf 121/88/120 120/87/119 123/90/122\\nf 119/86/118 120/87/119 115/82/114\\nf 126/93/125 119/86/118 127/94/126\\nf 127/94/126 128/95/127 126/93/125\\nf 126/93/125 129/96/128 119/86/118\\nf 120/87/119 119/86/118 129/96/128\\nf 123/90/122 120/87/119 129/96/128\\nf 129/96/128 130/97/129 123/90/122\\nf 126/93/125 128/95/127 131/98/130\\nf 130/97/129 129/96/128 132/99/131\\nf 123/90/122 130/97/129 133/100/132\\nf 133/100/132 124/91/123 123/90/122\\nf 131/98/130 134/101/133 135/102/134\\nf 135/102/134 136/103/135 131/98/130\\nf 138/104/136 139/105/137 140/106/138\\nf 137/107/139 136/103/135 135/102/134\\nf 135/102/134 141/108/140 137/107/139\\nf 135/102/134 134/101/133 142/109/141\\nf 142/109/141 141/108/140 135/102/134\\nf 134/101/133 143/110/142 142/109/141\\nf 140/106/138 139/105/137 141/108/140\\nf 137/107/139 141/108/140 139/105/137\\nf 144/111/143 145/112/144 142/109/141\\nf 142/109/141 143/110/142 144/111/143\\nf 145/112/144 146/113/145 142/109/141\\nf 141/108/140 142/109/141 146/113/145\\nf 146/113/145 140/106/138 141/108/140\\nf 145/112/144 144/111/143 147/114/146\\nf 147/114/146 148/115/147 145/112/144\\nf 146/113/145 145/112/144 148/115/147\\nf 146/113/145 149/116/148 140/106/138\\nf 150/117/149 151/118/150 152/119/151\\nf 152/119/151 153/120/152 150/117/149\\nf 154/121/153 150/117/149 155/122/154\\nf 153/120/152 152/119/151 93/58/90\\nf 93/58/90 92/57/89 153/120/152\\nf 156/123/155 150/117/149 153/120/152\\nf 156/123/155 153/120/152 92/57/89\\nf 156/123/155 92/57/89 99/64/96\\nf 88/53/85 96/61/93 99/64/96\\nf 99/64/96 92/57/89 88/53/85\\nf 155/122/154 100/65/97 154/121/153\\nf 156/123/155 99/64/96 100/65/97\\nf 156/123/155 100/65/97 155/122/154\\nf 156/123/155 155/122/154 150/117/149\\nf 158/124/156 151/118/150 150/117/149\\nf 150/117/149 159/125/157 158/124/156\\nf 159/125/157 150/117/149 154/121/153\\nf 154/121/153 160/126/158 159/125/157\\nf 154/121/153 161/127/159 160/126/158\\nf 154/121/153 100/65/97 105/70/102\\nf 105/70/102 161/127/159 154/121/153\\nf 105/70/102 100/65/97 98/63/95\\nf 106/71/103 161/127/159 105/70/102\\nf 161/127/159 106/71/103 162/128/160\\nf 162/128/160 160/126/158 161/127/159\\nf 160/126/158 162/128/160 163/129/161\\nf 160/126/158 163/129/161 164/130/162\\nf 164/130/162 159/125/157 160/126/158\\nf 159/125/157 164/130/162 157/131/163\\nf 157/131/163 158/124/156 159/125/157\\nf 165/132/164 157/131/163 164/130/162\\nf 166/133/165 165/132/164 164/130/162\\nf 164/130/162 163/129/161 166/133/165\\nf 167/134/166 165/132/164 166/133/165\\nf 168/135/167 166/133/165 169/136/168\\nf 166/133/165 168/135/167 167/134/166\\nf 168/135/167 170/137/169 171/138/170\\nf 171/138/170 167/134/166 168/135/167\\nf 167/134/166 171/138/170 172/139/171\\nf 172/139/171 173/140/172 167/134/166\\nf 167/134/166 173/140/172 174/141/173\\nf 165/132/164 167/134/166 174/141/173\\nf 165/132/164 174/141/173 175/142/174\\nf 175/142/174 176/143/175 165/132/164\\nf 157/131/163 165/132/164 176/143/175\\nf 173/140/172 172/139/171 179/144/176\\nf 179/144/176 180/145/177 173/140/172\\nf 174/141/173 173/140/172 180/145/177\\nf 180/145/177 175/142/174 174/141/173\\nf 184/146/178 185/147/179 186/148/180\\nf 186/148/180 187/149/181 184/146/178\\nf 185/147/179 188/150/182 189/151/183\\nf 189/151/183 186/148/180 185/147/179\\nf 191/152/184 192/153/185 193/154/186\\nf 193/154/186 194/155/187 191/152/184\\nf 195/156/188 196/157/189 197/158/190\\nf 197/158/190 198/159/191 195/156/188\\nf 199/160/192 200/161/193 198/159/191\\nf 198/159/191 197/158/190 199/160/192\\nf 196/157/189 201/162/194 202/163/195\\nf 202/163/195 197/158/190 196/157/189\\nf 191/152/184 194/155/187 203/164/196\\nf 203/164/196 204/165/197 191/152/184\\nf 203/164/196 202/163/195 201/162/194\\nf 201/162/194 204/165/197 203/164/196\\nf 203/164/196 194/155/187 205/166/198\\nf 205/166/198 199/160/192 203/164/196\\nf 203/164/196 199/160/192 197/158/190\\nf 197/158/190 202/163/195 203/164/196\\nf 206/167/199 193/154/186 188/150/182\\nf 188/150/182 185/147/179 206/167/199\\nf 190/168/200 188/150/182 193/154/186\\nf 193/154/186 192/153/185 190/168/200\\nf 193/154/186 206/167/199 194/155/187\\nf 205/166/198 194/155/187 206/167/199\\nf 206/167/199 207/169/201 205/166/198\\nf 207/169/201 200/161/193 199/160/192\\nf 199/160/192 205/166/198 207/169/201\\nf 208/170/202 209/171/203 195/156/188\\nf 195/156/188 198/159/191 208/170/202\\nf 208/170/202 198/159/191 210/172/204\\nf 210/172/204 211/173/205 208/170/202\\nf 210/172/204 198/159/191 200/161/193\\nf 200/161/193 212/174/206 210/172/204\\nf 212/174/206 200/161/193 207/169/201\\nf 184/146/178 212/174/206 207/169/201\\nf 207/169/201 206/167/199 185/147/179\\nf 185/147/179 184/146/178 207/169/201\\nf 213/175/207 211/173/205 214/176/208\\nf 214/176/208 215/177/209 213/175/207\\nf 211/173/205 210/172/204 216/178/210\\nf 216/178/210 214/176/208 211/173/205\\nf 210/172/204 217/179/211 216/178/210\\nf 217/179/211 210/172/204 212/174/206\\nf 187/149/181 212/174/206 184/146/178\\nf 219/180/212 187/149/181 218/181/213\\nf 218/181/213 220/182/214 219/180/212\\nf 212/174/206 187/149/181 219/180/212\\nf 221/183/215 220/182/214 218/181/213\\nf 220/182/214 222/184/216 219/180/212\\nf 222/184/216 212/174/206 219/180/212\\nf 212/174/206 222/184/216 223/185/217\\nf 217/179/211 212/174/206 223/185/217\\nf 222/184/216 220/182/214 224/186/218\\nf 220/182/214 221/183/215 225/187/219\\nf 225/187/219 224/186/218 220/182/214\\nf 216/178/210 228/188/220 229/189/221\\nf 229/189/221 214/176/208 216/178/210\\nf 217/179/211 228/188/220 216/178/210\\nf 228/188/220 217/179/211 230/190/222\\nf 223/185/217 230/190/222 217/179/211\\nf 230/190/222 223/185/217 231/191/223\\nf 222/184/216 231/191/223 223/185/217\\nf 231/191/223 222/184/216 232/192/224\\nf 232/192/224 222/184/216 224/186/218\\nf 224/186/218 227/193/225 232/192/224\\nf 233/194/226 230/190/222 169/136/168\\nf 231/191/223 169/136/168 230/190/222\\nf 169/136/168 231/191/223 168/135/167\\nf 168/135/167 231/191/223 232/192/224\\nf 232/192/224 170/137/169 168/135/167\\nf 170/137/169 232/192/224 227/193/225\\nf 227/193/225 234/195/227 170/137/169\\nf 171/138/170 170/137/169 234/195/227\\nf 234/195/227 235/196/228 171/138/170\\nf 172/139/171 171/138/170 235/196/228\\nf 226/197/229 236/198/230 234/195/227\\nf 234/195/227 227/193/225 226/197/229\\nf 183/199/231 179/144/176 172/139/171\\nf 182/200/232 181/201/233 175/142/174\\nf 175/142/174 180/145/177 182/200/232\\nf 182/200/232 180/145/177 179/144/176\\nf 238/202/234 237/203/235 239/204/236\\nf 243/205/237 244/206/238 245/207/239\\nf 245/207/239 246/208/240 243/205/237\\nf 247/209/241 243/205/237 246/208/240\\nf 246/208/240 248/210/242 247/209/241\\nf 247/209/241 248/210/242 249/211/243\\nf 249/211/243 250/212/244 247/209/241\\nf 250/212/244 249/211/243 251/213/245\\nf 251/213/245 252/214/246 250/212/244\\nf 253/215/247 254/216/248 255/217/249\\nf 254/216/248 253/215/247 256/218/250\\nf 256/218/250 257/219/251 254/216/248\\nf 258/220/252 257/219/251 256/218/250\\nf 256/218/250 259/221/253 258/220/252\\nf 259/221/253 260/222/254 261/223/255\\nf 261/223/255 258/220/252 259/221/253\\nf 258/220/252 262/224/256 263/225/257\\nf 263/225/257 257/219/251 258/220/252\\nf 257/219/251 263/225/257 264/226/258\\nf 264/226/258 254/216/248 257/219/251\\nf 255/217/249 254/216/248 264/226/258\\nf 264/226/258 265/227/259 255/217/249\\nf 251/213/245 255/217/249 265/227/259\\nf 265/227/259 252/214/246 251/213/245\\nf 263/225/257 266/228/260 267/229/261\\nf 267/229/261 264/226/258 263/225/257\\nf 263/225/257 262/224/256 266/228/260\\nf 268/230/262 266/228/260 262/224/256\\nf 262/224/256 269/231/263 268/230/262\\nf 268/230/262 269/231/263 270/232/264\\nf 269/231/263 262/224/256 261/223/255\\nf 261/223/255 271/233/265 269/231/263\\nf 270/232/264 272/234/266 273/235/267\\nf 270/232/264 269/231/263 272/234/266\\nf 269/231/263 271/233/265 272/234/266\\nf 262/224/256 258/220/252 261/223/255\\nf 271/233/265 261/223/255 260/222/254\\nf 273/235/267 272/234/266 271/233/265\\nf 274/236/268 260/222/254 259/221/253\\nf 259/221/253 275/237/269 274/236/268\\nf 256/218/250 253/215/247 276/238/270\\nf 277/239/271 276/238/270 253/215/247\\nf 255/217/249 251/213/245 278/240/272\\nf 279/241/273 248/210/242 246/208/240\\nf 246/208/240 245/207/239 280/242/274\\nf 281/243/275 245/207/239 244/206/238\\nf 244/206/238 282/244/276 281/243/275\\nf 241/245/277 283/246/278 238/202/234\\nf 238/202/234 242/247/279 241/245/277\\nf 284/248/280 209/171/203 208/170/202\\nf 215/177/209 285/249/281 213/175/207\\nf 287/250/282 215/177/209 288/251/283\\nf 214/176/208 288/251/283 215/177/209\\nf 288/251/283 214/176/208 229/189/221\\nf 124/91/123 133/100/132 287/250/282\\nf 287/250/282 289/252/284 124/91/123\\nf 289/252/284 287/250/282 288/251/283\\nf 288/251/283 290/253/285 289/252/284\\nf 288/251/283 291/254/286 290/253/285\\nf 291/254/286 288/251/283 229/189/221\\nf 291/254/286 229/189/221 228/188/220\\nf 228/188/220 233/194/226 291/254/286\\nf 230/190/222 233/194/226 228/188/220\\nf 292/255/287 124/91/123 289/252/284\\nf 289/252/284 293/256/288 292/255/287\\nf 293/256/288 289/252/284 290/253/285\\nf 290/253/285 106/71/103 293/256/288\\nf 290/253/285 162/128/160 106/71/103\\nf 162/128/160 290/253/285 291/254/286\\nf 162/128/160 291/254/286 233/194/226\\nf 233/194/226 163/129/161 162/128/160\\nf 233/194/226 169/136/168 166/133/165\\nf 166/133/165 163/129/161 233/194/226\\nf 294/257/289 295/258/290 117/84/116\\nf 117/84/116 296/259/291 294/257/289\\nf 117/84/116 295/258/290 108/73/105\\nf 295/258/290 114/79/111 108/73/105\\nf 114/79/111 292/255/287 293/256/288\\nf 293/256/288 107/72/104 114/79/111\\nf 107/72/104 293/256/288 106/71/103\\nf 106/71/103 101/66/98 107/72/104\\nf 294/257/289 114/79/111 295/258/290\\nf 294/257/289 296/259/291 297/260/292\\nf 297/260/292 298/261/293 294/257/289\\nf 114/79/111 294/257/289 298/261/293\\nf 298/261/293 299/262/294 292/255/287\\nf 292/255/287 114/79/111 298/261/293\\nf 292/255/287 299/262/294 125/92/124\\nf 125/92/124 124/91/123 292/255/287\\nf 299/262/294 298/261/293 297/260/292\\nf 297/260/292 300/263/295 299/262/294\\nf 301/264/296 125/92/124 299/262/294\\nf 299/262/294 300/263/295 301/264/296\\nf 302/265/297 300/263/295 297/260/292\\nf 297/260/292 304/266/298 302/265/297\\nf 304/266/298 297/260/292 296/259/291\\nf 304/266/298 296/259/291 305/267/299\\nf 305/267/299 306/268/300 304/266/298\\nf 306/268/300 305/267/299 307/269/301\\nf 308/270/302 306/268/300 307/269/301\\nf 307/269/301 309/271/303 308/270/302\\nf 308/270/302 309/271/303 310/272/304\\nf 125/92/124 301/264/296 310/272/304\\nf 310/272/304 122/89/121 125/92/124\\nf 122/89/121 310/272/304 309/271/303\\nf 309/271/303 121/88/120 122/89/121\\nf 121/88/120 309/271/303 307/269/301\\nf 307/269/301 118/85/117 121/88/120\\nf 307/269/301 305/267/299 116/83/115\\nf 116/83/115 118/85/117 307/269/301\\nf 305/267/299 296/259/291 117/84/116\\nf 117/84/116 116/83/115 305/267/299\\nf 239/204/236 312/273/305 313/274/306\\nf 312/273/305 239/204/236 237/203/235\\nf 314/275/307 315/276/308 316/277/309\\nf 315/276/308 317/278/310 318/279/311\\nf 318/279/311 316/277/309 315/276/308\\nf 317/278/310 319/280/312 320/281/313\\nf 320/281/313 318/279/311 317/278/310\\nf 318/279/311 321/282/314 316/277/309\\nf 318/279/311 267/229/261 266/228/260\\nf 266/228/260 321/282/314 318/279/311\\nf 318/279/311 320/281/313 322/283/315\\nf 322/283/315 267/229/261 318/279/311\\nf 322/283/315 265/227/259 264/226/258\\nf 264/226/258 267/229/261 322/283/315\\nf 321/282/314 266/228/260 268/230/262\\nf 323/284/316 283/246/278 241/245/277\\nf 241/245/277 324/285/317 323/284/316\\nf 143/110/142 134/101/133 131/98/130\\nf 131/98/130 144/111/143 143/110/142\\nf 131/98/130 128/95/127 144/111/143\\nf 128/95/127 147/114/146 144/111/143\\nf 147/114/146 128/95/127 127/94/126\\nf 87/286/318 127/94/126 119/86/118\\nf 119/86/118 85/81/113 87/286/318\\nf 312/273/305 326/287/319 325/288/320\\nf 325/288/320 313/274/306 312/273/305\\nf 326/287/319 312/273/305 237/203/235\\nf 328/289/321 329/290/322 330/291/323\\nf 325/288/320 328/289/321 330/291/323\\nf 330/291/323 331/292/324 325/288/320\\nf 331/292/324 330/291/323 332/293/325\\nf 331/292/324 333/294/326 313/274/306\\nf 313/274/306 325/288/320 331/292/324\\nf 332/293/325 334/295/327 333/294/326\\nf 333/294/326 331/292/324 332/293/325\\nf 335/296/328 239/204/236 313/274/306\\nf 313/274/306 333/294/326 335/296/328\\nf 336/297/329 335/296/328 333/294/326\\nf 333/294/326 334/295/327 336/297/329\\nf 239/204/236 335/296/328 242/247/279\\nf 242/247/279 238/202/234 239/204/236\\nf 338/298/330 339/299/331 90/55/87\\nf 90/55/87 89/54/86 338/298/330\\nf 89/54/86 93/58/90 340/300/332\\nf 340/300/332 338/298/330 89/54/86\\nf 339/299/331 341/301/333 94/59/91\\nf 94/59/91 90/55/87 339/299/331\\nf 342/302/334 343/303/335 339/299/331\\nf 339/299/331 338/298/330 342/302/334\\nf 344/304/336 342/302/334 345/305/337\\nf 345/305/337 346/306/338 344/304/336\\nf 344/304/336 347/307/339 343/303/335\\nf 343/303/335 342/302/334 344/304/336\\nf 343/303/335 348/308/340 341/301/333\\nf 341/301/333 339/299/331 343/303/335\\nf 341/301/333 349/309/341 103/68/100\\nf 103/68/100 94/59/91 341/301/333\\nf 350/310/342 351/311/343 347/307/339\\nf 347/307/339 344/304/336 350/310/342\\nf 347/307/339 352/312/344 348/308/340\\nf 348/308/340 343/303/335 347/307/339\\nf 348/308/340 353/313/345 349/309/341\\nf 349/309/341 341/301/333 348/308/340\\nf 349/309/341 354/314/346 109/74/106\\nf 109/74/106 103/68/100 349/309/341\\nf 354/314/346 355/315/347 111/76/108\\nf 111/76/108 109/74/106 354/314/346\\nf 356/316/348 354/314/346 349/309/341\\nf 349/309/341 353/313/345 356/316/348\\nf 352/312/344 357/317/349 353/313/345\\nf 353/313/345 348/308/340 352/312/344\\nf 355/315/347 337/318/350 86/80/112\\nf 86/80/112 111/76/108 355/315/347\\nf 356/316/348 358/319/351 355/315/347\\nf 355/315/347 354/314/346 356/316/348\\nf 359/320/352 360/321/353 356/316/348\\nf 356/316/348 353/313/345 359/320/352\\nf 361/322/354 358/319/351 356/316/348\\nf 356/316/348 360/321/353 361/322/354\\nf 358/319/351 362/323/355 337/318/350\\nf 337/318/350 355/315/347 358/319/351\\nf 363/324/356 358/319/351 361/322/354\\nf 361/322/354 364/325/357 363/324/356\\nf 365/326/358 366/327/359 367/328/360\\nf 367/328/360 368/329/361 365/326/358\\nf 364/325/357 367/328/360 366/327/359\\nf 366/327/359 363/324/356 364/325/357\\nf 362/323/355 358/319/351 363/324/356\\nf 369/330/362 362/323/355 370/331/363\\nf 370/331/363 371/332/364 369/330/362\\nf 370/331/363 362/323/355 372/333/365\\nf 363/324/356 372/333/365 362/323/355\\nf 366/327/359 373/334/366 372/333/365\\nf 372/333/365 363/324/356 366/327/359\\nf 370/331/363 374/335/367 375/336/368\\nf 375/336/368 371/332/364 370/331/363\\nf 372/333/365 376/337/369 374/335/367\\nf 374/335/367 370/331/363 372/333/365\\nf 376/337/369 372/333/365 373/334/366\\nf 377/338/370 373/334/366 366/327/359\\nf 366/327/359 365/326/358 377/338/370\\nf 375/336/368 378/339/371 379/340/372\\nf 379/340/372 380/341/373 375/336/368\\nf 375/336/368 374/335/367 378/339/371\\nf 381/342/374 378/339/371 374/335/367\\nf 374/335/367 382/343/375 381/342/374\\nf 385/344/376 381/342/374 382/343/375\\nf 379/340/372 378/339/371 381/342/374\\nf 381/342/374 386/345/377 379/340/372\\nf 387/346/378 380/341/373 379/340/372\\nf 379/340/372 386/345/377 387/346/378\\nf 380/341/373 387/346/378 388/347/379\\nf 384/348/380 386/345/377 385/344/376\\nf 381/342/374 385/344/376 386/345/377\\nf 389/349/381 388/347/379 387/346/378\\nf 387/346/378 390/350/382 389/349/381\\nf 390/350/382 387/346/378 391/351/383\\nf 386/345/377 384/348/380 391/351/383\\nf 391/351/383 387/346/378 386/345/377\\nf 392/352/384 389/349/381 390/350/382\\nf 394/353/385 393/354/386 391/351/383\\nf 391/351/383 384/348/380 394/353/385\\nf 383/355/387 395/356/388 394/353/385\\nf 394/353/385 384/348/380 383/355/387\\nf 396/357/389 397/358/390 152/119/151\\nf 152/119/151 151/118/150 396/357/389\\nf 398/359/391 399/360/392 396/357/389\\nf 397/358/390 340/300/332 93/58/90\\nf 93/58/90 152/119/151 397/358/390\\nf 400/361/393 397/358/390 396/357/389\\nf 400/361/393 340/300/332 397/358/390\\nf 400/361/393 345/305/337 340/300/332\\nf 345/305/337 342/302/334 338/298/330\\nf 338/298/330 340/300/332 345/305/337\\nf 399/360/392 398/359/391 346/306/338\\nf 400/361/393 346/306/338 345/305/337\\nf 400/361/393 399/360/392 346/306/338\\nf 400/361/393 396/357/389 399/360/392\\nf 396/357/389 151/118/150 402/362/394\\nf 402/362/394 403/363/395 396/357/389\\nf 398/359/391 396/357/389 403/363/395\\nf 403/363/395 404/364/396 398/359/391\\nf 398/359/391 404/364/396 405/365/397\\nf 350/310/342 346/306/338 398/359/391\\nf 398/359/391 405/365/397 350/310/342\\nf 350/310/342 344/304/336 346/306/338\\nf 351/311/343 350/310/342 405/365/397\\nf 405/365/397 406/366/398 351/311/343\\nf 406/366/398 405/365/397 404/364/396\\nf 404/364/396 407/367/399 406/366/398\\nf 408/368/400 407/367/399 404/364/396\\nf 404/364/396 403/363/395 408/368/400\\nf 401/369/401 408/368/400 403/363/395\\nf 403/363/395 402/362/394 401/369/401\\nf 409/370/402 408/368/400 401/369/401\\nf 410/371/403 407/367/399 408/368/400\\nf 408/368/400 409/370/402 410/371/403\\nf 411/372/404 410/371/403 409/370/402\\nf 412/373/405 413/374/406 410/371/403\\nf 410/371/403 411/372/404 412/373/405\\nf 414/375/407 415/376/408 412/373/405\\nf 412/373/405 411/372/404 414/375/407\\nf 416/377/409 414/375/407 411/372/404\\nf 411/372/404 417/378/410 416/377/409\\nf 411/372/404 418/379/411 417/378/410\\nf 409/370/402 418/379/411 411/372/404\\nf 419/380/412 418/379/411 409/370/402\\nf 409/370/402 420/381/413 419/380/412\\nf 401/369/401 420/381/413 409/370/402\\nf 417/378/410 421/382/414 422/383/415\\nf 422/383/415 416/377/409 417/378/410\\nf 418/379/411 419/380/412 421/382/414\\nf 421/382/414 417/378/410 418/379/411\\nf 424/384/416 425/385/417 426/386/418\\nf 426/386/418 427/387/419 424/384/416\\nf 429/388/420 192/153/185 191/152/184\\nf 191/152/184 430/389/421 429/388/420\\nf 431/390/422 196/157/189 195/156/188\\nf 195/156/188 432/391/423 431/390/422\\nf 433/392/424 431/390/422 432/391/423\\nf 432/391/423 434/393/425 433/392/424\\nf 435/394/426 201/162/194 196/157/189\\nf 196/157/189 431/390/422 435/394/426\\nf 436/395/427 430/389/421 191/152/184\\nf 191/152/184 204/165/197 436/395/427\\nf 201/162/194 435/394/426 436/395/427\\nf 436/395/427 204/165/197 201/162/194\\nf 436/395/427 433/392/424 437/396/428\\nf 437/396/428 430/389/421 436/395/427\\nf 436/395/427 435/394/426 431/390/422\\nf 431/390/422 433/392/424 436/395/427\\nf 428/397/429 429/388/420 438/398/430\\nf 438/398/430 425/385/417 428/397/429\\nf 190/168/200 192/153/185 429/388/420\\nf 429/388/420 428/397/429 190/168/200\\nf 429/388/420 430/389/421 438/398/430\\nf 437/396/428 438/398/430 430/389/421\\nf 438/398/430 437/396/428 439/399/431\\nf 433/392/424 434/393/425 439/399/431\\nf 439/399/431 437/396/428 433/392/424\\nf 440/400/432 432/391/423 195/156/188\\nf 195/156/188 209/171/203 440/400/432\\nf 441/401/433 432/391/423 440/400/432\\nf 440/400/432 442/402/434 441/401/433\\nf 441/401/433 434/393/425 432/391/423\\nf 434/393/425 441/401/433 443/403/435\\nf 443/403/435 439/399/431 434/393/425\\nf 426/386/418 439/399/431 443/403/435\\nf 425/385/417 438/398/430 439/399/431\\nf 439/399/431 426/386/418 425/385/417\\nf 442/402/434 440/400/432 444/404/436\\nf 444/404/436 445/405/437 442/402/434\\nf 445/405/437 446/406/438 447/407/439\\nf 447/407/439 442/402/434 445/405/437\\nf 448/408/440 441/401/433 442/402/434\\nf 442/402/434 447/407/439 448/408/440\\nf 441/401/433 448/408/440 449/409/441\\nf 449/409/441 443/403/435 441/401/433\\nf 427/387/419 426/386/418 443/403/435\\nf 450/410/442 451/411/443 424/384/416\\nf 424/384/416 427/387/419 450/410/442\\nf 452/412/444 453/413/445 450/410/442\\nf 450/410/442 427/387/419 452/412/444\\nf 443/403/435 452/412/444 427/387/419\\nf 453/413/445 452/412/444 454/414/446\\nf 454/414/446 452/412/444 443/403/435\\nf 443/403/435 455/415/447 454/414/446\\nf 449/409/441 455/415/447 443/403/435\\nf 454/414/446 456/416/448 453/413/445\\nf 457/417/449 456/416/448 458/418/450\\nf 448/408/440 447/407/439 459/419/451\\nf 459/419/451 460/420/452 448/408/440\\nf 449/409/441 448/408/440 460/420/452\\nf 460/420/452 461/421/453 449/409/441\\nf 455/415/447 449/409/441 461/421/453\\nf 461/421/453 462/422/454 455/415/447\\nf 454/414/446 455/415/447 462/422/454\\nf 462/422/454 463/423/455 454/414/446\\nf 463/423/455 458/418/450 456/416/448\\nf 456/416/448 454/414/446 463/423/455\\nf 464/424/456 413/374/406 461/421/453\\nf 462/422/454 461/421/453 413/374/406\\nf 413/374/406 412/373/405 462/422/454\\nf 412/373/405 415/376/408 463/423/455\\nf 463/423/455 462/422/454 412/373/405\\nf 415/376/408 465/425/457 458/418/450\\nf 458/418/450 463/423/455 415/376/408\\nf 414/375/407 466/426/458 465/425/457\\nf 465/425/457 415/376/408 414/375/407\\nf 416/377/409 466/426/458 414/375/407\\nf 465/425/457 466/426/458 468/427/459\\nf 468/427/459 467/428/460 465/425/457\\nf 466/426/458 416/377/409 469/429/461\\nf 469/429/461 468/427/459 466/426/458\\nf 416/377/409 422/383/415 423/430/462\\nf 423/430/462 469/429/461 416/377/409\\nf 421/382/414 181/201/233 182/200/232\\nf 182/200/232 422/383/415 421/382/414\\nf 421/382/414 419/380/412 181/201/233\\nf 473/431/463 474/432/464 475/433/465\\nf 476/434/466 477/435/467 478/436/468\\nf 478/436/468 479/437/469 476/434/466\\nf 480/438/470 481/439/471 477/435/467\\nf 477/435/467 476/434/466 480/438/470\\nf 480/438/470 482/440/472 483/441/473\\nf 483/441/473 481/439/471 480/438/470\\nf 482/440/472 484/442/474 485/443/475\\nf 485/443/475 483/441/473 482/440/472\\nf 487/444/476 488/445/477 486/446/478\\nf 489/447/479 486/446/478 488/445/477\\nf 488/445/477 490/448/480 489/447/479\\nf 491/449/481 492/450/482 489/447/479\\nf 489/447/479 490/448/480 491/449/481\\nf 493/451/483 494/452/484 492/450/482\\nf 492/450/482 491/449/481 493/451/483\\nf 495/453/485 496/454/486 491/449/481\\nf 491/449/481 490/448/480 495/453/485\\nf 497/455/487 495/453/485 490/448/480\\nf 490/448/480 488/445/477 497/455/487\\nf 487/444/476 498/456/488 497/455/487\\nf 497/455/487 488/445/477 487/444/476\\nf 485/443/475 484/442/474 498/456/488\\nf 498/456/488 487/444/476 485/443/475\\nf 499/457/489 500/458/490 495/453/485\\nf 495/453/485 497/455/487 499/457/489\\nf 495/453/485 500/458/490 496/454/486\\nf 501/459/491 502/460/492 496/454/486\\nf 496/454/486 500/458/490 501/459/491\\nf 503/461/493 502/460/492 501/459/491\\nf 502/460/492 504/462/494 493/451/483\\nf 493/451/483 496/454/486 502/460/492\\nf 503/461/493 506/463/495 502/460/492\\nf 502/460/492 506/463/495 504/462/494\\nf 496/454/486 493/451/483 491/449/481\\nf 504/462/494 494/452/484 493/451/483\\nf 507/464/496 489/447/479 492/450/482\\nf 508/465/497 485/443/475 487/444/476\\nf 509/466/498 483/441/473 485/443/475\\nf 485/443/475 508/465/497 509/466/498\\nf 481/439/471 483/441/473 509/466/498\\nf 471/467/499 511/468/500 475/433/465\\nf 475/433/465 474/432/464 471/467/499\\nf 440/400/432 209/171/203 284/248/280\\nf 284/248/280 444/404/436 440/400/432\\nf 377/338/370 513/469/501 512/470/502\\nf 446/406/438 512/470/502 513/469/501\\nf 513/469/501 514/471/503 446/406/438\\nf 447/407/439 446/406/438 514/471/503\\nf 514/471/503 459/419/451 447/407/439\\nf 513/469/501 377/338/370 365/326/358\\nf 365/326/358 515/472/504 513/469/501\\nf 514/471/503 513/469/501 515/472/504\\nf 515/472/504 516/473/505 514/471/503\\nf 514/471/503 516/473/505 517/474/506\\nf 517/474/506 459/419/451 514/471/503\\nf 517/474/506 464/424/456 460/420/452\\nf 460/420/452 459/419/451 517/474/506\\nf 461/421/453 460/420/452 464/424/456\\nf 515/472/504 365/326/358 518/475/507\\nf 518/475/507 519/476/508 515/472/504\\nf 516/473/505 515/472/504 519/476/508\\nf 519/476/508 351/311/343 516/473/505\\nf 516/473/505 351/311/343 406/366/398\\nf 406/366/398 517/474/506 516/473/505\\nf 464/424/456 517/474/506 406/366/398\\nf 406/366/398 407/367/399 464/424/456\\nf 410/371/403 413/374/406 464/424/456\\nf 464/424/456 407/367/399 410/371/403\\nf 520/477/509 521/478/510 359/320/352\\nf 359/320/352 522/479/511 520/477/509\\nf 359/320/352 353/313/345 522/479/511\\nf 522/479/511 353/313/345 357/317/349\\nf 519/476/508 518/475/507 357/317/349\\nf 357/317/349 352/312/344 519/476/508\\nf 351/311/343 519/476/508 352/312/344\\nf 352/312/344 347/307/339 351/311/343\\nf 520/477/509 522/479/511 357/317/349\\nf 520/477/509 523/480/512 524/481/513\\nf 524/481/513 521/478/510 520/477/509\\nf 357/317/349 523/480/512 520/477/509\\nf 518/475/507 525/482/514 523/480/512\\nf 523/480/512 357/317/349 518/475/507\\nf 368/329/361 525/482/514 518/475/507\\nf 518/475/507 365/326/358 368/329/361\\nf 526/483/515 524/481/513 523/480/512\\nf 523/480/512 525/482/514 526/483/515\\nf 527/484/516 526/483/515 525/482/514\\nf 525/482/514 368/329/361 527/484/516\\nf 524/481/513 526/483/515 528/485/517\\nf 528/485/517 530/486/518 524/481/513\\nf 530/486/518 521/478/510 524/481/513\\nf 530/486/518 531/487/519 532/488/520\\nf 532/488/520 521/478/510 530/486/518\\nf 531/487/519 533/489/521 532/488/520\\nf 368/329/361 367/328/360 535/490/522\\nf 535/490/522 527/484/516 368/329/361\\nf 367/328/360 364/325/357 534/491/523\\nf 534/491/523 535/490/522 367/328/360\\nf 364/325/357 361/322/354 533/489/521\\nf 533/489/521 534/491/523 364/325/357\\nf 360/321/353 532/488/520 533/489/521\\nf 533/489/521 361/322/354 360/321/353\\nf 359/320/352 521/478/510 532/488/520\\nf 532/488/520 360/321/353 359/320/352\\nf 511/468/500 471/467/499 470/492/524\\nf 472/493/525 538/494/526 539/495/527\\nf 540/496/528 315/276/308 314/275/307\\nf 314/275/307 541/497/529 540/496/528\\nf 542/498/530 317/278/310 315/276/308\\nf 315/276/308 540/496/528 542/498/530\\nf 543/499/531 319/280/312 317/278/310\\nf 317/278/310 542/498/530 543/499/531\\nf 542/498/530 540/496/528 544/500/532\\nf 500/458/490 499/457/489 542/498/530\\nf 542/498/530 544/500/532 500/458/490\\nf 545/501/533 543/499/531 542/498/530\\nf 542/498/530 499/457/489 545/501/533\\nf 497/455/487 498/456/488 545/501/533\\nf 545/501/533 499/457/489 497/455/487\\nf 544/500/532 501/459/491 500/458/490\\nf 546/502/534 547/503/535 548/504/536\\nf 548/504/536 549/505/537 546/502/534\\nf 388/347/379 389/349/381 375/336/368\\nf 375/336/368 380/341/373 388/347/379\\nf 375/336/368 389/349/381 371/332/364\\nf 371/332/364 389/349/381 392/352/384\\nf 392/352/384 369/330/362 371/332/364\\nf 548/504/536 547/503/535 539/495/527\\nf 539/495/527 538/494/526 548/504/536\\nf 550/506/538 549/505/537 548/504/536\\nf 552/507/539 548/504/536 538/494/526\\nf 538/494/526 553/508/540 552/507/539\\nf 538/494/526 472/493/525 554/509/541\\nf 554/509/541 553/508/540 538/494/526\\nf 472/493/525 471/467/499 474/432/464\\nf 474/432/464 554/509/541 472/493/525\\nf 554/509/541 474/432/464 473/431/463\\nf 559/510/542 558/511/543 560/512/544\\nf 565/513/545 566/514/546 567/515/547\\nf 566/514/546 565/513/545 568/516/548\\nf 571/517/549 572/518/550 573/519/551\\nf 572/518/550 571/517/549 574/520/552\\nf 575/521/553 576/522/554 577/523/555\\nf 576/522/554 575/521/553 578/524/556\\nf 586/525/557 585/526/558 587/527/559\\nf 588/528/560 589/529/561 590/530/562\\nf 589/529/561 588/528/560 591/531/563\\nf 596/532/564 595/533/565 597/534/566\\nf 597/534/566 598/512/567 596/532/564\\nf 598/512/567 597/534/566 599/535/568\\nf 601/536/569 602/537/570 603/538/571\\nf 602/537/570 601/536/569 604/539/572\\nf 610/540/573 611/541/574 612/542/575\\nf 614/543/576 615/544/577 616/545/578\\nf 618/546/579 617/547/580 619/548/581\\nf 622/549/582 623/550/583 624/551/584\\nf 626/552/585 625/553/586 627/554/587\\nf 629/555/588 628/516/589 630/556/590\\nf 631/557/591 632/558/592 633/559/593\\nf 634/560/594 593/561/595 594/562/596\\nf 637/563/597 603/538/571 602/537/570\\nf 603/538/571 637/563/597 638/564/598\\nf 616/545/578 641/565/599 614/543/576\\nf 579/566/600 642/567/601 580/568/602\\nf 581/569/603 643/570/604 582/571/605\\nf 645/572/606 586/525/557 587/527/559\\nf 651/573/607 652/574/608 653/575/609\\nf 654/576/610 608/577/611 655/578/612\\nf 608/577/611 654/576/610 607/579/613\\nf 558/511/543 660/580/614 560/512/544\\nf 660/580/614 558/511/543 661/581/615\\nf 556/549/616 661/581/615 558/511/543\\nf 624/551/584 664/582/617 622/549/582\\nf 647/583/618 667/584/619 674/585/620\\nf 681/586/621 650/587/622 649/588/623\\nf 683/571/624 604/539/572 601/536/569\\nf 685/589/625 686/590/626 687/512/627\\nf 686/590/626 685/589/625 567/515/547\\nf 567/515/547 689/591/628 686/590/626\\nf 689/591/628 567/515/547 690/592/629\\nf 691/593/630 693/594/631 685/589/625\\nf 565/513/545 685/589/625 693/594/631\\nf 685/589/625 565/513/545 567/515/547\\nf 703/523/632 701/595/633 704/596/634\\nf 706/597/635 597/534/566 595/533/565\\nf 597/534/566 706/597/635 707/598/636\\nf 707/598/636 599/535/568 597/534/566\\nf 599/535/568 707/598/636 708/599/637\\nf 719/600/638 720/601/639 718/553/640\\nf 728/518/641 729/520/642 727/517/643\\nf 741/602/644 742/530/645 743/603/646\\nf 743/603/646 744/531/647 741/602/644\\nf 746/604/648 747/561/649 745/598/650\\nf 748/597/651 745/598/650 747/561/649\\nf 747/561/649 749/562/652 748/597/651\\nf 754/536/653 755/538/654 756/537/655\\nf 756/537/655 757/539/656 754/536/653\\nf 758/605/657 759/606/658 760/607/659\\nf 760/607/659 761/592/660 758/605/657\\nf 765/541/661 766/608/662 764/540/663\\nf 770/547/664 771/609/665 772/546/666\\nf 772/546/666 773/548/667 770/547/664\\nf 776/549/668 777/551/669 778/550/670\\nf 779/553/671 780/610/672 781/611/673\\nf 783/612/674 784/613/675 782/614/676\\nf 785/615/677 786/559/678 787/558/679\\nf 746/604/648 788/512/680 789/532/681\\nf 789/532/681 747/561/649 746/604/648\\nf 747/561/649 789/532/681 790/560/682\\nf 790/560/682 749/562/652 747/561/649\\nf 719/600/638 791/616/683 792/617/684\\nf 792/617/684 720/601/639 719/600/638\\nf 793/563/685 756/537/655 755/538/654\\nf 755/538/654 794/564/686 793/563/685\\nf 796/542/687 729/520/642 728/518/641\\nf 769/545/688 768/543/689 797/565/690\\nf 798/510/691 797/565/690 768/543/689\\nf 768/543/689 767/618/692 798/510/691\\nf 734/566/693 733/568/694 799/567/695\\nf 737/569/696 736/571/697 800/570/698\\nf 803/619/699 804/620/700 802/621/701\\nf 814/526/702 782/614/676 784/613/675\\nf 784/613/675 815/622/703 814/526/702\\nf 816/596/704 817/623/705 818/624/706\\nf 716/511/707 717/512/708 819/580/709\\nf 819/580/709 820/581/710 716/511/707\\nf 714/549/711 716/511/707 820/581/710\\nf 820/581/710 821/544/712 714/549/711\\nf 771/609/665 770/547/664 822/521/713\\nf 824/582/714 825/625/715 777/551/669\\nf 777/551/669 776/549/668 824/582/714\\nf 803/619/699 826/618/716 827/604/717\\nf 832/626/718 833/627/719 804/620/700\\nf 804/620/700 803/619/699 832/626/718\\nf 805/583/720 834/585/721 828/584/722\\nf 718/553/640 832/626/718 803/619/699\\nf 835/628/723 836/629/724 837/630/725\\nf 837/630/725 722/631/726 835/628/723\\nf 838/632/727 839/633/728 836/629/724\\nf 836/629/724 835/628/723 838/632/727\\nf 841/586/729 806/588/730 807/587/731\\nf 807/587/731 835/628/723 841/586/729\\nf 837/630/725 836/629/724 839/633/728\\nf 839/633/728 844/634/732 837/630/725\\nf 721/635/733 841/586/729 835/628/723\\nf 835/628/723 722/631/726 721/635/733\\nf 843/571/734 754/536/653 757/539/656\\nf 854/590/735 846/512/736 845/636/737\\nf 853/637/738 758/605/657 761/592/660\\nf 766/608/662 858/638/739 856/639/740\\nf 859/595/741 855/640/742 861/523/743\\nf 863/641/744 857/642/745 856/639/740\\nf 856/639/740 858/638/739 863/641/744\\nf 727/517/643 861/523/743 855/640/742\\nf 862/643/746 764/540/663 766/608/662\\nf 868/519/747 766/608/662 765/541/661\\nf 870/515/748 761/592/660 760/607/659\\nf 760/607/659 871/514/749 870/515/748\\nf 875/644/750 874/645/751 876/646/752\\nf 876/646/752 877/647/753 875/644/750\\nf 877/647/753 876/646/752 878/648/754\\nf 878/648/754 879/649/755 877/647/753\\nf 885/650/756 884/651/757 883/652/758\\nf 884/651/757 885/650/756 886/653/759\\nf 886/653/759 887/654/760 884/651/757\\nf 881/655/761 884/651/757 887/654/760\\nf 887/654/760 891/656/762 881/655/761\\nf 889/657/763 892/658/764 893/659/765\\nf 882/660/766 881/655/761 891/656/762\\nf 891/656/762 894/661/767 882/660/766\\nf 890/662/768 895/663/769 896/664/770\\nf 896/664/770 888/665/771 890/662/768\\nf 897/666/772 898/667/773 899/667/774\\nf 900/668/775 899/667/774 898/667/773\\nf 899/667/774 900/668/775 901/669/776\\nf 902/670/777 901/669/776 900/668/775\\nf 901/669/776 902/670/777 903/671/778\\nf 904/672/779 905/673/780 906/673/781\\nf 907/674/782 906/673/781 905/673/780\\nf 906/673/781 907/674/782 908/675/783\\nf 909/676/784 908/675/783 907/674/782\\nf 908/675/783 909/676/784 910/677/785\\nf 911/666/786 912/667/787 913/667/788\\nf 914/668/789 913/667/788 912/667/787\\nf 913/667/788 914/668/789 915/669/790\\nf 916/670/791 915/669/790 914/668/789\\nf 915/669/790 916/670/791 917/671/792\\nf 918/678/793 919/679/794 920/680/795\\nf 921/681/796 920/680/795 919/679/794\\nf 920/680/795 921/681/796 922/682/797\\nf 923/683/798 924/684/799 925/685/800\\nf 926/686/801 925/685/800 924/684/799\\nf 925/685/800 926/686/801 927/687/801\\nf 928/688/802 929/689/803 930/673/804\\nf 931/690/805 930/673/804 929/689/803\\nf 930/673/804 931/690/805 932/691/806\\nf 933/692/807 932/691/806 931/690/805\\nf 932/691/806 933/692/807 934/693/808\\ns off\\nf 935/667/809 936/668/809 937/669/809\\ns 1\\nf 938/670/810 937/669/811 936/668/812\\nf 937/669/811 938/670/810 939/671/813\\nf 940/694/814 941/695/815 942/696/816\\nf 945/697/817 944/698/818 943/699/819\\nf 944/698/818 945/697/817 946/700/820\\nf 947/701/821 948/702/822 949/702/823\\nf 950/703/824 949/702/823 948/702/822\\nf 949/702/823 950/703/824 951/704/825\\nf 952/705/826 951/704/825 950/703/824\\nf 951/704/825 952/705/826 953/706/827\\nf 954/707/828 953/706/827 952/705/826\\nf 953/706/827 954/707/828 955/708/829\\nf 956/666/830 957/667/831 958/667/832\\nf 959/668/833 958/667/832 957/667/831\\nf 957/667/831 960/669/834 959/668/833\\nf 961/670/835 959/668/833 960/669/834\\nf 960/669/834 962/671/836 961/670/835\\nf 963/672/837 964/673/838 965/673/839\\nf 966/674/840 965/673/839 964/673/838\\nf 964/673/838 967/675/841 966/674/840\\nf 968/676/842 966/674/840 967/675/841\\nf 967/675/841 969/677/843 968/676/842\\nf 970/666/844 971/667/845 972/667/846\\nf 973/668/847 972/667/846 971/667/845\\nf 971/667/845 974/669/848 973/668/847\\nf 975/670/849 973/668/847 974/669/848\\nf 974/669/848 976/671/850 975/670/849\\nf 977/678/851 978/680/852 979/679/794\\nf 980/681/853 979/679/794 978/680/852\\nf 978/680/852 981/682/854 980/681/853\\nf 982/683/798 983/685/800 984/684/855\\nf 985/686/801 984/684/855 983/685/800\\nf 983/685/800 986/687/801 985/686/801\\nf 987/688/856 988/673/857 989/689/858\\nf 990/690/859 989/689/858 988/673/857\\nf 988/673/857 991/691/860 990/690/859\\nf 992/692/861 990/690/859 991/691/860\\nf 991/691/860 993/693/862 992/692/861\\ns off\\nf 994/667/863 995/669/863 996/668/863\\ns 1\\nf 997/670/864 996/668/865 995/669/866\\nf 995/669/866 998/671/867 997/670/864\\nf 999/694/868 1000/696/869 1001/695/870\\nf 1002/699/871 1001/695/870 1000/696/869\\nf 1003/698/872 1005/700/873 1004/697/874\\nf 1006/701/875 1007/702/876 1008/702/877\\nf 1009/703/878 1008/702/877 1007/702/876\\nf 1007/702/876 1010/704/879 1009/703/878\\nf 1011/705/880 1009/703/878 1010/704/879\\nf 1010/704/879 1012/706/881 1011/705/880\\nf 1013/707/882 1011/705/880 1012/706/881\\nf 1012/706/881 1014/708/882 1013/707/882\\nf 1015/709/883 1016/710/884 1017/711/885\\nf 1016/710/884 1015/709/883 1018/712/886\\nf 1019/713/887 1020/714/888 1021/715/889\\nf 1022/716/890 1017/711/885 1021/715/889\\nf 1021/715/889 1020/714/888 1022/716/890\\nf 1015/709/883 1017/711/885 1022/716/890\\nf 1023/717/891 1024/718/892 1018/712/886\\nf 1024/718/892 1016/710/884 1018/712/886\\nf 1016/710/884 1024/718/892 1025/719/893\\nf 1026/720/894 1027/721/895 1028/722/896\\nf 1028/722/896 1029/723/897 1026/720/894\\nf 1029/723/897 1028/722/896 1030/724/898\\nf 1030/724/898 1031/725/899 1029/723/897\\nf 1028/722/896 1032/726/900 1033/727/901\\nf 1033/727/901 1034/728/902 1028/722/896\\nf 1035/729/903 1025/719/893 1024/718/892\\nf 1024/718/892 1036/730/904 1035/729/903\\nf 1036/730/904 1024/718/892 1023/717/891\\nf 1023/717/891 1037/731/905 1036/730/904\\nf 1023/717/891 1038/732/906 1039/733/907\\nf 1039/733/907 1037/731/905 1023/717/891\\nf 1039/733/907 1038/732/906 1022/716/890\\nf 1022/716/890 1040/734/908 1039/733/907\\nf 1040/734/908 1036/730/904 1037/731/905\\nf 1037/731/905 1039/733/907 1040/734/908\\nf 1020/714/888 1041/735/909 1042/736/910\\nf 1020/714/888 1019/713/887 1041/735/909\\nf 1019/713/887 1043/737/911 1041/735/909\\nf 1046/738/912 1044/739/913 1043/737/911\\nf 1046/738/912 1043/737/911 1047/740/914\\nf 1047/740/914 1048/741/915 1046/738/912\\nf 1043/737/911 1019/713/887 1047/740/914\\nf 1047/740/914 1019/713/887 1049/742/916\\nf 1049/742/916 1050/743/917 1047/740/914\\nf 1049/742/916 1019/713/887 1021/715/889\\nf 1021/715/889 1051/744/918 1049/742/916\\nf 1052/745/919 1017/711/885 1016/710/884\\nf 1016/710/884 1053/746/920 1052/745/919\\nf 1029/723/897 1054/747/921 1055/748/922\\nf 1055/748/922 1026/720/894 1029/723/897\\nf 1053/746/920 1055/748/922 1056/749/923\\nf 1056/749/923 1057/750/924 1053/746/920\\nf 1052/745/919 1053/746/920 1057/750/924\\nf 1057/750/924 1058/751/925 1052/745/919\\nf 1051/744/918 1059/752/926 1060/753/927\\nf 1060/753/927 1049/742/916 1051/744/918\\nf 1049/742/916 1060/753/927 1061/754/928\\nf 1061/754/928 1050/743/917 1049/742/916\\nf 1062/755/929 1061/754/928 1060/753/927\\nf 1060/753/927 1063/756/930 1062/755/929\\nf 1061/754/928 1062/755/929 1064/757/931\\nf 1064/757/931 1065/758/932 1061/754/928\\nf 1066/759/933 1064/757/931 1062/755/929\\nf 1067/760/934 1066/759/933 1062/755/929\\nf 1060/753/927 1059/752/926 1068/761/935\\nf 1068/761/935 1063/756/930 1060/753/927\\nf 1069/762/936 1062/755/929 1063/756/930\\nf 1062/755/929 1069/762/936 1067/760/934\\nf 1069/762/936 1070/763/937 1067/760/934\\nf 1071/764/938 1067/760/934 1070/763/937\\nf 1071/764/938 1072/765/939 1067/760/934\\nf 1066/759/933 1067/760/934 1072/765/939\\nf 1075/766/940 1077/767/941 1078/768/942\\nf 1078/768/942 1079/769/943 1075/766/940\\nf 1080/770/944 1078/768/942 1077/767/941\\nf 1078/768/942 1080/770/944 1081/771/945\\nf 1064/757/931 1066/759/933 1082/772/946\\nf 1073/773/947 1082/772/946 1066/759/933\\nf 1082/772/946 1073/773/947 1083/774/948\\nf 1074/775/949 1083/774/948 1073/773/947\\nf 1083/774/948 1074/775/949 1065/758/932\\nf 1075/766/940 1065/758/932 1074/775/949\\nf 1065/758/932 1075/766/940 1079/769/943\\nf 1081/771/945 1079/769/943 1078/768/942\\nf 1079/769/943 1081/771/945 1065/758/932\\nf 1082/772/946 1065/758/932 1064/757/931\\nf 1065/758/932 1082/772/946 1083/774/948\\nf 1081/771/945 1084/776/950 1048/741/915\\nf 1050/743/917 1081/771/945 1048/741/915\\nf 1048/741/915 1047/740/914 1050/743/917\\nf 1065/758/932 1081/771/945 1050/743/917\\nf 1050/743/917 1061/754/928 1065/758/932\\nf 1048/741/915 1085/777/951 1046/738/912\\nf 1085/777/951 1048/741/915 1086/778/952\\nf 1080/770/944 1087/779/953 1081/771/945\\nf 1084/776/950 1081/771/945 1087/779/953\\nf 1088/780/954 1084/776/950 1087/779/953\\nf 1087/779/953 1089/781/955 1088/780/954\\nf 1088/780/954 1048/741/915 1084/776/950\\nf 1048/741/915 1088/780/954 1090/782/956\\nf 1090/782/956 1086/778/952 1048/741/915\\nf 1086/778/952 1090/782/956 1091/783/957\\nf 1091/783/957 1085/777/951 1086/778/952\\nf 1085/777/951 1091/783/957 1044/739/913\\nf 1044/739/913 1046/738/912 1085/777/951\\nf 1045/784/958 1044/739/913 1091/783/957\\nf 1091/783/957 1092/785/959 1045/784/958\\nf 1092/785/959 1091/783/957 1090/782/956\\nf 1092/785/959 1090/782/956 1088/780/954\\nf 1087/779/953 1080/770/944 1089/781/955\\nf 1093/786/960 1094/787/961 1095/788/962\\nf 1094/787/961 1096/789/963 1097/790/964\\nf 1097/790/964 1095/788/962 1094/787/961\\nf 1098/791/965 1099/792/966 1100/793/967\\nf 1101/794/968 1099/792/966 1102/795/969\\nf 1098/791/965 1103/796/970 1104/797/971\\nf 1104/797/971 1105/798/972 1098/791/965\\nf 1106/799/973 1104/797/971 1103/796/970\\nf 1103/796/970 1107/800/974 1106/799/973\\nf 1094/787/961 1108/801/975 1109/802/976\\nf 1109/802/976 1096/789/963 1094/787/961\\nf 1110/803/977 1111/804/978 1112/805/979\\nf 1112/805/979 1113/806/980 1110/803/977\\nf 1114/807/981 1115/808/982 1116/809/983\\nf 1116/809/983 1117/810/984 1114/807/981\\nf 1114/807/981 1117/810/984 1118/811/985\\nf 1118/811/985 1093/786/960 1114/807/981\\nf 1093/786/960 1118/811/985 1108/801/975\\nf 1108/801/975 1094/787/961 1093/786/960\\nf 1107/800/974 1103/796/970 1109/802/976\\nf 1109/802/976 1119/812/986 1107/800/974\\nf 1122/813/987 1112/805/979 1111/804/978\\nf 1123/814/988 1115/808/982 1114/807/981\\nf 1124/815/989 1121/816/990 1120/817/991\\nf 1127/818/992 1124/815/989 1126/819/993\\nf 1126/819/993 1128/820/994 1127/818/992\\nf 1124/815/989 1127/818/992 1129/821/995\\nf 1129/821/995 1121/816/990 1124/815/989\\nf 1063/756/930 1127/818/992 1128/820/994\\nf 1128/820/994 1069/762/936 1063/756/930\\nf 1130/822/996 1128/820/994 1126/819/993\\nf 1125/823/997 1130/822/996 1126/819/993\\nf 1131/824/998 1130/822/996 1125/823/997\\nf 1131/824/998 1132/825/999 1130/822/996\\nf 1133/826/1000 1130/822/996 1132/825/999\\nf 1132/825/999 1134/827/1001 1133/826/1000\\nf 1130/822/996 1069/762/936 1128/820/994\\nf 1070/763/937 1069/762/936 1130/822/996\\nf 1130/822/996 1133/826/1000 1070/763/937\\nf 1135/828/1002 1070/763/937 1133/826/1000\\nf 1135/828/1002 1136/829/1003 1070/763/937\\nf 1137/830/1004 1070/763/937 1136/829/1003\\nf 1138/831/1005 1133/826/1000 1139/832/1006\\nf 1133/826/1000 1134/827/1001 1139/832/1006\\nf 1139/832/1006 1134/827/1001 1140/833/1007\\nf 1140/833/1007 1134/827/1001 1132/825/999\\nf 1141/834/1008 1142/835/1009 1132/825/999\\nf 1132/825/999 1131/824/998 1141/834/1008\\nf 1143/836/1010 1142/835/1009 1141/834/1008\\nf 1106/799/973 1107/800/974 1144/837/1011\\nf 1144/837/1011 1145/838/1012 1106/799/973\\nf 1146/839/1013 1145/838/1012 1144/837/1011\\nf 1144/837/1011 1147/840/1014 1146/839/1013\\nf 1148/841/1015 1149/842/1016 1150/843/1017\\nf 1150/843/1017 1151/844/1018 1148/841/1015\\nf 1149/842/1016 1148/841/1015 1152/845/1019\\nf 1152/845/1019 1153/846/1020 1149/842/1016\\nf 1153/846/1020 1152/845/1019 1154/847/1021\\nf 1154/847/1021 1054/747/921 1153/846/1020\\nf 1054/747/921 1029/723/897 1031/725/899\\nf 1031/725/899 1153/846/1020 1054/747/921\\nf 1153/846/1020 1031/725/899 1155/848/1022\\nf 1155/848/1022 1149/842/1016 1153/846/1020\\nf 1156/849/1023 1147/840/1014 1150/843/1017\\nf 1150/843/1017 1157/850/1024 1156/849/1023\\nf 1147/840/1014 1156/849/1023 1158/851/1025\\nf 1158/851/1025 1146/839/1013 1147/840/1014\\nf 1031/725/899 1030/724/898 1159/852/1026\\nf 1159/852/1026 1155/848/1022 1031/725/899\\nf 1160/853/1027 1156/849/1023 1157/850/1024\\nf 1157/850/1024 1161/854/1028 1160/853/1027\\nf 1160/853/1027 1164/855/1029 1165/856/1030\\nf 1165/856/1030 1163/857/1031 1160/853/1027\\nf 1159/852/1026 1166/858/1032 1167/859/1033\\nf 1167/859/1033 1161/854/1028 1159/852/1026\\nf 1159/852/1026 1030/724/898 1034/728/902\\nf 1034/728/902 1166/858/1032 1159/852/1026\\nf 1168/860/1034 1148/841/1015 1151/844/1018\\nf 1151/844/1018 1119/812/986 1168/860/1034\\nf 1148/841/1015 1168/860/1034 1169/861/1035\\nf 1169/861/1035 1152/845/1019 1148/841/1015\\nf 1152/845/1019 1169/861/1035 1170/862/1036\\nf 1170/862/1036 1154/847/1021 1152/845/1019\\nf 1057/750/924 1056/749/923 1171/863/1037\\nf 1171/863/1037 1172/864/1038 1057/750/924\\nf 1058/751/925 1057/750/924 1172/864/1038\\nf 1172/864/1038 1173/865/1039 1058/751/925\\nf 1168/860/1034 1108/801/975 1118/811/985\\nf 1118/811/985 1169/861/1035 1168/860/1034\\nf 1169/861/1035 1118/811/985 1117/810/984\\nf 1117/810/984 1170/862/1036 1169/861/1035\\nf 1172/864/1038 1171/863/1037 1116/809/983\\nf 1116/809/983 1110/803/977 1172/864/1038\\nf 1113/806/980 1129/821/995 1068/761/935\\nf 1068/761/935 1173/865/1039 1113/806/980\\nf 1068/761/935 1129/821/995 1127/818/992\\nf 1127/818/992 1063/756/930 1068/761/935\\nf 1034/728/902 1030/724/898 1028/722/896\\nf 1175/866/1040 1165/856/1030 1164/855/1029\\nf 1164/855/1029 1176/867/1041 1175/866/1040\\nf 1167/859/1033 1166/858/1032 1177/868/1042\\nf 1166/858/1032 1034/728/902 1033/727/901\\nf 1033/727/901 1177/868/1042 1166/858/1032\\nf 1017/711/885 1052/745/919 1051/744/918\\nf 1051/744/918 1021/715/889 1017/711/885\\nf 1051/744/918 1052/745/919 1058/751/925\\nf 1058/751/925 1059/752/926 1051/744/918\\nf 1113/806/980 1112/805/979 1121/816/990\\nf 1121/816/990 1129/821/995 1113/806/980\\nf 1059/752/926 1058/751/925 1173/865/1039\\nf 1173/865/1039 1068/761/935 1059/752/926\\nf 1110/803/977 1113/806/980 1173/865/1039\\nf 1173/865/1039 1172/864/1038 1110/803/977\\nf 1015/709/883 1022/716/890 1038/732/906\\nf 1023/717/891 1018/712/886 1015/709/883\\nf 1015/709/883 1038/732/906 1023/717/891\\nf 1096/789/963 1098/791/965 1100/793/967\\nf 1100/793/967 1097/790/964 1096/789/963\\nf 1109/802/976 1103/796/970 1098/791/965\\nf 1098/791/965 1096/789/963 1109/802/976\\nf 1108/801/975 1168/860/1034 1119/812/986\\nf 1119/812/986 1109/802/976 1108/801/975\\nf 1147/840/1014 1144/837/1011 1151/844/1018\\nf 1151/844/1018 1150/843/1017 1147/840/1014\\nf 1149/842/1016 1155/848/1022 1157/850/1024\\nf 1157/850/1024 1150/843/1017 1149/842/1016\\nf 1155/848/1022 1159/852/1026 1161/854/1028\\nf 1161/854/1028 1157/850/1024 1155/848/1022\\nf 1164/855/1029 1160/853/1027 1161/854/1028\\nf 1161/854/1028 1167/859/1033 1164/855/1029\\nf 1144/837/1011 1107/800/974 1119/812/986\\nf 1119/812/986 1151/844/1018 1144/837/1011\\nf 1026/720/894 1016/710/884 1025/719/893\\nf 1025/719/893 1027/721/895 1026/720/894\\nf 1032/726/900 1028/722/896 1027/721/895\\nf 1053/746/920 1016/710/884 1026/720/894\\nf 1026/720/894 1055/748/922 1053/746/920\\nf 1055/748/922 1054/747/921 1154/847/1021\\nf 1154/847/1021 1056/749/923 1055/748/922\\nf 1115/808/982 1111/804/978 1110/803/977\\nf 1110/803/977 1116/809/983 1115/808/982\\nf 1056/749/923 1154/847/1021 1170/862/1036\\nf 1170/862/1036 1171/863/1037 1056/749/923\\nf 1171/863/1037 1170/862/1036 1117/810/984\\nf 1117/810/984 1116/809/983 1171/863/1037\\nf 1095/788/962 1097/790/964 1178/869/1043\\nf 1100/793/967 1099/792/966 1101/794/968\\nf 1105/798/972 1102/795/969 1099/792/966\\nf 1099/792/966 1098/791/965 1105/798/972\\nf 1163/857/1031 1165/856/1030 1179/870/1044\\nf 1179/870/1044 1165/856/1030 1175/866/1040\\nf 1158/851/1025 1162/871/1045 1146/839/1013\\nf 1181/872/1046 1186/873/1047 1185/874/1048\\nf 1186/873/1047 1182/875/1049 1185/874/1048\\nf 1187/876/1050 1182/875/1049 1186/873/1047\\nf 1186/873/1047 1188/877/1051 1187/876/1050\\nf 1189/878/1052 1190/879/1053 1191/880/1054\\nf 1191/880/1054 1192/881/1055 1189/878/1052\\nf 1190/879/1053 1193/882/1056 1194/883/1057\\nf 1194/883/1057 1191/880/1054 1190/879/1053\\nf 1194/883/1057 1193/882/1056 1195/884/1058\\nf 1195/884/1058 1184/885/1059 1194/883/1057\\nf 1194/883/1057 1184/885/1059 1183/886/1060\\nf 1183/886/1060 1196/887/1061 1194/883/1057\\nf 1197/888/1062 1183/886/1060 1182/875/1049\\nf 1182/875/1049 1187/876/1050 1197/888/1062\\nf 1197/888/1062 1187/876/1050 1198/889/1063\\nf 1198/889/1063 1199/890/1064 1197/888/1062\\nf 1191/880/1054 1194/883/1057 1196/887/1061\\nf 1196/887/1061 1200/891/1065 1191/880/1054\\nf 1196/887/1061 1183/886/1060 1197/888/1062\\nf 1197/888/1062 1201/892/1066 1196/887/1061\\nf 1201/892/1066 1197/888/1062 1199/890/1064\\nf 1199/890/1064 1202/893/1067 1201/892/1066\\nf 1200/891/1065 1196/887/1061 1201/892/1066\\nf 1201/892/1066 1203/894/1068 1200/891/1065\\nf 1203/894/1068 1201/892/1066 1202/893/1067\\nf 1202/893/1067 1204/895/1069 1203/894/1068\\nf 1203/894/1068 1205/896/1070 1206/897/1071\\nf 1206/897/1071 1200/891/1065 1203/894/1068\\nf 1205/896/1070 1203/894/1068 1204/895/1069\\nf 1204/895/1069 1207/898/1072 1205/896/1070\\nf 1209/899/1073 1208/900/1074 1210/901/1075\\nf 1212/902/1076 1213/903/1077 1214/904/1078\\nf 1214/904/1078 1215/905/1079 1212/902/1076\\nf 1212/902/1076 1216/906/1080 1217/907/1081\\nf 1217/907/1081 1213/903/1077 1212/902/1076\\nf 1216/906/1080 1218/908/1082 1219/909/1083\\nf 1219/909/1083 1217/907/1081 1216/906/1080\\nf 1218/908/1082 1220/910/1084 1221/911/1085\\nf 1221/911/1085 1219/909/1083 1218/908/1082\\nf 1222/912/1086 1223/913/1087 1205/896/1070\\nf 1205/896/1070 1207/898/1072 1222/912/1086\\nf 1207/898/1072 1224/914/1088 1222/912/1086\\nf 1217/907/1081 1219/909/1083 1227/915/1089\\nf 1227/915/1089 1226/916/1090 1217/907/1081\\nf 1219/909/1083 1221/911/1085 1228/917/1091\\nf 1228/917/1091 1227/915/1089 1219/909/1083\\nf 1229/918/1092 1230/919/1093 1226/916/1090\\nf 1226/916/1090 1227/915/1089 1229/918/1092\\nf 1226/916/1090 1230/919/1093 1231/920/1094\\nf 1231/920/1094 1233/921/1095 1232/922/1096\\nf 1236/923/1097 1237/924/1098 1238/925/1099\\nf 1238/925/1099 1239/926/1100 1236/923/1097\\nf 1240/927/1101 1241/928/1102 1242/929/1103\\nf 1242/929/1103 1243/930/1104 1240/927/1101\\nf 1243/930/1104 1242/929/1103 1244/931/1105\\nf 1244/931/1105 1245/932/1106 1243/930/1104\\nf 1239/926/1100 1238/925/1099 1246/933/1107\\nf 1246/933/1107 1247/934/1108 1239/926/1100\\nf 1248/935/1109 1249/936/1110 1250/937/1111\\nf 1250/937/1111 1251/938/1112 1248/935/1109\\nf 1252/939/1113 1253/940/1114 1254/941/1115\\nf 1254/941/1115 1255/942/1116 1252/939/1113\\nf 1252/939/1113 1249/936/1110 1256/943/1117\\nf 1256/943/1117 1257/944/1118 1252/939/1113\\nf 1258/945/1119 1259/946/1120 1260/947/1121\\nf 1260/947/1121 1261/948/1122 1258/945/1119\\nf 1248/935/1109 1238/925/1099 1237/924/1098\\nf 1237/924/1098 1262/949/1123 1248/935/1109\\nf 1260/947/1121 1263/950/1124 1264/951/1125\\nf 1264/951/1125 1261/948/1122 1260/947/1121\\nf 1265/952/1126 1255/942/1116 1254/941/1115\\nf 1254/941/1115 1266/953/1127 1265/952/1126\\nf 1251/938/1112 1267/954/1128 1268/955/1129\\nf 1268/955/1129 1246/933/1107 1251/938/1112\\nf 1269/956/1130 1270/957/1131 1244/931/1105\\nf 1244/931/1105 1247/934/1108 1269/956/1130\\nf 1245/932/1106 1244/931/1105 1270/957/1131\\nf 1270/957/1131 1271/958/1132 1245/932/1106\\nf 1264/951/1125 1263/950/1124 1272/959/1133\\nf 1272/959/1133 1273/960/1134 1264/951/1125\\nf 1276/961/1135 1273/960/1134 1272/959/1133\\nf 1277/962/1136 1272/959/1133 1263/950/1124\\nf 1263/950/1124 1259/946/1120 1277/962/1136\\nf 1259/946/1120 1263/950/1124 1260/947/1121\\nf 1195/884/1058 1193/882/1056 1278/963/1137\\nf 1278/963/1137 1279/964/1138 1195/884/1058\\nf 1280/965/1139 1184/885/1059 1195/884/1058\\nf 1195/884/1058 1281/966/1140 1280/965/1139\\nf 1284/967/1141 1269/956/1130 1268/955/1129\\nf 1193/882/1056 1190/879/1053 1285/968/1142\\nf 1285/968/1142 1278/963/1137 1193/882/1056\\nf 1190/879/1053 1189/878/1052 1286/969/1143\\nf 1286/969/1143 1285/968/1142 1190/879/1053\\nf 1189/878/1052 1287/970/1144 1288/971/1145\\nf 1288/971/1145 1286/969/1143 1189/878/1052\\nf 1287/970/1144 1289/972/1146 1290/973/1147\\nf 1290/973/1147 1288/971/1145 1287/970/1144\\nf 1291/974/1148 1292/975/1149 1293/976/1150\\nf 1293/976/1150 1294/977/1151 1291/974/1148\\nf 1292/975/1149 1295/978/1152 1296/979/1153\\nf 1296/979/1153 1293/976/1150 1292/975/1149\\nf 1295/978/1152 1289/972/1146 1297/980/1154\\nf 1297/980/1154 1296/979/1153 1295/978/1152\\nf 1289/972/1146 1287/970/1144 1298/981/1155\\nf 1298/981/1155 1297/980/1154 1289/972/1146\\nf 1287/970/1144 1189/878/1052 1192/881/1055\\nf 1192/881/1055 1298/981/1155 1287/970/1144\\nf 1293/976/1150 1296/979/1153 1299/982/1156\\nf 1299/982/1156 1300/983/1157 1293/976/1150\\nf 1296/979/1153 1297/980/1154 1301/984/1158\\nf 1301/984/1158 1299/982/1156 1296/979/1153\\nf 1297/980/1154 1298/981/1155 1302/985/1159\\nf 1302/985/1159 1301/984/1158 1297/980/1154\\nf 1298/981/1155 1192/881/1055 1206/897/1071\\nf 1206/897/1071 1302/985/1159 1298/981/1155\\nf 1192/881/1055 1191/880/1054 1200/891/1065\\nf 1200/891/1065 1206/897/1071 1192/881/1055\\nf 1212/902/1076 1215/905/1079 1303/986/1160\\nf 1303/986/1160 1300/983/1157 1212/902/1076\\nf 1300/983/1157 1299/982/1156 1216/906/1080\\nf 1216/906/1080 1212/902/1076 1300/983/1157\\nf 1299/982/1156 1301/984/1158 1218/908/1082\\nf 1218/908/1082 1216/906/1080 1299/982/1156\\nf 1301/984/1158 1302/985/1159 1220/910/1084\\nf 1220/910/1084 1218/908/1082 1301/984/1158\\nf 1302/985/1159 1206/897/1071 1205/896/1070\\nf 1205/896/1070 1223/913/1087 1302/985/1159\\nf 1304/987/1161 1305/988/1162 1306/989/1163\\nf 1307/990/1164 1308/991/1165 1306/989/1163\\nf 1308/991/1165 1307/990/1164 1309/992/1166\\nf 1309/992/1166 1310/993/1167 1308/991/1165\\nf 1310/993/1167 1309/992/1166 1311/994/1168\\nf 1311/994/1168 1312/995/1169 1310/993/1167\\nf 1311/994/1168 1215/905/1079 1214/904/1078\\nf 1214/904/1078 1312/995/1169 1311/994/1168\\nf 1304/987/1161 1308/991/1165 1145/838/1012\\nf 1145/838/1012 1146/839/1013 1304/987/1161\\nf 1145/838/1012 1308/991/1165 1310/993/1167\\nf 1310/993/1167 1106/799/973 1145/838/1012\\nf 1106/799/973 1310/993/1167 1312/995/1169\\nf 1312/995/1169 1104/797/971 1106/799/973\\nf 1105/798/972 1104/797/971 1312/995/1169\\nf 1312/995/1169 1214/904/1078 1105/798/972\\nf 1213/903/1077 1105/798/972 1214/904/1078\\nf 1235/996/1170 1105/798/972 1213/903/1077\\nf 1146/839/1013 1162/871/1045 1305/988/1162\\nf 1305/988/1162 1304/987/1161 1146/839/1013\\nf 1313/997/1171 1314/998/1172 1315/999/1173\\nf 1315/999/1173 1316/1000/1174 1313/997/1171\\nf 1316/1000/1174 1315/999/1173 1317/1001/1175\\nf 1318/1002/1176 1305/988/1162 1162/871/1045\\nf 1320/1003/1177 1315/999/1173 1314/998/1172\\nf 1314/998/1172 1321/1004/1178 1320/1003/1177\\nf 1322/1005/1179 1323/1006/1180 244/206/238\\nf 244/206/238 243/205/237 1322/1005/1179\\nf 1322/1005/1179 1324/1007/1181 1325/1008/1182\\nf 1325/1008/1182 1321/1004/1178 1322/1005/1179\\nf 1324/1007/1181 1326/1009/1183 1327/1010/1184\\nf 1327/1010/1184 1325/1008/1182 1324/1007/1181\\nf 1325/1008/1182 1327/1010/1184 1307/990/1164\\nf 1307/990/1164 1328/1011/1185 1325/1008/1182\\nf 1321/1004/1178 1325/1008/1182 1328/1011/1185\\nf 1328/1011/1185 1320/1003/1177 1321/1004/1178\\nf 1329/1012/1186 1326/1009/1183 250/212/244\\nf 250/212/244 252/214/246 1329/1012/1186\\nf 1327/1010/1184 1330/1013/1187 1331/1014/1188\\nf 1331/1014/1188 1307/990/1164 1327/1010/1184\\nf 1331/1014/1188 1332/1015/1189 1309/992/1166\\nf 1309/992/1166 1307/990/1164 1331/1014/1188\\nf 1309/992/1166 1332/1015/1189 1333/1016/1190\\nf 1333/1016/1190 1311/994/1168 1309/992/1166\\nf 1333/1016/1190 1303/986/1160 1215/905/1079\\nf 1215/905/1079 1311/994/1168 1333/1016/1190\\nf 1334/1017/1191 1335/1018/1192 1331/1014/1188\\nf 1331/1014/1188 1330/1013/1187 1334/1017/1191\\nf 1335/1018/1192 1336/1019/1193 1332/1015/1189\\nf 1332/1015/1189 1331/1014/1188 1335/1018/1192\\nf 1332/1015/1189 1336/1019/1193 1337/1020/1194\\nf 1337/1020/1194 1333/1016/1190 1332/1015/1189\\nf 1333/1016/1190 1337/1020/1194 1294/977/1151\\nf 1294/977/1151 1303/986/1160 1333/1016/1190\\nf 1294/977/1151 1293/976/1150 1300/983/1157\\nf 1300/983/1157 1303/986/1160 1294/977/1151\\nf 1338/1021/1195 1339/1022/1196 1340/1023/1197\\nf 1340/1023/1197 1341/1024/1198 1338/1021/1195\\nf 1338/1021/1195 1342/1025/1199 1334/1017/1191\\nf 1334/1017/1191 1343/1026/1200 1338/1021/1195\\nf 1342/1025/1199 1344/1027/1201 1335/1018/1192\\nf 1335/1018/1192 1334/1017/1191 1342/1025/1199\\nf 1345/1028/1202 1335/1018/1192 1344/1027/1201\\nf 1335/1018/1192 1345/1028/1202 1336/1019/1193\\nf 1345/1028/1202 1346/1029/1203 1337/1020/1194\\nf 1337/1020/1194 1336/1019/1193 1345/1028/1202\\nf 1346/1029/1203 1291/974/1148 1294/977/1151\\nf 1294/977/1151 1337/1020/1194 1346/1029/1203\\nf 1347/1030/1204 1348/1031/1205 1346/1029/1203\\nf 1346/1029/1203 1345/1028/1202 1347/1030/1204\\nf 1345/1028/1202 1344/1027/1201 1349/1032/1206\\nf 1349/1032/1206 1347/1030/1204 1345/1028/1202\\nf 1344/1027/1201 1342/1025/1199 1350/1033/1207\\nf 1350/1033/1207 1349/1032/1206 1344/1027/1201\\nf 1289/972/1146 1295/978/1152 1351/1034/1208\\nf 1351/1034/1208 1290/973/1147 1289/972/1146\\nf 1295/978/1152 1292/975/1149 1352/1035/1209\\nf 1352/1035/1209 1351/1034/1208 1295/978/1152\\nf 1292/975/1149 1291/974/1148 1353/1036/1210\\nf 1353/1036/1210 1352/1035/1209 1292/975/1149\\nf 1291/974/1148 1346/1029/1203 1348/1031/1205\\nf 1348/1031/1205 1353/1036/1210 1291/974/1148\\nf 1186/873/1047 1181/872/1046 1354/1037/1211\\nf 1188/877/1051 1186/873/1047 1354/1037/1211\\nf 1198/889/1063 1187/876/1050 1188/877/1051\\nf 1188/877/1051 1355/1038/1212 1198/889/1063\\nf 1354/1037/1211 1356/1039/1213 1188/877/1051\\nf 1340/1023/1197 320/281/313 319/280/312\\nf 320/281/313 1340/1023/1197 1339/1022/1196\\nf 1339/1022/1196 322/283/315 320/281/313\\nf 322/283/315 1339/1022/1196 1357/1040/1214\\nf 1357/1040/1214 265/227/259 322/283/315\\nf 1343/1026/1200 1334/1017/1191 1330/1013/1187\\nf 1330/1013/1187 1329/1012/1186 1343/1026/1200\\nf 265/227/259 1357/1040/1214 252/214/246\\nf 1281/966/1140 1195/884/1058 1279/964/1138\\nf 1279/964/1138 1358/1041/1215 1281/966/1140\\nf 1241/928/1102 1236/923/1097 1239/926/1100\\nf 1239/926/1100 1242/929/1103 1241/928/1102\\nf 1242/929/1103 1239/926/1100 1247/934/1108\\nf 1247/934/1108 1244/931/1105 1242/929/1103\\nf 1269/956/1130 1247/934/1108 1246/933/1107\\nf 1246/933/1107 1268/955/1129 1269/956/1130\\nf 1358/1041/1215 1240/927/1101 1243/930/1104\\nf 1243/930/1104 1281/966/1140 1358/1041/1215\\nf 1281/966/1140 1243/930/1104 1245/932/1106\\nf 1245/932/1106 1280/965/1139 1281/966/1140\\nf 1280/965/1139 1245/932/1106 1271/958/1132\\nf 1271/958/1132 1282/1042/1216 1280/965/1139\\nf 1238/925/1099 1248/935/1109 1251/938/1112\\nf 1251/938/1112 1246/933/1107 1238/925/1099\\nf 1249/936/1110 1248/935/1109 1262/949/1123\\nf 1262/949/1123 1256/943/1117 1249/936/1110\\nf 1267/954/1128 1251/938/1112 1250/937/1111\\nf 1250/937/1111 1274/1043/1217 1267/954/1128\\nf 1249/936/1110 1252/939/1113 1255/942/1116\\nf 1255/942/1116 1250/937/1111 1249/936/1110\\nf 1253/940/1114 1252/939/1113 1257/944/1118\\nf 1257/944/1118 1362/1044/1218 1253/940/1114\\nf 1255/942/1116 1265/952/1126 1274/1043/1217\\nf 1274/1043/1217 1250/937/1111 1255/942/1116\\nf 1362/1044/1218 1258/945/1119 1261/948/1122\\nf 1261/948/1122 1253/940/1114 1362/1044/1218\\nf 1253/940/1114 1261/948/1122 1264/951/1125\\nf 1264/951/1125 1254/941/1115 1253/940/1114\\nf 1264/951/1125 1273/960/1134 1266/953/1127\\nf 1266/953/1127 1254/941/1115 1264/951/1125\\nf 1273/960/1134 1276/961/1135 1275/1045/1219\\nf 1275/1045/1219 1266/953/1127 1273/960/1134\\nf 1364/1046/1220 1365/1047/1221 1366/1048/1222\\nf 1365/1047/1221 1363/1049/1223 1366/1048/1222\\nf 1367/1050/1224 1368/1051/1225 1363/1049/1223\\nf 1363/1049/1223 1369/1052/1226 1367/1050/1224\\nf 1363/1049/1223 1368/1051/1225 1370/1053/1227\\nf 1370/1053/1227 1366/1048/1222 1363/1049/1223\\nf 1366/1048/1222 1370/1053/1227 1371/1054/1228\\nf 1371/1054/1228 1370/1053/1227 1368/1051/1225\\nf 1372/1055/1229 1373/1056/1230 1371/1054/1228\\nf 1371/1054/1228 1368/1051/1225 1372/1055/1229\\nf 1374/1057/1231 1375/1058/1232 1376/1059/1233\\nf 1376/1059/1233 1377/1060/1234 1374/1057/1231\\nf 1378/1061/1235 1379/1062/1236 1375/1058/1232\\nf 1375/1058/1232 1374/1057/1231 1378/1061/1235\\nf 1380/1063/1237 1379/1062/1236 1378/1061/1235\\nf 1378/1061/1235 1369/1052/1226 1380/1063/1237\\nf 1378/1061/1235 1381/1064/1238 1367/1050/1224\\nf 1367/1050/1224 1369/1052/1226 1378/1061/1235\\nf 1372/1055/1229 1368/1051/1225 1367/1050/1224\\nf 1367/1050/1224 1382/1065/1239 1372/1055/1229\\nf 1383/1066/1240 1372/1055/1229 1382/1065/1239\\nf 1382/1065/1239 1384/1067/1241 1383/1066/1240\\nf 1374/1057/1231 1385/1068/1242 1381/1064/1238\\nf 1381/1064/1238 1378/1061/1235 1374/1057/1231\\nf 1382/1065/1239 1367/1050/1224 1381/1064/1238\\nf 1381/1064/1238 1386/1069/1243 1382/1065/1239\\nf 1384/1067/1241 1382/1065/1239 1386/1069/1243\\nf 1386/1069/1243 1387/1070/1244 1384/1067/1241\\nf 1386/1069/1243 1381/1064/1238 1385/1068/1242\\nf 1385/1068/1242 1388/1071/1245 1386/1069/1243\\nf 1387/1070/1244 1386/1069/1243 1388/1071/1245\\nf 1388/1071/1245 1389/1072/1246 1387/1070/1244\\nf 1390/1073/1247 1391/1074/1248 1388/1071/1245\\nf 1388/1071/1245 1385/1068/1242 1390/1073/1247\\nf 1389/1072/1246 1388/1071/1245 1391/1074/1248\\nf 1391/1074/1248 1392/1075/1249 1389/1072/1246\\nf 1395/1076/1250 1394/1077/1251 1393/1078/1252\\nf 1397/1079/1253 1398/1080/1254 1396/1081/1255\\nf 1399/1082/1256 1400/1083/1257 1401/1084/1258\\nf 1401/1084/1258 1402/1085/1259 1399/1082/1256\\nf 1403/1086/1260 1404/1087/1261 1399/1082/1256\\nf 1399/1082/1256 1402/1085/1259 1403/1086/1260\\nf 1405/1088/1262 1406/1089/1263 1404/1087/1261\\nf 1404/1087/1261 1403/1086/1260 1405/1088/1262\\nf 1407/1090/1264 1408/1091/1265 1406/1089/1263\\nf 1406/1089/1263 1405/1088/1262 1407/1090/1264\\nf 1407/1090/1264 1409/1092/1266 1410/1093/1267\\nf 1410/1093/1267 1408/1091/1265 1407/1090/1264\\nf 1414/1094/1268 1405/1088/1262 1403/1086/1260\\nf 1403/1086/1260 1413/1095/1269 1414/1094/1268\\nf 1415/1096/1270 1407/1090/1264 1405/1088/1262\\nf 1405/1088/1262 1414/1094/1268 1415/1096/1270\\nf 1416/1097/1271 1415/1096/1270 1414/1094/1268\\nf 1236/923/1097 1420/1098/1272 1421/1099/1273\\nf 1421/1099/1273 1237/924/1098 1236/923/1097\\nf 1240/927/1101 1422/1100/1274 1423/1101/1275\\nf 1423/1101/1275 1241/928/1102 1240/927/1101\\nf 1422/1100/1274 1424/1102/1276 1425/1103/1277\\nf 1425/1103/1277 1423/1101/1275 1422/1100/1274\\nf 1426/1104/1278 1421/1099/1273 1420/1098/1272\\nf 1420/1098/1272 1427/1105/1279 1426/1104/1278\\nf 1428/1106/1280 1429/1107/1281 1430/1108/1282\\nf 1430/1108/1282 1431/1109/1283 1428/1106/1280\\nf 1432/1110/1284 1433/1111/1285 1434/1112/1286\\nf 1434/1112/1286 1435/1113/1287 1432/1110/1284\\nf 1432/1110/1284 1257/944/1118 1256/943/1117\\nf 1256/943/1117 1431/1109/1283 1432/1110/1284\\nf 1258/945/1119 1436/1114/1288 1437/1115/1289\\nf 1437/1115/1289 1259/946/1120 1258/945/1119\\nf 1428/1106/1280 1262/949/1123 1237/924/1098\\nf 1237/924/1098 1421/1099/1273 1428/1106/1280\\nf 1438/1116/1290 1439/1117/1291 1437/1115/1289\\nf 1437/1115/1289 1436/1114/1288 1438/1116/1290\\nf 1440/1118/1292 1441/1119/1293 1434/1112/1286\\nf 1434/1112/1286 1433/1111/1285 1440/1118/1292\\nf 1429/1107/1281 1426/1104/1278 1442/1120/1294\\nf 1442/1120/1294 1443/1121/1295 1429/1107/1281\\nf 1444/1122/1296 1427/1105/1279 1425/1103/1277\\nf 1425/1103/1277 1445/1123/1297 1444/1122/1296\\nf 1424/1102/1276 1446/1124/1298 1445/1123/1297\\nf 1445/1123/1297 1425/1103/1277 1424/1102/1276\\nf 1447/1125/1299 1439/1117/1291 1438/1116/1290\\nf 1438/1116/1290 1448/1126/1300 1447/1125/1299\\nf 1449/1127/1301 1450/1128/1302 1451/1129/1303\\nf 1451/1129/1303 1443/1121/1295 1449/1127/1301\\nf 1441/1119/1293 1440/1118/1292 1452/1130/1304\\nf 1259/946/1120 1437/1115/1289 1439/1117/1291\\nf 1278/963/1137 1379/1062/1236 1380/1063/1237\\nf 1380/1063/1237 1279/964/1138 1278/963/1137\\nf 1454/1131/1305 1455/1132/1306 1380/1063/1237\\nf 1380/1063/1237 1369/1052/1226 1454/1131/1305\\nf 1454/1131/1305 1369/1052/1226 1363/1049/1223\\nf 1363/1049/1223 1456/1133/1307 1454/1131/1305\\nf 1457/1134/1308 1445/1123/1297 1446/1124/1298\\nf 1446/1124/1298 1458/1135/1309 1457/1134/1308\\nf 1285/968/1142 1375/1058/1232 1379/1062/1236\\nf 1379/1062/1236 1278/963/1137 1285/968/1142\\nf 1286/969/1143 1376/1059/1233 1375/1058/1232\\nf 1375/1058/1232 1285/968/1142 1286/969/1143\\nf 1288/971/1145 1460/1136/1310 1376/1059/1233\\nf 1376/1059/1233 1286/969/1143 1288/971/1145\\nf 1290/973/1147 1461/1137/1311 1460/1136/1310\\nf 1460/1136/1310 1288/971/1145 1290/973/1147\\nf 1462/1138/1312 1463/1139/1313 1464/1140/1314\\nf 1464/1140/1314 1465/1141/1315 1462/1138/1312\\nf 1466/1142/1316 1467/1143/1317 1463/1139/1313\\nf 1463/1139/1313 1462/1138/1312 1466/1142/1316\\nf 1468/1144/1318 1461/1137/1311 1467/1143/1317\\nf 1467/1143/1317 1466/1142/1316 1468/1144/1318\\nf 1469/1145/1319 1460/1136/1310 1461/1137/1311\\nf 1461/1137/1311 1468/1144/1318 1469/1145/1319\\nf 1377/1060/1234 1376/1059/1233 1460/1136/1310\\nf 1460/1136/1310 1469/1145/1319 1377/1060/1234\\nf 1470/1146/1320 1466/1142/1316 1462/1138/1312\\nf 1462/1138/1312 1471/1147/1321 1470/1146/1320\\nf 1472/1148/1322 1468/1144/1318 1466/1142/1316\\nf 1466/1142/1316 1470/1146/1320 1472/1148/1322\\nf 1473/1149/1323 1469/1145/1319 1468/1144/1318\\nf 1468/1144/1318 1472/1148/1322 1473/1149/1323\\nf 1390/1073/1247 1377/1060/1234 1469/1145/1319\\nf 1469/1145/1319 1473/1149/1323 1390/1073/1247\\nf 1385/1068/1242 1374/1057/1231 1377/1060/1234\\nf 1377/1060/1234 1390/1073/1247 1385/1068/1242\\nf 1474/1150/1324 1400/1083/1257 1399/1082/1256\\nf 1399/1082/1256 1471/1147/1321 1474/1150/1324\\nf 1404/1087/1261 1470/1146/1320 1471/1147/1321\\nf 1471/1147/1321 1399/1082/1256 1404/1087/1261\\nf 1406/1089/1263 1472/1148/1322 1470/1146/1320\\nf 1470/1146/1320 1404/1087/1261 1406/1089/1263\\nf 1408/1091/1265 1473/1149/1323 1472/1148/1322\\nf 1472/1148/1322 1406/1089/1263 1408/1091/1265\\nf 1473/1149/1323 1408/1091/1265 1410/1093/1267\\nf 1475/1151/1325 1476/1152/1326 1477/1153/1327\\nf 1478/1154/1328 1477/1153/1327 1479/1155/1329\\nf 1479/1155/1329 1480/1156/1330 1478/1154/1328\\nf 1480/1156/1330 1481/1157/1331 1482/1158/1332\\nf 1482/1158/1332 1478/1154/1328 1480/1156/1330\\nf 1401/1084/1258 1400/1083/1257 1482/1158/1332\\nf 1482/1158/1332 1481/1157/1331 1401/1084/1258\\nf 1483/1159/1333 1484/1160/1334 1485/1161/1335\\nf 1485/1161/1335 1479/1155/1329 1483/1159/1333\\nf 1485/1161/1335 1486/1162/1336 1480/1156/1330\\nf 1480/1156/1330 1479/1155/1329 1485/1161/1335\\nf 1486/1162/1336 1487/1163/1337 1481/1157/1331\\nf 1481/1157/1331 1480/1156/1330 1486/1162/1336\\nf 1418/1164/1338 1401/1084/1258 1481/1157/1331\\nf 1481/1157/1331 1487/1163/1337 1418/1164/1338\\nf 1402/1085/1259 1401/1084/1258 1418/1164/1338\\nf 1490/1165/1339 1491/1166/1340 1492/1167/1341\\nf 1492/1167/1341 1493/1168/1342 1490/1165/1339\\nf 1492/1167/1341 1494/1169/1343 1493/1168/1342\\nf 1495/1170/1344 1496/1171/1345 1489/1172/1346\\nf 1489/1172/1346 1488/1173/1347 1495/1170/1344\\nf 1497/1174/1348 476/434/466 479/437/469\\nf 479/437/469 1498/1175/1349 1497/1174/1348\\nf 1497/1174/1348 1496/1171/1345 1499/1176/1350\\nf 1499/1176/1350 1500/1177/1351 1497/1174/1348\\nf 1500/1177/1351 1499/1176/1350 1501/1178/1352\\nf 1501/1178/1352 1502/1179/1353 1500/1177/1351\\nf 1499/1176/1350 1475/1151/1325 1477/1153/1327\\nf 1477/1153/1327 1501/1178/1352 1499/1176/1350\\nf 1496/1171/1345 1495/1170/1344 1475/1151/1325\\nf 1475/1151/1325 1499/1176/1350 1496/1171/1345\\nf 1503/1180/1354 484/442/474 482/440/472\\nf 482/440/472 1502/1179/1353 1503/1180/1354\\nf 1501/1178/1352 1477/1153/1327 1504/1181/1355\\nf 1504/1181/1355 1505/1182/1356 1501/1178/1352\\nf 1478/1154/1328 1506/1183/1357 1504/1181/1355\\nf 1504/1181/1355 1477/1153/1327 1478/1154/1328\\nf 1478/1154/1328 1482/1158/1332 1507/1184/1358\\nf 1507/1184/1358 1506/1183/1357 1478/1154/1328\\nf 1400/1083/1257 1474/1150/1324 1507/1184/1358\\nf 1507/1184/1358 1482/1158/1332 1400/1083/1257\\nf 1504/1181/1355 1508/1185/1359 1509/1186/1360\\nf 1509/1186/1360 1505/1182/1356 1504/1181/1355\\nf 1506/1183/1357 1510/1187/1361 1508/1185/1359\\nf 1508/1185/1359 1504/1181/1355 1506/1183/1357\\nf 1506/1183/1357 1507/1184/1358 1511/1188/1362\\nf 1511/1188/1362 1510/1187/1361 1506/1183/1357\\nf 1507/1184/1358 1474/1150/1324 1465/1141/1315\\nf 1465/1141/1315 1511/1188/1362 1507/1184/1358\\nf 1471/1147/1321 1462/1138/1312 1465/1141/1315\\nf 1465/1141/1315 1474/1150/1324 1471/1147/1321\\nf 1512/1189/1363 1341/1024/1198 1340/1023/1197\\nf 1340/1023/1197 1513/1190/1364 1512/1189/1363\\nf 1512/1189/1363 1514/1191/1365 1509/1186/1360\\nf 1509/1186/1360 1515/1192/1366 1512/1189/1363\\nf 1508/1185/1359 1516/1193/1367 1515/1192/1366\\nf 1515/1192/1366 1509/1186/1360 1508/1185/1359\\nf 1517/1194/1368 1516/1193/1367 1508/1185/1359\\nf 1508/1185/1359 1510/1187/1361 1517/1194/1368\\nf 1510/1187/1361 1511/1188/1362 1518/1195/1369\\nf 1518/1195/1369 1517/1194/1368 1510/1187/1361\\nf 1465/1141/1315 1464/1140/1314 1518/1195/1369\\nf 1518/1195/1369 1511/1188/1362 1465/1141/1315\\nf 1518/1195/1369 1348/1031/1205 1347/1030/1204\\nf 1347/1030/1204 1517/1194/1368 1518/1195/1369\\nf 1349/1032/1206 1516/1193/1367 1517/1194/1368\\nf 1517/1194/1368 1347/1030/1204 1349/1032/1206\\nf 1350/1033/1207 1515/1192/1366 1516/1193/1367\\nf 1516/1193/1367 1349/1032/1206 1350/1033/1207\\nf 1351/1034/1208 1467/1143/1317 1461/1137/1311\\nf 1461/1137/1311 1290/973/1147 1351/1034/1208\\nf 1352/1035/1209 1463/1139/1313 1467/1143/1317\\nf 1467/1143/1317 1351/1034/1208 1352/1035/1209\\nf 1353/1036/1210 1464/1140/1314 1463/1139/1313\\nf 1463/1139/1313 1352/1035/1209 1353/1036/1210\\nf 1348/1031/1205 1518/1195/1369 1464/1140/1314\\nf 1464/1140/1314 1353/1036/1210 1348/1031/1205\\nf 1371/1054/1228 1519/1196/1370 1366/1048/1222\\nf 1373/1056/1230 1519/1196/1370 1371/1054/1228\\nf 1383/1066/1240 1520/1197/1371 1373/1056/1230\\nf 1373/1056/1230 1372/1055/1229 1383/1066/1240\\nf 1373/1056/1230 1520/1197/1371 1521/1198/1372\\nf 1366/1048/1222 1519/1196/1370 1522/1199/1373\\nf 1522/1199/1373 1364/1046/1220 1366/1048/1222\\nf 1489/1172/1346 1498/1175/1349 1523/1200/1374\\nf 1340/1023/1197 319/280/312 543/499/531\\nf 543/499/531 545/501/533 1513/1190/1364\\nf 1513/1190/1364 1340/1023/1197 543/499/531\\nf 545/501/533 498/456/488 1524/1201/1375\\nf 1524/1201/1375 1513/1190/1364 545/501/533\\nf 1514/1191/1365 1503/1180/1354 1505/1182/1356\\nf 1505/1182/1356 1509/1186/1360 1514/1191/1365\\nf 498/456/488 484/442/474 1524/1201/1375\\nf 1455/1132/1306 1358/1041/1215 1279/964/1138\\nf 1279/964/1138 1380/1063/1237 1455/1132/1306\\nf 1241/928/1102 1423/1101/1275 1420/1098/1272\\nf 1420/1098/1272 1236/923/1097 1241/928/1102\\nf 1423/1101/1275 1425/1103/1277 1427/1105/1279\\nf 1427/1105/1279 1420/1098/1272 1423/1101/1275\\nf 1444/1122/1296 1442/1120/1294 1426/1104/1278\\nf 1426/1104/1278 1427/1105/1279 1444/1122/1296\\nf 1444/1122/1296 1445/1123/1297 1457/1134/1308\\nf 1358/1041/1215 1455/1132/1306 1422/1100/1274\\nf 1422/1100/1274 1240/927/1101 1358/1041/1215\\nf 1455/1132/1306 1454/1131/1305 1424/1102/1276\\nf 1424/1102/1276 1422/1100/1274 1455/1132/1306\\nf 1454/1131/1305 1456/1133/1307 1446/1124/1298\\nf 1446/1124/1298 1424/1102/1276 1454/1131/1305\\nf 1458/1135/1309 1446/1124/1298 1456/1133/1307\\nf 1421/1099/1273 1426/1104/1278 1429/1107/1281\\nf 1429/1107/1281 1428/1106/1280 1421/1099/1273\\nf 1431/1109/1283 1256/943/1117 1262/949/1123\\nf 1262/949/1123 1428/1106/1280 1431/1109/1283\\nf 1443/1121/1295 1451/1129/1303 1430/1108/1282\\nf 1430/1108/1282 1429/1107/1281 1443/1121/1295\\nf 1443/1121/1295 1442/1120/1294 1459/1202/1376\\nf 1459/1202/1376 1449/1127/1301 1443/1121/1295\\nf 1431/1109/1283 1430/1108/1282 1433/1111/1285\\nf 1433/1111/1285 1432/1110/1284 1431/1109/1283\\nf 1435/1113/1287 1362/1044/1218 1257/944/1118\\nf 1257/944/1118 1432/1110/1284 1435/1113/1287\\nf 1433/1111/1285 1430/1108/1282 1451/1129/1303\\nf 1451/1129/1303 1440/1118/1292 1433/1111/1285\\nf 1440/1118/1292 1451/1129/1303 1450/1128/1302\\nf 1450/1128/1302 1452/1130/1304 1440/1118/1292\\nf 1362/1044/1218 1435/1113/1287 1436/1114/1288\\nf 1436/1114/1288 1258/945/1119 1362/1044/1218\\nf 1435/1113/1287 1434/1112/1286 1438/1116/1290\\nf 1438/1116/1290 1436/1114/1288 1435/1113/1287\\nf 1438/1116/1290 1434/1112/1286 1441/1119/1293\\nf 1441/1119/1293 1448/1126/1300 1438/1116/1290\\nf 1418/1164/1338 1527/1203/1377 1419/1204/1378\\nf 1101/794/968 1102/795/969 1234/1205/1379\\nf 1234/1205/1379 1232/922/1096 1101/794/968\\nf 1396/1081/1255 1398/1080/1254 1394/1077/1251\\nf 1394/1077/1251 1395/1076/1250 1396/1081/1255\\nf 1531/1206/1380 1328/1011/1185 1306/989/1163\\nf 1306/989/1163 1328/1011/1185 1307/990/1164\\nf 1532/1207/1381 1533/1208/1382 1484/1160/1334\\nf 1484/1160/1334 1483/1159/1333 1532/1207/1381\\nf 1532/1207/1381 1483/1159/1333 1476/1152/1326\\nf 1479/1155/1329 1477/1153/1327 1476/1152/1326\\nf 1476/1152/1326 1483/1159/1333 1479/1155/1329\\nf 1308/991/1165 1304/987/1161 1306/989/1163\\nf 1305/988/1162 1318/1002/1176 1531/1206/1380\\nf 1531/1206/1380 1306/989/1163 1305/988/1162\\nf 1475/1151/1325 1495/1170/1344 1494/1169/1343\\nf 1494/1169/1343 1495/1170/1344 1488/1173/1347\\nf 1488/1173/1347 1493/1168/1342 1494/1169/1343\\nf 1323/1006/1180 1322/1005/1179 1321/1004/1178\\nf 1321/1004/1178 1314/998/1172 1323/1006/1180\\nf 1324/1007/1181 1322/1005/1179 243/205/237\\nf 243/205/237 247/209/241 1324/1007/1181\\nf 1326/1009/1183 1324/1007/1181 247/209/241\\nf 247/209/241 250/212/244 1326/1009/1183\\nf 1327/1010/1184 1326/1009/1183 1329/1012/1186\\nf 1329/1012/1186 1330/1013/1187 1327/1010/1184\\nf 1342/1025/1199 1338/1021/1195 1341/1024/1198\\nf 1341/1024/1198 1350/1033/1207 1342/1025/1199\\nf 1339/1022/1196 1338/1021/1195 1343/1026/1200\\nf 1343/1026/1200 1357/1040/1214 1339/1022/1196\\nf 282/244/276 244/206/238 1323/1006/1180\\nf 1357/1040/1214 1343/1026/1200 1329/1012/1186\\nf 1329/1012/1186 252/214/246 1357/1040/1214\\nf 1496/1171/1345 1497/1174/1348 1498/1175/1349\\nf 1498/1175/1349 1489/1172/1346 1496/1171/1345\\nf 476/434/466 1497/1174/1348 1500/1177/1351\\nf 1500/1177/1351 480/438/470 476/434/466\\nf 480/438/470 1500/1177/1351 1502/1179/1353\\nf 1502/1179/1353 482/440/472 480/438/470\\nf 1502/1179/1353 1501/1178/1352 1505/1182/1356\\nf 1505/1182/1356 1503/1180/1354 1502/1179/1353\\nf 1341/1024/1198 1512/1189/1363 1515/1192/1366\\nf 1515/1192/1366 1350/1033/1207 1341/1024/1198\\nf 1514/1191/1365 1512/1189/1363 1513/1190/1364\\nf 1513/1190/1364 1524/1201/1375 1514/1191/1365\\nf 1503/1180/1354 1514/1191/1365 1524/1201/1375\\nf 1524/1201/1375 484/442/474 1503/1180/1354\\nf 1533/1208/1382 1532/1207/1381 1492/1167/1341\\nf 1494/1169/1343 1492/1167/1341 1532/1207/1381\\nf 1532/1207/1381 1476/1152/1326 1494/1169/1343\\nf 1494/1169/1343 1476/1152/1326 1475/1151/1325\\nf 1318/1002/1176 1317/1001/1175 1531/1206/1380\\nf 1315/999/1173 1320/1003/1177 1531/1206/1380\\nf 1531/1206/1380 1317/1001/1175 1315/999/1173\\nf 1531/1206/1380 1320/1003/1177 1328/1011/1185\\nf 1224/914/1088 1225/1209/1383 1222/912/1086\\nf 1223/913/1087 1222/912/1086 1221/911/1085\\nf 1221/911/1085 1220/910/1084 1223/913/1087\\nf 1223/913/1087 1220/910/1084 1302/985/1159\\nf 1391/1074/1248 1410/1093/1267 1409/1092/1266\\nf 1409/1092/1266 1392/1075/1249 1391/1074/1248\\nf 1473/1149/1323 1410/1093/1267 1391/1074/1248\\nf 1391/1074/1248 1390/1073/1247 1473/1149/1323\\nf 1411/1210/1384 1409/1092/1266 1407/1090/1264\\nf 1407/1090/1264 1415/1096/1270 1411/1210/1384\\nf 1416/1097/1271 1412/1211/1385 1411/1210/1384\\nf 1411/1210/1384 1415/1096/1270 1416/1097/1271\\nf 1225/1209/1383 1228/917/1091 1221/911/1085\\nf 1221/911/1085 1222/912/1086 1225/1209/1383\\nf 1102/795/969 1105/798/972 1234/1205/1379\\nf 1234/1205/1379 1105/798/972 1235/996/1170\\nf 1156/849/1023 1160/853/1027 1163/857/1031\\nf 1163/857/1031 1158/851/1025 1156/849/1023\\nf 1534/1212/1386 1535/1213/1387 1536/1214/1388\\nf 1536/1214/1388 1537/1215/1389 1534/1212/1386\\nf 1538/1216/1390 1539/1217/1391 1540/1218/1392\\nf 1539/1217/1391 1535/1213/1387 1541/1219/1393\\nf 1541/1219/1393 1540/1218/1392 1539/1217/1391\\nf 1534/1212/1386 1541/1219/1393 1535/1213/1387\\nf 1541/1219/1393 1534/1212/1386 1542/1220/1394\\nf 1543/1221/1395 1537/1215/1389 1536/1214/1388\\nf 1536/1214/1388 1544/1222/1396 1543/1221/1395\\nf 1544/1222/1396 1536/1214/1388 1545/1223/1397\\nf 1545/1223/1397 1546/1224/1398 1544/1222/1396\\nf 1547/1225/1399 1548/1226/1400 1549/1227/1401\\nf 1549/1227/1401 1550/1228/1402 1547/1225/1399\\nf 1550/1228/1402 1551/1229/1403 1552/1230/1404\\nf 1543/1221/1395 1544/1222/1396 1553/1231/1405\\nf 1556/1232/1406 1542/1220/1394 1554/1233/1407\\nf 1554/1233/1407 1555/1234/1408 1556/1232/1406\\nf 1541/1219/1393 1542/1220/1394 1556/1232/1406\\nf 1556/1232/1406 1557/1235/1409 1541/1219/1393\\nf 1557/1235/1409 1556/1232/1406 1555/1234/1408\\nf 1558/1236/1410 1559/1237/1411 1540/1218/1392\\nf 1540/1218/1392 1559/1237/1411 1538/1216/1390\\nf 1538/1216/1390 1559/1237/1411 1560/1238/1412\\nf 1562/1239/1413 1560/1238/1412 1561/1240/1414\\nf 1561/1240/1414 1563/1241/1415 1562/1239/1413\\nf 1559/1237/1411 1558/1236/1410 1564/1242/1416\\nf 1565/1243/1417 1560/1238/1412 1562/1239/1413\\nf 1565/1243/1417 1566/1244/1418 1567/1245/1419\\nf 1567/1245/1419 1560/1238/1412 1565/1243/1417\\nf 1560/1238/1412 1567/1245/1419 1538/1216/1390\\nf 1567/1245/1419 1568/1246/1420 1569/1247/1421\\nf 1569/1247/1421 1538/1216/1390 1567/1245/1419\\nf 1569/1247/1421 1570/1248/1422 1539/1217/1391\\nf 1539/1217/1391 1538/1216/1390 1569/1247/1421\\nf 1571/1249/1423 1572/1250/1424 1536/1214/1388\\nf 1536/1214/1388 1535/1213/1387 1571/1249/1423\\nf 1547/1225/1399 1545/1223/1397 1573/1251/1425\\nf 1573/1251/1425 1574/1252/1426 1547/1225/1399\\nf 1575/1253/1427 1574/1252/1426 1573/1251/1425\\nf 1573/1251/1425 1576/1254/1428 1575/1253/1427\\nf 1571/1249/1423 1577/1255/1429 1578/1256/1430\\nf 1578/1256/1430 1572/1250/1424 1571/1249/1423\\nf 1579/1257/1431 1580/1258/1432 1570/1248/1422\\nf 1570/1248/1422 1569/1247/1421 1579/1257/1431\\nf 1569/1247/1421 1568/1246/1420 1581/1259/1433\\nf 1581/1259/1433 1579/1257/1431 1569/1247/1421\\nf 1582/1260/1434 1583/1261/1435 1579/1257/1431\\nf 1579/1257/1431 1581/1259/1433 1582/1260/1434\\nf 1581/1259/1433 1584/1262/1436 1585/1263/1437\\nf 1585/1263/1437 1582/1260/1434 1581/1259/1433\\nf 1586/1264/1438 1582/1260/1434 1585/1263/1437\\nf 1587/1265/1439 1582/1260/1434 1586/1264/1438\\nf 1579/1257/1431 1583/1261/1435 1588/1266/1440\\nf 1588/1266/1440 1580/1258/1432 1579/1257/1431\\nf 1589/1267/1441 1583/1261/1435 1582/1260/1434\\nf 1582/1260/1434 1587/1265/1439 1589/1267/1441\\nf 1589/1267/1441 1587/1265/1439 1590/1268/1442\\nf 1591/1269/1443 1590/1268/1442 1587/1265/1439\\nf 1591/1269/1443 1587/1265/1439 1592/1270/1444\\nf 1586/1264/1438 1592/1270/1444 1587/1265/1439\\nf 1595/1271/1445 1598/1272/1446 1599/1273/1447\\nf 1599/1273/1447 1596/1274/1448 1595/1271/1445\\nf 1600/1275/1449 1596/1274/1448 1599/1273/1447\\nf 1599/1273/1447 1601/1276/1450 1600/1275/1449\\nf 1585/1263/1437 1602/1277/1451 1586/1264/1438\\nf 1593/1278/1452 1586/1264/1438 1602/1277/1451\\nf 1602/1277/1451 1603/1279/1453 1593/1278/1452\\nf 1594/1280/1454 1593/1278/1452 1603/1279/1453\\nf 1603/1279/1453 1584/1262/1436 1594/1280/1454\\nf 1595/1271/1445 1594/1280/1454 1584/1262/1436\\nf 1584/1262/1436 1598/1272/1446 1595/1271/1445\\nf 1601/1276/1450 1599/1273/1447 1598/1272/1446\\nf 1598/1272/1446 1584/1262/1436 1601/1276/1450\\nf 1602/1277/1451 1585/1263/1437 1584/1262/1436\\nf 1584/1262/1436 1603/1279/1453 1602/1277/1451\\nf 1601/1276/1450 1566/1244/1418 1604/1281/1455\\nf 1568/1246/1420 1567/1245/1419 1566/1244/1418\\nf 1566/1244/1418 1601/1276/1450 1568/1246/1420\\nf 1584/1262/1436 1581/1259/1433 1568/1246/1420\\nf 1568/1246/1420 1601/1276/1450 1584/1262/1436\\nf 1566/1244/1418 1565/1243/1417 1605/1282/1456\\nf 1605/1282/1456 1606/1283/1457 1566/1244/1418\\nf 1600/1275/1449 1601/1276/1450 1607/1284/1458\\nf 1604/1281/1455 1607/1284/1458 1601/1276/1450\\nf 1608/1285/1459 1609/1286/1460 1607/1284/1458\\nf 1607/1284/1458 1604/1281/1455 1608/1285/1459\\nf 1608/1285/1459 1604/1281/1455 1566/1244/1418\\nf 1566/1244/1418 1610/1287/1461 1608/1285/1459\\nf 1610/1287/1461 1566/1244/1418 1606/1283/1457\\nf 1606/1283/1457 1611/1288/1462 1610/1287/1461\\nf 1611/1288/1462 1606/1283/1457 1605/1282/1456\\nf 1605/1282/1456 1562/1239/1413 1611/1288/1462\\nf 1562/1239/1413 1605/1282/1456 1565/1243/1417\\nf 1612/1289/1463 1610/1287/1461 1611/1288/1462\\nf 1608/1285/1459 1610/1287/1461 1612/1289/1463\\nf 1612/1289/1463 1613/1290/1464 1608/1285/1459\\nf 1609/1286/1460 1608/1285/1459 1613/1290/1464\\nf 1613/1290/1464 1614/1291/1465 1609/1286/1460\\nf 1609/1286/1460 1614/1291/1465 1615/1292/1466\\nf 1615/1292/1466 1600/1275/1449 1609/1286/1460\\nf 1596/1274/1448 1600/1275/1449 1615/1292/1466\\nf 1615/1292/1466 1597/1293/1467 1596/1274/1448\\nf 1607/1284/1458 1609/1286/1460 1600/1275/1449\\nf 1617/1294/1468 1618/1295/1469 1616/1296/1470\\nf 1619/1297/1471 1618/1295/1469 1620/1298/1472\\nf 1620/1298/1472 1621/1299/1473 1619/1297/1471\\nf 1622/1300/1474 1623/1301/1475 1624/1302/1476\\nf 1622/1300/1474 1418/1164/1338 1487/1163/1337\\nf 1487/1163/1337 1625/1303/1477 1622/1300/1474\\nf 1486/1162/1336 1626/1304/1478 1625/1303/1477\\nf 1625/1303/1477 1487/1163/1337 1486/1162/1336\\nf 1619/1297/1471 1621/1299/1473 1627/1305/1479\\nf 1627/1305/1479 1628/1306/1480 1619/1297/1471\\nf 1629/1307/1481 1630/1308/1482 1631/1309/1483\\nf 1631/1309/1483 1632/1310/1484 1629/1307/1481\\nf 1631/1309/1483 1630/1308/1482 1633/1311/1485\\nf 1633/1311/1485 1634/1312/1486 1631/1309/1483\\nf 1635/1313/1487 1616/1296/1470 1636/1314/1488\\nf 1636/1314/1488 1637/1315/1489 1635/1313/1487\\nf 1616/1296/1470 1619/1297/1471 1628/1306/1480\\nf 1628/1306/1480 1636/1314/1488 1616/1296/1470\\nf 1628/1306/1480 1627/1305/1479 1638/1316/1490\\nf 1638/1316/1490 1639/1317/1491 1628/1306/1480\\nf 1642/1318/1492 1630/1308/1482 1629/1307/1481\\nf 1635/1313/1487 1633/1311/1485 1643/1319/1493\\nf 1643/1319/1493 1644/1320/1494 1635/1313/1487\\nf 1645/1321/1495 1642/1318/1492 1629/1307/1481\\nf 1641/1322/1496 1640/1323/1497 1646/1324/1498\\nf 1648/1325/1499 1649/1326/1500 1647/1327/1501\\nf 1647/1327/1501 1646/1324/1498 1648/1325/1499\\nf 1650/1328/1502 1648/1325/1499 1646/1324/1498\\nf 1646/1324/1498 1640/1323/1497 1650/1328/1502\\nf 1583/1261/1435 1589/1267/1441 1649/1326/1500\\nf 1649/1326/1500 1648/1325/1499 1583/1261/1435\\nf 1651/1329/1503 1647/1327/1501 1649/1326/1500\\nf 1652/1330/1504 1651/1329/1503 1653/1331/1505\\nf 1654/1332/1506 1653/1331/1505 1651/1329/1503\\nf 1653/1331/1505 1654/1332/1506 1655/1333/1507\\nf 1651/1329/1503 1649/1326/1500 1589/1267/1441\\nf 1590/1268/1442 1651/1329/1503 1589/1267/1441\\nf 1651/1329/1503 1590/1268/1442 1654/1332/1506\\nf 1656/1334/1508 1654/1332/1506 1590/1268/1442\\nf 1656/1334/1508 1590/1268/1442 1657/1335/1509\\nf 1658/1336/1510 1657/1335/1509 1590/1268/1442\\nf 1653/1331/1505 1660/1337/1511 1659/1338/1512\\nf 1661/1339/1513 1626/1304/1478 1486/1162/1336\\nf 1486/1162/1336 1485/1161/1335 1661/1339/1513\\nf 1484/1160/1334 1662/1340/1514 1661/1339/1513\\nf 1661/1339/1513 1485/1161/1335 1484/1160/1334\\nf 1663/1341/1515 1664/1342/1516 1665/1343/1517\\nf 1665/1343/1517 1666/1344/1518 1663/1341/1515\\nf 1666/1344/1518 1667/1345/1519 1668/1346/1520\\nf 1668/1346/1520 1663/1341/1515 1666/1344/1518\\nf 1667/1345/1519 1574/1252/1426 1575/1253/1427\\nf 1575/1253/1427 1668/1346/1520 1667/1345/1519\\nf 1574/1252/1426 1667/1345/1519 1548/1226/1400\\nf 1548/1226/1400 1547/1225/1399 1574/1252/1426\\nf 1667/1345/1519 1666/1344/1518 1669/1347/1521\\nf 1669/1347/1521 1548/1226/1400 1667/1345/1519\\nf 1670/1348/1522 1671/1349/1523 1665/1343/1517\\nf 1665/1343/1517 1662/1340/1514 1670/1348/1522\\nf 1533/1208/1382 1672/1350/1524 1484/1160/1334\\nf 1548/1226/1400 1669/1347/1521 1673/1351/1525\\nf 1673/1351/1525 1549/1227/1401 1548/1226/1400\\nf 1674/1352/1526 1675/1353/1527 1671/1349/1523\\nf 1671/1349/1523 1670/1348/1522 1674/1352/1526\\nf 1676/1354/1528 1677/1355/1529 1672/1350/1524\\nf 1672/1350/1524 1533/1208/1382 1676/1354/1528\\nf 1674/1352/1526 1677/1355/1529 1678/1356/1530\\nf 1678/1356/1530 1679/1357/1531 1674/1352/1526\\nf 1673/1351/1525 1675/1353/1527 1680/1358/1532\\nf 1680/1358/1532 1681/1359/1533 1673/1351/1525\\nf 1551/1229/1403 1549/1227/1401 1673/1351/1525\\nf 1673/1351/1525 1681/1359/1533 1551/1229/1403\\nf 1639/1317/1491 1638/1316/1490 1664/1342/1516\\nf 1664/1342/1516 1663/1341/1515 1639/1317/1491\\nf 1663/1341/1515 1668/1346/1520 1682/1360/1534\\nf 1682/1360/1534 1639/1317/1491 1663/1341/1515\\nf 1668/1346/1520 1575/1253/1427 1683/1361/1535\\nf 1683/1361/1535 1682/1360/1534 1668/1346/1520\\nf 1683/1361/1535 1575/1253/1427 1576/1254/1428\\nf 1576/1254/1428 1684/1362/1536 1683/1361/1535\\nf 1577/1255/1429 1685/1363/1537 1686/1364/1538\\nf 1686/1364/1538 1578/1256/1430 1577/1255/1429\\nf 1636/1314/1488 1628/1306/1480 1639/1317/1491\\nf 1639/1317/1491 1682/1360/1534 1636/1314/1488\\nf 1682/1360/1534 1683/1361/1535 1637/1315/1489\\nf 1637/1315/1489 1636/1314/1488 1682/1360/1534\\nf 1637/1315/1489 1683/1361/1535 1684/1362/1536\\nf 1684/1362/1536 1634/1312/1486 1637/1315/1489\\nf 1588/1266/1440 1650/1328/1502 1632/1310/1484\\nf 1632/1310/1484 1685/1363/1537 1588/1266/1440\\nf 1648/1325/1499 1650/1328/1502 1588/1266/1440\\nf 1588/1266/1440 1583/1261/1435 1648/1325/1499\\nf 1550/1228/1402 1549/1227/1401 1551/1229/1403\\nf 1552/1230/1404 1551/1229/1403 1681/1359/1533\\nf 1570/1248/1422 1571/1249/1423 1535/1213/1387\\nf 1535/1213/1387 1539/1217/1391 1570/1248/1422\\nf 1577/1255/1429 1571/1249/1423 1570/1248/1422\\nf 1570/1248/1422 1580/1258/1432 1577/1255/1429\\nf 1632/1310/1484 1650/1328/1502 1640/1323/1497\\nf 1640/1323/1497 1629/1307/1481 1632/1310/1484\\nf 1685/1363/1537 1577/1255/1429 1580/1258/1432\\nf 1580/1258/1432 1588/1266/1440 1685/1363/1537\\nf 1685/1363/1537 1632/1310/1484 1631/1309/1483\\nf 1631/1309/1483 1686/1364/1538 1685/1363/1537\\nf 1554/1233/1407 1542/1220/1394 1534/1212/1386\\nf 1534/1212/1386 1537/1215/1389 1554/1233/1407\\nf 1537/1215/1389 1543/1221/1395 1554/1233/1407\\nf 1688/1365/1539 1623/1301/1475 1620/1298/1472\\nf 1620/1298/1472 1689/1366/1540 1688/1365/1539\\nf 1622/1300/1474 1625/1303/1477 1627/1305/1479\\nf 1627/1305/1479 1621/1299/1473 1622/1300/1474\\nf 1627/1305/1479 1625/1303/1477 1626/1304/1478\\nf 1626/1304/1478 1638/1316/1490 1627/1305/1479\\nf 1664/1342/1516 1661/1339/1513 1662/1340/1514\\nf 1662/1340/1514 1665/1343/1517 1664/1342/1516\\nf 1671/1349/1523 1669/1347/1521 1666/1344/1518\\nf 1666/1344/1518 1665/1343/1517 1671/1349/1523\\nf 1675/1353/1527 1673/1351/1525 1669/1347/1521\\nf 1669/1347/1521 1671/1349/1523 1675/1353/1527\\nf 1675/1353/1527 1674/1352/1526 1679/1357/1531\\nf 1679/1357/1531 1680/1358/1532 1675/1353/1527\\nf 1638/1316/1490 1626/1304/1478 1661/1339/1513\\nf 1661/1339/1513 1664/1342/1516 1638/1316/1490\\nf 1545/1223/1397 1547/1225/1399 1550/1228/1402\\nf 1550/1228/1402 1546/1224/1398 1545/1223/1397\\nf 1545/1223/1397 1536/1214/1388 1572/1250/1424\\nf 1572/1250/1424 1573/1251/1425 1545/1223/1397\\nf 1572/1250/1424 1578/1256/1430 1576/1254/1428\\nf 1576/1254/1428 1573/1251/1425 1572/1250/1424\\nf 1635/1313/1487 1637/1315/1489 1634/1312/1486\\nf 1634/1312/1486 1633/1311/1485 1635/1313/1487\\nf 1578/1256/1430 1686/1364/1538 1684/1362/1536\\nf 1684/1362/1536 1576/1254/1428 1578/1256/1430\\nf 1686/1364/1538 1631/1309/1483 1634/1312/1486\\nf 1634/1312/1486 1684/1362/1536 1686/1364/1538\\nf 1618/1295/1469 1617/1294/1468 1689/1366/1540\\nf 1689/1366/1540 1620/1298/1472 1618/1295/1469\\nf 1623/1301/1475 1688/1365/1539 1690/1367/1541\\nf 1418/1164/1338 1622/1300/1474 1624/1302/1476\\nf 1624/1302/1476 1527/1203/1377 1418/1164/1338\\nf 1623/1301/1475 1622/1300/1474 1621/1299/1473\\nf 1621/1299/1473 1620/1298/1472 1623/1301/1475\\nf 1618/1295/1469 1619/1297/1471 1616/1296/1470\\nf 1677/1355/1529 1674/1352/1526 1670/1348/1522\\nf 1670/1348/1522 1672/1350/1524 1677/1355/1529\\nf 1677/1355/1529 1676/1354/1528 1691/1368/1542\\nf 1691/1368/1542 1678/1356/1530 1677/1355/1529\\nf 1672/1350/1524 1670/1348/1522 1662/1340/1514\\nf 1662/1340/1514 1484/1160/1334 1672/1350/1524\\nf 1693/1369/1543 1694/1370/1544 1695/1371/1545\\nf 1695/1371/1545 1696/1372/1546 1693/1369/1543\\nf 1697/1373/1547 1696/1372/1546 1695/1371/1545\\nf 1695/1371/1545 1698/1374/1548 1697/1373/1547\\nf 1697/1373/1547 1699/1375/1549 1700/1376/1550\\nf 1700/1376/1550 1696/1372/1546 1697/1373/1547\\nf 1701/1377/1551 1702/1378/1552 1694/1370/1544\\nf 1694/1370/1544 1693/1369/1543 1701/1377/1551\\nf 1703/1379/1553 1704/1380/1554 1700/1376/1550\\nf 1700/1376/1550 1705/1381/1555 1703/1379/1553\\nf 1705/1381/1555 1706/1382/1556 1707/1383/1557\\nf 1707/1383/1557 1703/1379/1553 1705/1381/1555\\nf 1706/1382/1556 1708/1384/1558 1709/1385/1559\\nf 1709/1385/1559 1707/1383/1557 1706/1382/1556\\nf 1710/1386/1560 1711/1387/1561 1712/1388/1562\\nf 1712/1388/1562 1713/1389/1563 1710/1386/1560\\nf 1714/1390/1564 1715/1391/1565 1716/1392/1566\\nf 1716/1392/1566 1713/1389/1563 1714/1390/1564\\nf 1708/1384/1558 1706/1382/1556 1717/1393/1567\\nf 1717/1393/1567 1710/1386/1560 1708/1384/1558\\nf 1706/1382/1556 1705/1381/1555 1718/1394/1568\\nf 1718/1394/1568 1717/1393/1567 1706/1382/1556\\nf 1710/1386/1560 1717/1393/1567 1719/1395/1569\\nf 1719/1395/1569 1711/1387/1561 1710/1386/1560\\nf 1711/1387/1561 1720/1396/1570 1712/1388/1562\\nf 1721/1397/1571 1722/1398/1572 1723/1399/1573\\nf 1723/1399/1573 1724/1400/1574 1721/1397/1571\\nf 1714/1390/1564 1724/1400/1574 1723/1399/1573\\nf 1723/1399/1573 1725/1401/1575 1714/1390/1564\\nf 1727/1402/1576 1728/1403/1577 1726/1404/1578\\nf 1722/1398/1572 1729/1405/1579 1730/1406/1580\\nf 1730/1406/1580 1723/1399/1573 1722/1398/1572\\nf 1730/1406/1580 1731/1407/1581 1725/1401/1575\\nf 1725/1401/1575 1723/1399/1573 1730/1406/1580\\nf 1732/1408/1582 1733/1409/1583 1734/1410/1584\\nf 1734/1410/1584 1735/1411/1585 1732/1408/1582\\nf 1736/1412/1586 1731/1407/1581 1734/1410/1584\\nf 1734/1410/1584 1737/1413/1587 1736/1412/1586\\nf 1738/1414/1588 1733/1409/1583 1739/1415/1589\\nf 1739/1415/1589 1740/1416/1590 1738/1414/1588\\nf 1741/1417/1591 1725/1401/1575 1731/1407/1581\\nf 1731/1407/1581 1736/1412/1586 1741/1417/1591\\nf 1735/1411/1585 1743/1418/1592 1742/1419/1593\\nf 1742/1419/1593 1732/1408/1582 1735/1411/1585\\nf 1732/1408/1582 1744/1420/1594 1739/1415/1589\\nf 1739/1415/1589 1733/1409/1583 1732/1408/1582\\nf 1745/1421/1595 1739/1415/1589 1744/1420/1594\\nf 1745/1421/1595 1740/1416/1590 1739/1415/1589\\nf 1746/1422/1596 1740/1416/1590 1745/1421/1595\\nf 1745/1421/1595 1747/1423/1597 1746/1422/1596\\nf 1748/1424/1598 1747/1423/1597 1749/1425/1599\\nf 1747/1423/1597 1750/1426/1600 1749/1425/1599\\nf 1750/1426/1600 1747/1423/1597 1751/1427/1601\\nf 1747/1423/1597 1752/1428/1602 1751/1427/1601\\nf 1747/1423/1597 1745/1421/1595 1753/1429/1603\\nf 1753/1429/1603 1752/1428/1602 1747/1423/1597\\nf 1751/1427/1601 1752/1428/1602 1754/1430/1604\\nf 1754/1430/1604 1752/1428/1602 1753/1429/1603\\nf 1753/1429/1603 1755/1431/1605 1754/1430/1604\\nf 1755/1431/1605 1753/1429/1603 1756/1432/1606\\nf 1753/1429/1603 1757/1433/1607 1756/1432/1606\\nf 1756/1432/1606 1757/1433/1607 1758/1434/1608\\nf 1732/1408/1582 1742/1419/1593 1759/1435/1609\\nf 1759/1435/1609 1744/1420/1594 1732/1408/1582\\nf 1759/1435/1609 1745/1421/1595 1744/1420/1594\\nf 1760/1436/1610 1761/1437/1611 1746/1422/1596\\nf 1764/1438/1612 1765/1439/1613 1763/1440/1614\\nf 1766/1441/1615 1763/1440/1614 1765/1439/1613\\nf 1762/1442/1616 1767/1443/1617 1768/1444/1618\\nf 1768/1444/1618 1761/1437/1611 1762/1442/1616\\nf 1760/1436/1610 1762/1442/1616 1761/1437/1611\\nf 1764/1438/1612 1770/1445/1619 1765/1439/1613\\nf 1771/1446/1620 1765/1439/1613 1770/1445/1619\\nf 1765/1439/1613 1771/1446/1620 1766/1441/1615\\nf 1766/1441/1615 1771/1446/1620 1772/1447/1621\\nf 1772/1447/1621 1767/1443/1617 1766/1441/1615\\nf 1773/1448/1622 1767/1443/1617 1772/1447/1621\\nf 1770/1445/1619 1772/1447/1621 1771/1446/1620\\nf 1772/1447/1621 1770/1445/1619 1773/1448/1622\\nf 1773/1448/1622 1770/1445/1619 1774/1449/1623\\nf 1774/1449/1623 1768/1444/1618 1773/1448/1622\\nf 1775/1450/1624 1774/1449/1623 1770/1445/1619\\nf 1770/1445/1619 1776/1451/1625 1775/1450/1624\\nf 1774/1449/1623 1775/1450/1624 1777/1452/1626\\nf 1777/1452/1626 1778/1453/1627 1774/1449/1623\\nf 1777/1452/1626 1775/1450/1624 1779/1454/1628\\nf 1779/1454/1628 1780/1455/1629 1777/1452/1626\\nf 1767/1443/1617 1773/1448/1622 1768/1444/1618\\nf 1768/1444/1618 1774/1449/1623 1778/1453/1627\\nf 1778/1453/1627 1738/1414/1588 1768/1444/1618\\nf 1781/1456/1630 1782/1457/1631 1783/1458/1632\\nf 1783/1458/1632 1784/1459/1633 1781/1456/1630\\nf 1785/1460/1634 1786/1461/1635 1781/1456/1630\\nf 1781/1456/1630 1787/1462/1636 1785/1460/1634\\nf 1780/1455/1629 1788/1463/1637 1784/1459/1633\\nf 1784/1459/1633 1777/1452/1626 1780/1455/1629\\nf 1779/1454/1628 1789/1464/1638 1790/1465/1639\\nf 1790/1465/1639 1780/1455/1629 1779/1454/1628\\nf 1740/1416/1590 1746/1422/1596 1761/1437/1611\\nf 1768/1444/1618 1740/1416/1590 1761/1437/1611\\nf 1740/1416/1590 1768/1444/1618 1738/1414/1588\\nf 1782/1457/1631 1736/1412/1586 1737/1413/1587\\nf 1737/1413/1587 1783/1458/1632 1782/1457/1631\\nf 1736/1412/1586 1782/1457/1631 1791/1466/1640\\nf 1791/1466/1640 1741/1417/1591 1736/1412/1586\\nf 1782/1457/1631 1781/1456/1630 1786/1461/1635\\nf 1786/1461/1635 1791/1466/1640 1782/1457/1631\\nf 1715/1391/1565 1714/1390/1564 1725/1401/1575\\nf 1725/1401/1575 1741/1417/1591 1715/1391/1565\\nf 1792/1467/1641 1715/1391/1565 1741/1417/1591\\nf 1741/1417/1591 1791/1466/1640 1792/1467/1641\\nf 1793/1468/1642 1792/1467/1641 1791/1466/1640\\nf 1791/1466/1640 1786/1461/1635 1793/1468/1642\\nf 1794/1469/1643 1793/1468/1642 1786/1461/1635\\nf 1786/1461/1635 1785/1460/1634 1794/1469/1643\\nf 1794/1469/1643 1785/1460/1634 1795/1470/1644\\nf 1795/1470/1644 1796/1471/1645 1794/1469/1643\\nf 1792/1467/1641 1797/1472/1646 1716/1392/1566\\nf 1716/1392/1566 1715/1391/1565 1792/1467/1641\\nf 1793/1468/1642 1798/1473/1647 1797/1472/1646\\nf 1797/1472/1646 1792/1467/1641 1793/1468/1642\\nf 1793/1468/1642 1794/1469/1643 1799/1474/1648\\nf 1799/1474/1648 1798/1473/1647 1793/1468/1642\\nf 1794/1469/1643 1796/1471/1645 1800/1475/1649\\nf 1800/1475/1649 1799/1474/1648 1794/1469/1643\\nf 1801/1476/1650 1802/1477/1651 1803/1478/1652\\nf 1803/1478/1652 1804/1479/1653 1801/1476/1650\\nf 1804/1479/1653 1803/1478/1652 1707/1383/1557\\nf 1707/1383/1557 1709/1385/1559 1804/1479/1653\\nf 1803/1478/1652 1805/1480/1654 1703/1379/1553\\nf 1703/1379/1553 1707/1383/1557 1803/1478/1652\\nf 1693/1369/1543 1704/1380/1554 1806/1481/1655\\nf 1806/1481/1655 1701/1377/1551 1693/1369/1543\\nf 1803/1478/1652 1802/1477/1651 1807/1482/1656\\nf 1807/1482/1656 1805/1480/1654 1803/1478/1652\\nf 1808/1483/1657 1701/1377/1551 1806/1481/1655\\nf 1806/1481/1655 1809/1484/1658 1808/1483/1657\\nf 1808/1483/1657 1810/1485/1659 1702/1378/1552\\nf 1702/1378/1552 1701/1377/1551 1808/1483/1657\\nf 1224/914/1088 1207/898/1072 1810/1485/1659\\nf 1810/1485/1659 1811/1486/1660 1224/914/1088\\nf 1812/1487/1661 1807/1482/1656 1802/1477/1651\\nf 1814/1488/1662 1719/1395/1569 1815/1489/1663\\nf 1815/1489/1663 1816/1490/1664 1814/1488/1662\\nf 1719/1395/1569 1814/1488/1662 1728/1403/1577\\nf 1728/1403/1577 1711/1387/1561 1719/1395/1569\\nf 1726/1404/1578 1728/1403/1577 1814/1488/1662\\nf 1814/1488/1662 1817/1491/1665 1726/1404/1578\\nf 1818/1492/1666 1819/1493/1667 1820/1494/1668\\nf 1820/1494/1668 1355/1038/1212 1818/1492/1666\\nf 1822/1495/1669 1823/1496/1670 1821/1497/1671\\nf 1817/1491/1665 1814/1488/1662 1816/1490/1664\\nf 1355/1038/1212 1820/1494/1668 1824/1498/1672\\nf 1824/1498/1672 1198/889/1063 1355/1038/1212\\nf 1816/1490/1664 1815/1489/1663 1825/1499/1673\\nf 1825/1499/1673 1822/1495/1669 1816/1490/1664\\nf 1826/1500/1674 1697/1373/1547 1698/1374/1548\\nf 1698/1374/1548 1824/1498/1672 1826/1500/1674\\nf 1826/1500/1674 1825/1499/1673 1699/1375/1549\\nf 1699/1375/1549 1697/1373/1547 1826/1500/1674\\nf 1717/1393/1567 1718/1394/1568 1815/1489/1663\\nf 1815/1489/1663 1719/1395/1569 1717/1393/1567\\nf 1721/1397/1571 1720/1396/1570 1727/1402/1576\\nf 1827/1501/1675 1828/1502/1676 1829/1503/1677\\nf 1828/1502/1676 1827/1501/1675 1830/1504/1678\\nf 1830/1504/1678 1779/1454/1628 1828/1502/1676\\nf 1831/1505/1679 1828/1502/1676 1776/1451/1625\\nf 1776/1451/1625 1832/1506/1680 1831/1505/1679\\nf 1830/1504/1678 1833/1507/1681 1789/1464/1638\\nf 1833/1507/1681 1830/1504/1678 1827/1501/1675\\nf 1827/1501/1675 1834/1508/1682 1833/1507/1681\\nf 1834/1508/1682 1827/1501/1675 1829/1503/1677\\nf 1829/1503/1677 1835/1509/1683 1834/1508/1682\\nf 1835/1509/1683 1829/1503/1677 1828/1502/1676\\nf 1828/1502/1676 1836/1510/1684 1835/1509/1683\\nf 1836/1510/1684 1828/1502/1676 1831/1505/1679\\nf 1836/1510/1684 1831/1505/1679 1832/1506/1680\\nf 1832/1506/1680 1837/1511/1685 1836/1510/1684\\nf 1838/1512/1686 1832/1506/1680 1776/1451/1625\\nf 1839/1513/1687 1838/1512/1686 1776/1451/1625\\nf 1840/1514/1688 1839/1513/1687 1776/1451/1625\\nf 1776/1451/1625 1770/1445/1619 1840/1514/1688\\nf 1832/1506/1680 1838/1512/1686 1837/1511/1685\\nf 1838/1512/1686 1839/1513/1687 1769/1515/1689\\nf 1764/1438/1612 1769/1515/1689 1839/1513/1687\\nf 1839/1513/1687 1840/1514/1688 1764/1438/1612\\nf 1770/1445/1619 1764/1438/1612 1840/1514/1688\\nf 1775/1450/1624 1776/1451/1625 1828/1502/1676\\nf 1828/1502/1676 1779/1454/1628 1775/1450/1624\\nf 1779/1454/1628 1830/1504/1678 1789/1464/1638\\nf 1795/1470/1644 1785/1460/1634 1787/1462/1636\\nf 1787/1462/1636 1841/1516/1690 1795/1470/1644\\nf 1780/1455/1629 1790/1465/1639 1842/1517/1691\\nf 1842/1517/1691 1841/1516/1690 1780/1455/1629\\nf 1841/1516/1690 1787/1462/1636 1788/1463/1637\\nf 1788/1463/1637 1780/1455/1629 1841/1516/1690\\nf 1789/1464/1638 1843/1518/1692 1844/1519/1693\\nf 1843/1518/1692 1789/1464/1638 1845/1520/1694\\nf 1833/1507/1681 1845/1520/1694 1789/1464/1638\\nf 1748/1424/1598 1749/1425/1599 1846/1521/1695\\nf 1748/1424/1598 1846/1521/1695 1746/1422/1596\\nf 1748/1424/1598 1746/1422/1596 1747/1423/1597\\nf 1694/1370/1544 1204/895/1069 1202/893/1067\\nf 1202/893/1067 1695/1371/1545 1694/1370/1544\\nf 1202/893/1067 1199/890/1064 1698/1374/1548\\nf 1698/1374/1548 1695/1371/1545 1202/893/1067\\nf 1699/1375/1549 1718/1394/1568 1705/1381/1555\\nf 1705/1381/1555 1700/1376/1550 1699/1375/1549\\nf 1702/1378/1552 1207/898/1072 1204/895/1069\\nf 1204/895/1069 1694/1370/1544 1702/1378/1552\\nf 1704/1380/1554 1693/1369/1543 1696/1372/1546\\nf 1696/1372/1546 1700/1376/1550 1704/1380/1554\\nf 1724/1400/1574 1714/1390/1564 1713/1389/1563\\nf 1713/1389/1563 1712/1388/1562 1724/1400/1574\\nf 1708/1384/1558 1710/1386/1560 1713/1389/1563\\nf 1713/1389/1563 1716/1392/1566 1708/1384/1558\\nf 1721/1397/1571 1724/1400/1574 1712/1388/1562\\nf 1712/1388/1562 1720/1396/1570 1721/1397/1571\\nf 1797/1472/1646 1709/1385/1559 1708/1384/1558\\nf 1708/1384/1558 1716/1392/1566 1797/1472/1646\\nf 1798/1473/1647 1804/1479/1653 1709/1385/1559\\nf 1709/1385/1559 1797/1472/1646 1798/1473/1647\\nf 1801/1476/1650 1804/1479/1653 1798/1473/1647\\nf 1798/1473/1647 1799/1474/1648 1801/1476/1650\\nf 1704/1380/1554 1703/1379/1553 1805/1480/1654\\nf 1805/1480/1654 1806/1481/1655 1704/1380/1554\\nf 1805/1480/1654 1807/1482/1656 1809/1484/1658\\nf 1809/1484/1658 1806/1481/1655 1805/1480/1654\\nf 1810/1485/1659 1207/898/1072 1702/1378/1552\\nf 1810/1485/1659 1808/1483/1657 1811/1486/1660\\nf 1807/1482/1656 1812/1487/1661 1813/1522/1696\\nf 1813/1522/1696 1809/1484/1658 1807/1482/1656\\nf 1819/1493/1667 1821/1497/1671 1823/1496/1670\\nf 1823/1496/1670 1820/1494/1668 1819/1493/1667\\nf 1820/1494/1668 1823/1496/1670 1826/1500/1674\\nf 1826/1500/1674 1824/1498/1672 1820/1494/1668\\nf 1826/1500/1674 1823/1496/1670 1822/1495/1669\\nf 1822/1495/1669 1825/1499/1673 1826/1500/1674\\nf 1199/890/1064 1198/889/1063 1824/1498/1672\\nf 1824/1498/1672 1698/1374/1548 1199/890/1064\\nf 1825/1499/1673 1815/1489/1663 1718/1394/1568\\nf 1718/1394/1568 1699/1375/1549 1825/1499/1673\\nf 1728/1403/1577 1727/1402/1576 1720/1396/1570\\nf 1720/1396/1570 1711/1387/1561 1728/1403/1577\\nf 1731/1407/1581 1730/1406/1580 1735/1411/1585\\nf 1735/1411/1585 1734/1410/1584 1731/1407/1581\\nf 1733/1409/1583 1738/1414/1588 1737/1413/1587\\nf 1737/1413/1587 1734/1410/1584 1733/1409/1583\\nf 1735/1411/1585 1730/1406/1580 1729/1405/1579\\nf 1729/1405/1579 1743/1418/1592 1735/1411/1585\\nf 1778/1453/1627 1777/1452/1626 1784/1459/1633\\nf 1784/1459/1633 1783/1458/1632 1778/1453/1627\\nf 1788/1463/1637 1787/1462/1636 1781/1456/1630\\nf 1781/1456/1630 1784/1459/1633 1788/1463/1637\\nf 1738/1414/1588 1778/1453/1627 1783/1458/1632\\nf 1783/1458/1632 1737/1413/1587 1738/1414/1588\\nf 1790/1465/1639 1789/1464/1638 1844/1519/1693\\nf 1844/1519/1693 1842/1517/1691 1790/1465/1639\\nf 1387/1070/1244 1389/1072/1246 1848/1523/1697\\nf 1848/1523/1697 1849/1524/1698 1387/1070/1244\\nf 1387/1070/1244 1849/1524/1698 1850/1525/1699\\nf 1850/1525/1699 1384/1067/1241 1387/1070/1244\\nf 1851/1526/1700 1852/1527/1701 1853/1528/1702\\nf 1853/1528/1702 1854/1529/1703 1851/1526/1700\\nf 1389/1072/1246 1392/1075/1249 1855/1530/1704\\nf 1855/1530/1704 1848/1523/1697 1389/1072/1246\\nf 1852/1527/1701 1856/1531/1705 1857/1532/1706\\nf 1857/1532/1706 1853/1528/1702 1852/1527/1701\\nf 1858/1533/1707 1859/1534/1708 1860/1535/1709\\nf 1860/1535/1709 1861/1536/1710 1858/1533/1707\\nf 1862/1537/1711 1863/1538/1712 1859/1534/1708\\nf 1859/1534/1708 1858/1533/1707 1862/1537/1711\\nf 1864/1539/1713 1865/1540/1714 1866/1541/1715\\nf 1866/1541/1715 1867/1542/1716 1864/1539/1713\\nf 1868/1543/1717 1865/1540/1714 1869/1544/1718\\nf 1869/1544/1718 1870/1545/1719 1868/1543/1717\\nf 1871/1546/1720 1859/1534/1708 1863/1538/1712\\nf 1863/1538/1712 1864/1539/1713 1871/1546/1720\\nf 1859/1534/1708 1871/1546/1720 1872/1547/1721\\nf 1872/1547/1721 1860/1535/1709 1859/1534/1708\\nf 1873/1548/1722 1871/1546/1720 1864/1539/1713\\nf 1864/1539/1713 1867/1542/1716 1873/1548/1722\\nf 1867/1542/1716 1866/1541/1715 1874/1549/1723\\nf 1875/1550/1724 1876/1551/1725 1877/1552/1726\\nf 1877/1552/1726 1878/1553/1727 1875/1550/1724\\nf 1868/1543/1717 1879/1554/1728 1875/1550/1724\\nf 1875/1550/1724 1878/1553/1727 1868/1543/1717\\nf 1877/1552/1726 1880/1555/1729 1881/1556/1730\\nf 1881/1556/1730 1882/1557/1731 1877/1552/1726\\nf 1880/1555/1729 1877/1552/1726 1876/1551/1725\\nf 1884/1558/1732 1883/1559/1733 1876/1551/1725\\nf 1876/1551/1725 1875/1550/1724 1884/1558/1732\\nf 1879/1554/1728 1885/1560/1734 1884/1558/1732\\nf 1884/1558/1732 1875/1550/1724 1879/1554/1728\\nf 1885/1560/1734 1886/1561/1735 1887/1562/1736\\nf 1887/1562/1736 1884/1558/1732 1885/1560/1734\\nf 1888/1563/1737 1886/1561/1735 1889/1564/1738\\nf 1889/1564/1738 1890/1565/1739 1888/1563/1737\\nf 1890/1565/1739 1891/1566/1740 1892/1567/1741\\nf 1892/1567/1741 1888/1563/1737 1890/1565/1739\\nf 1893/1568/1742 1894/1569/1743 1885/1560/1734\\nf 1885/1560/1734 1879/1554/1728 1893/1568/1742\\nf 1883/1559/1733 1884/1558/1732 1887/1562/1736\\nf 1887/1562/1736 1895/1570/1744 1883/1559/1733\\nf 1892/1567/1741 1896/1571/1745 1897/1572/1746\\nf 1897/1572/1746 1888/1563/1737 1892/1567/1741\\nf 1898/1573/1747 1896/1571/1745 1892/1567/1741\\nf 1898/1573/1747 1892/1567/1741 1891/1566/1740\\nf 1899/1574/1748 1898/1573/1747 1891/1566/1740\\nf 1898/1573/1747 1899/1574/1748 1900/1575/1749\\nf 1901/1576/1750 1902/1577/1751 1900/1575/1749\\nf 1900/1575/1749 1904/1578/1752 1898/1573/1747\\nf 1904/1578/1752 1900/1575/1749 1903/1579/1753\\nf 1905/1580/1754 1904/1578/1752 1903/1579/1753\\nf 1907/1581/1755 1904/1578/1752 1906/1582/1756\\nf 1908/1583/1757 1909/1584/1758 1897/1572/1746\\nf 1897/1572/1746 1896/1571/1745 1908/1583/1757\\nf 1908/1583/1757 1896/1571/1745 1898/1573/1747\\nf 1910/1585/1759 1899/1574/1748 1911/1586/1760\\nf 1910/1585/1759 1912/1587/1761 1913/1588/1762\\nf 1910/1585/1759 1913/1588/1762 1899/1574/1748\\nf 1913/1588/1762 1912/1587/1761 1918/1589/1763\\nf 1918/1589/1763 1917/1590/1764 1913/1588/1762\\nf 1919/1591/1765 1918/1589/1763 1912/1587/1761\\nf 1912/1587/1761 1911/1586/1760 1919/1591/1765\\nf 1910/1585/1759 1911/1586/1760 1912/1587/1761\\nf 1915/1592/1766 1914/1593/1767 1921/1594/1768\\nf 1914/1593/1767 1916/1595/1769 1922/1596/1770\\nf 1923/1597/1771 1922/1596/1770 1916/1595/1769\\nf 1916/1595/1769 1917/1590/1764 1923/1597/1771\\nf 1917/1590/1764 1918/1589/1763 1924/1598/1772\\nf 1924/1598/1772 1923/1597/1771 1917/1590/1764\\nf 1925/1599/1773 1924/1598/1772 1918/1589/1763\\nf 1922/1596/1770 1923/1597/1771 1924/1598/1772\\nf 1924/1598/1772 1925/1599/1773 1922/1596/1770\\nf 1925/1599/1773 1919/1591/1765 1926/1600/1774\\nf 1926/1600/1774 1922/1596/1770 1925/1599/1773\\nf 1927/1601/1775 1928/1602/1776 1922/1596/1770\\nf 1922/1596/1770 1926/1600/1774 1927/1601/1775\\nf 1926/1600/1774 1929/1603/1777 1930/1604/1778\\nf 1930/1604/1778 1927/1601/1775 1926/1600/1774\\nf 1930/1604/1778 1931/1605/1779 1932/1606/1780\\nf 1932/1606/1780 1927/1601/1775 1930/1604/1778\\nf 1918/1589/1763 1919/1591/1765 1925/1599/1773\\nf 1919/1591/1765 1890/1565/1739 1929/1603/1777\\nf 1929/1603/1777 1926/1600/1774 1919/1591/1765\\nf 1929/1603/1777 1933/1607/1781 1934/1608/1782\\nf 1934/1608/1782 1930/1604/1778 1929/1603/1777\\nf 1935/1609/1783 1936/1610/1784 1937/1611/1785\\nf 1937/1611/1785 1938/1612/1786 1935/1609/1783\\nf 1937/1611/1785 1936/1610/1784 1939/1613/1787\\nf 1939/1613/1787 1934/1608/1782 1937/1611/1785\\nf 1940/1614/1788 1932/1606/1780 1931/1605/1779\\nf 1891/1566/1740 1911/1586/1760 1899/1574/1748\\nf 1919/1591/1765 1911/1586/1760 1891/1566/1740\\nf 1891/1566/1740 1890/1565/1739 1919/1591/1765\\nf 1890/1565/1739 1889/1564/1738 1933/1607/1781\\nf 1933/1607/1781 1929/1603/1777 1890/1565/1739\\nf 1941/1615/1789 1942/1616/1790 1894/1569/1743\\nf 1894/1569/1743 1893/1568/1742 1941/1615/1789\\nf 1938/1612/1786 1937/1611/1785 1942/1616/1790\\nf 1942/1616/1790 1941/1615/1789 1938/1612/1786\\nf 1870/1545/1719 1893/1568/1742 1879/1554/1728\\nf 1879/1554/1728 1868/1543/1717 1870/1545/1719\\nf 1943/1617/1791 1941/1615/1789 1893/1568/1742\\nf 1893/1568/1742 1870/1545/1719 1943/1617/1791\\nf 1944/1618/1792 1938/1612/1786 1941/1615/1789\\nf 1941/1615/1789 1943/1617/1791 1944/1618/1792\\nf 1945/1619/1793 1935/1609/1783 1938/1612/1786\\nf 1938/1612/1786 1944/1618/1792 1945/1619/1793\\nf 1946/1620/1794 1935/1609/1783 1945/1619/1793\\nf 1863/1538/1712 1862/1537/1711 1947/1621/1795\\nf 1947/1621/1795 1869/1544/1718 1863/1538/1712\\nf 1862/1537/1711 1948/1622/1796 1949/1623/1797\\nf 1949/1623/1797 1947/1621/1795 1862/1537/1711\\nf 1944/1618/1792 1949/1623/1797 1950/1624/1798\\nf 1950/1624/1798 1945/1619/1793 1944/1618/1792\\nf 1951/1625/1799 1952/1626/1800 1953/1627/1801\\nf 1954/1628/1802 1952/1626/1800 1951/1625/1799\\nf 1951/1625/1799 1948/1622/1796 1954/1628/1802\\nf 1858/1533/1707 1954/1628/1802 1948/1622/1796\\nf 1948/1622/1796 1862/1537/1711 1858/1533/1707\\nf 1861/1536/1710 1955/1629/1803 1954/1628/1802\\nf 1954/1628/1802 1858/1533/1707 1861/1536/1710\\nf 1955/1629/1803 1861/1536/1710 1857/1532/1706\\nf 1857/1532/1706 1956/1630/1804 1955/1629/1803\\nf 1957/1631/1805 1952/1626/1800 1954/1628/1802\\nf 1954/1628/1802 1955/1629/1803 1957/1631/1805\\nf 1955/1629/1803 1956/1630/1804 1958/1632/1806\\nf 1958/1632/1806 1957/1631/1805 1955/1629/1803\\nf 1959/1633/1807 1960/1634/1808 1855/1530/1704\\nf 1855/1530/1704 1961/1635/1809 1959/1633/1807\\nf 1963/1636/1810 1964/1637/1811 1962/1638/1812\\nf 1957/1631/1805 1958/1632/1806 1965/1639/1813\\nf 1966/1640/1814 1873/1548/1722 1967/1641/1815\\nf 1967/1641/1815 1968/1642/1816 1966/1640/1814\\nf 1873/1548/1722 1867/1542/1716 1969/1643/1817\\nf 1969/1643/1817 1967/1641/1815 1873/1548/1722\\nf 1967/1641/1815 1969/1643/1817 1970/1644/1818\\nf 1520/1197/1371 1383/1066/1240 1975/1645/1819\\nf 1975/1645/1819 1972/1646/1820 1520/1197/1371\\nf 1976/1647/1821 1977/1648/1822 1973/1649/1823\\nf 1973/1649/1823 1971/1650/1824 1976/1647/1821\\nf 1384/1067/1241 1850/1525/1699 1975/1645/1819\\nf 1975/1645/1819 1383/1066/1240 1384/1067/1241\\nf 1976/1647/1821 1851/1526/1700 1854/1529/1703\\nf 1854/1529/1703 1977/1648/1822 1976/1647/1821\\nf 1871/1546/1720 1873/1548/1722 1966/1640/1814\\nf 1966/1640/1814 1872/1547/1721 1871/1546/1720\\nf 1877/1552/1726 1882/1557/1731 1874/1549/1723\\nf 1978/1651/1825 1979/1652/1826 1980/1653/1827\\nf 1980/1653/1827 1932/1606/1780 1981/1654/1828\\nf 1981/1654/1828 1978/1651/1825 1980/1653/1827\\nf 1982/1655/1829 1983/1656/1830 1928/1602/1776\\nf 1928/1602/1776 1980/1653/1827 1982/1655/1829\\nf 1981/1654/1828 1940/1614/1788 1984/1657/1831\\nf 1984/1657/1831 1978/1651/1825 1981/1654/1828\\nf 1978/1651/1825 1984/1657/1831 1985/1658/1832\\nf 1985/1658/1832 1979/1652/1826 1978/1651/1825\\nf 1979/1652/1826 1985/1658/1832 1986/1659/1833\\nf 1986/1659/1833 1980/1653/1827 1979/1652/1826\\nf 1980/1653/1827 1986/1659/1833 1987/1660/1834\\nf 1987/1660/1834 1982/1655/1829 1980/1653/1827\\nf 1987/1660/1834 1988/1661/1835 1983/1656/1830\\nf 1983/1656/1830 1982/1655/1829 1987/1660/1834\\nf 1989/1662/1836 1928/1602/1776 1983/1656/1830\\nf 1990/1663/1837 1928/1602/1776 1989/1662/1836\\nf 1991/1664/1838 1922/1596/1770 1928/1602/1776\\nf 1928/1602/1776 1990/1663/1837 1991/1664/1838\\nf 1983/1656/1830 1988/1661/1835 1989/1662/1836\\nf 1992/1665/1839 1985/1658/1832 1984/1657/1831\\nf 1985/1658/1832 1992/1665/1839 1993/1666/1840\\nf 1993/1666/1840 1986/1659/1833 1985/1658/1832\\nf 1987/1660/1834 1986/1659/1833 1993/1666/1840\\nf 1988/1661/1835 1994/1667/1841 1920/1668/1842\\nf 1920/1668/1842 1989/1662/1836 1988/1661/1835\\nf 1921/1594/1768 1989/1662/1836 1920/1668/1842\\nf 1989/1662/1836 1921/1594/1768 1990/1663/1837\\nf 1914/1593/1767 1991/1664/1838 1990/1663/1837\\nf 1990/1663/1837 1921/1594/1768 1914/1593/1767\\nf 1922/1596/1770 1991/1664/1838 1914/1593/1767\\nf 1927/1601/1775 1932/1606/1780 1980/1653/1827\\nf 1980/1653/1827 1928/1602/1776 1927/1601/1775\\nf 1932/1606/1780 1940/1614/1788 1981/1654/1828\\nf 1946/1620/1794 1995/1669/1843 1936/1610/1784\\nf 1936/1610/1784 1935/1609/1783 1946/1620/1794\\nf 1936/1610/1784 1995/1669/1843 1996/1670/1844\\nf 1996/1670/1844 1939/1613/1787 1936/1610/1784\\nf 1931/1605/1779 1997/1671/1845 1940/1614/1788\\nf 1940/1614/1788 1997/1671/1845 1998/1672/1846\\nf 1984/1657/1831 1999/1673/1847 1992/1665/1839\\nf 1901/1576/1750 1900/1575/1749 1899/1574/1748\\nf 1856/1531/1705 1852/1527/1701 1849/1524/1698\\nf 1849/1524/1698 1848/1523/1697 1856/1531/1705\\nf 1849/1524/1698 1852/1527/1701 1851/1526/1700\\nf 1851/1526/1700 1850/1525/1699 1849/1524/1698\\nf 1860/1535/1709 1872/1547/1721 1854/1529/1703\\nf 1854/1529/1703 1853/1528/1702 1860/1535/1709\\nf 1960/1634/1808 1856/1531/1705 1848/1523/1697\\nf 1848/1523/1697 1855/1530/1704 1960/1634/1808\\nf 1861/1536/1710 1860/1535/1709 1853/1528/1702\\nf 1853/1528/1702 1857/1532/1706 1861/1536/1710\\nf 1865/1540/1714 1868/1543/1717 1878/1553/1727\\nf 1878/1553/1727 1866/1541/1715 1865/1540/1714\\nf 1865/1540/1714 1864/1539/1713 1863/1538/1712\\nf 1863/1538/1712 1869/1544/1718 1865/1540/1714\\nf 1877/1552/1726 1874/1549/1723 1866/1541/1715\\nf 1866/1541/1715 1878/1553/1727 1877/1552/1726\\nf 1970/1644/1818 1969/1643/1817 1882/1557/1731\\nf 1882/1557/1731 1881/1556/1730 1970/1644/1818\\nf 1943/1617/1791 1870/1545/1719 1869/1544/1718\\nf 1869/1544/1718 1947/1621/1795 1943/1617/1791\\nf 1944/1618/1792 1943/1617/1791 1947/1621/1795\\nf 1947/1621/1795 1949/1623/1797 1944/1618/1792\\nf 1949/1623/1797 1948/1622/1796 1951/1625/1799\\nf 1951/1625/1799 1950/1624/1798 1949/1623/1797\\nf 1856/1531/1705 1960/1634/1808 1956/1630/1804\\nf 1956/1630/1804 1857/1532/1706 1856/1531/1705\\nf 1956/1630/1804 1960/1634/1808 1959/1633/1807\\nf 1959/1633/1807 1958/1632/1806 1956/1630/1804\\nf 1855/1530/1704 1392/1075/1249 1961/1635/1809\\nf 1962/1638/1812 1959/1633/1807 1961/1635/1809\\nf 1964/1637/1811 2001/1674/1848 1959/1633/1807\\nf 1959/1633/1807 1962/1638/1812 1964/1637/1811\\nf 1958/1632/1806 1959/1633/1807 2001/1674/1848\\nf 2001/1674/1848 1965/1639/1813 1958/1632/1806\\nf 1976/1647/1821 1971/1650/1824 1972/1646/1820\\nf 1972/1646/1820 1975/1645/1819 1976/1647/1821\\nf 1977/1648/1822 1966/1640/1814 1968/1642/1816\\nf 1968/1642/1816 1973/1649/1823 1977/1648/1822\\nf 1850/1525/1699 1851/1526/1700 1976/1647/1821\\nf 1976/1647/1821 1975/1645/1819 1850/1525/1699\\nf 1872/1547/1721 1966/1640/1814 1977/1648/1822\\nf 1977/1648/1822 1854/1529/1703 1872/1547/1721\\nf 1969/1643/1817 1867/1542/1716 1874/1549/1723\\nf 1874/1549/1723 1882/1557/1731 1969/1643/1817\\nf 1886/1561/1735 1888/1563/1737 1897/1572/1746\\nf 1897/1572/1746 1887/1562/1736 1886/1561/1735\\nf 1886/1561/1735 1885/1560/1734 1894/1569/1743\\nf 1894/1569/1743 1889/1564/1738 1886/1561/1735\\nf 1897/1572/1746 1909/1584/1758 1895/1570/1744\\nf 1895/1570/1744 1887/1562/1736 1897/1572/1746\\nf 1933/1607/1781 1942/1616/1790 1937/1611/1785\\nf 1937/1611/1785 1934/1608/1782 1933/1607/1781\\nf 1931/1605/1779 1930/1604/1778 1934/1608/1782\\nf 1934/1608/1782 1939/1613/1787 1931/1605/1779\\nf 1889/1564/1738 1894/1569/1743 1942/1616/1790\\nf 1942/1616/1790 1933/1607/1781 1889/1564/1738\\nf 1997/1671/1845 1931/1605/1779 1939/1613/1787\\nf 1939/1613/1787 1996/1670/1844 1997/1671/1845\\nf 85/81/113 86/80/112 314/1675/307\\nf 314/1675/307 87/286/318 85/81/113\\nf 131/98/130 277/1676/271 126/93/125\\nf 277/1676/271 132/99/131 129/96/128\\nf 129/96/128 126/93/125 277/1676/271\\nf 132/99/131 278/1677/272 130/97/129\\nf 131/98/130 136/103/135 277/1676/271\\nf 277/1676/271 136/103/135 137/107/139\\nf 137/107/139 276/1678/270 277/1676/271\\nf 140/106/138 275/1679/269 138/104/136\\nf 139/105/137 138/104/136 276/1678/270\\nf 276/1678/270 137/107/139 139/105/137\\nf 148/115/147 273/1680/267 146/113/145\\nf 149/116/148 146/113/145 273/1680/267\\nf 149/116/148 274/1681/268 275/1679/269\\nf 275/1679/269 140/106/138 149/116/148\\nf 157/131/163 178/1682/1849 158/124/156\\nf 178/1682/1849 151/118/150 158/124/156\\nf 157/131/163 176/143/175 177/1683/1850\\nf 177/1683/1850 178/1682/1849 157/131/163\\nf 177/1683/1850 176/143/175 175/142/174\\nf 175/142/174 181/201/233 177/1683/1850\\nf 555/1684/1851 182/200/232 179/144/176\\nf 179/144/176 183/199/231 555/1684/1851\\nf 329/1685/322 189/151/183 188/150/182\\nf 188/150/182 190/168/200 329/1685/322\\nf 280/1686/274 208/170/202 211/173/205\\nf 211/173/205 213/175/207 280/1686/274\\nf 187/149/181 186/148/180 327/1687/1852\\nf 327/1687/1852 218/181/213 187/149/181\\nf 186/148/180 189/151/183 327/1687/1852\\nf 218/181/213 327/1687/1852 221/183/215\\nf 224/186/218 225/187/219 237/1688/235\\nf 237/1688/235 226/197/229 227/193/225\\nf 227/193/225 224/186/218 237/1688/235\\nf 234/195/227 236/198/230 323/1689/316\\nf 323/1689/316 235/196/228 234/195/227\\nf 235/196/228 323/1689/316 324/1690/317\\nf 324/1690/317 172/139/171 235/196/228\\nf 172/139/171 324/1690/317 183/199/231\\nf 237/203/235 238/202/234 226/1691/229\\nf 473/431/463 240/1692/1853 241/245/277\\nf 241/245/277 242/247/279 473/431/463\\nf 255/217/249 132/1693/131 253/215/247\\nf 270/232/264 127/1694/126 268/230/262\\nf 147/1695/146 127/1694/126 270/232/264\\nf 270/232/264 148/1696/147 147/1695/146\\nf 273/235/267 148/1696/147 270/232/264\\nf 271/233/265 149/1697/148 273/235/267\\nf 149/1697/148 271/233/265 260/222/254\\nf 260/222/254 274/236/268 149/1697/148\\nf 259/221/253 256/218/250 138/1698/136\\nf 138/1698/136 275/237/269 259/221/253\\nf 276/238/270 138/1698/136 256/218/250\\nf 253/215/247 132/1693/131 277/239/271\\nf 278/240/272 132/1693/131 255/217/249\\nf 251/213/245 249/211/243 286/1699/1854\\nf 286/1699/1854 278/240/272 251/213/245\\nf 286/1699/1854 249/211/243 248/210/242\\nf 248/210/242 279/241/273 286/1699/1854\\nf 246/208/240 285/1700/281 279/241/273\\nf 280/242/274 285/1700/281 246/208/240\\nf 284/1701/280 280/242/274 245/207/239\\nf 245/207/239 281/243/275 284/1701/280\\nf 208/170/202 280/1686/274 284/248/280\\nf 280/1686/274 213/175/207 285/249/281\\nf 285/249/281 215/177/209 279/1702/273\\nf 133/100/132 130/97/129 278/1677/272\\nf 278/1677/272 286/1703/1854 133/100/132\\nf 133/100/132 286/1703/1854 279/1702/273\\nf 279/1702/273 287/250/282 133/100/132\\nf 215/177/209 287/250/282 279/1702/273\\nf 300/263/295 302/265/297 303/1704/1855\\nf 303/1704/1855 301/264/296 300/263/295\\nf 310/272/304 311/1705/1856 308/270/302\\nf 311/1705/1856 310/272/304 301/264/296\\nf 301/264/296 303/1704/1855 311/1705/1856\\nf 283/246/278 236/1706/230 226/1691/229\\nf 226/1691/229 238/202/234 283/246/278\\nf 316/277/309 87/1707/318 314/275/307\\nf 87/1707/318 316/277/309 321/282/314\\nf 321/282/314 127/1694/126 87/1707/318\\nf 268/230/262 127/1694/126 321/282/314\\nf 283/246/278 323/284/316 236/1706/230\\nf 225/1708/219 325/288/320 326/287/319\\nf 325/288/320 225/1708/219 221/1709/215\\nf 237/203/235 225/1708/219 326/287/319\\nf 327/1710/1852 328/289/321 221/1709/215\\nf 328/289/321 327/1710/1852 189/1711/183\\nf 329/290/322 328/289/321 189/1711/183\\nf 328/289/321 325/288/320 221/1709/215\\nf 335/296/328 336/297/329 473/431/463\\nf 473/431/463 242/247/279 335/296/328\\nf 183/1712/231 324/285/317 241/245/277\\nf 241/245/277 240/1692/1853 183/1712/231\\nf 183/1712/231 240/1692/1853 555/1713/1851\\nf 337/318/350 541/1714/529 314/1675/307\\nf 314/1675/307 86/80/112 337/318/350\\nf 373/334/366 508/1715/497 376/337/369\\nf 507/1716/496 383/355/387 384/348/380\\nf 384/348/380 385/344/376 507/1716/496\\nf 382/343/375 507/1716/496 385/344/376\\nf 390/350/382 505/1717/1857 392/352/384\\nf 391/351/383 393/354/386 505/1717/1857\\nf 505/1717/1857 390/350/382 391/351/383\\nf 401/369/401 402/362/394 178/1682/1849\\nf 178/1682/1849 402/362/394 151/118/150\\nf 177/1683/1850 420/381/413 401/369/401\\nf 401/369/401 178/1682/1849 177/1683/1850\\nf 177/1683/1850 419/380/412 420/381/413\\nf 419/380/412 177/1683/1850 181/201/233\\nf 422/383/415 182/200/232 555/1684/1851\\nf 555/1684/1851 423/430/462 422/383/415\\nf 551/1718/1858 428/397/429 425/385/417\\nf 425/385/417 424/384/416 551/1718/1858\\nf 329/1685/322 190/168/200 428/397/429\\nf 428/397/429 551/1718/1858 329/1685/322\\nf 424/384/416 451/411/443 551/1718/1858\\nf 450/410/442 549/1719/537 451/411/443\\nf 549/1719/537 450/410/442 453/413/445\\nf 453/413/445 546/1720/534 549/1719/537\\nf 546/1720/534 453/413/445 456/416/448\\nf 456/416/448 457/417/449 546/1720/534\\nf 458/418/450 470/1721/524 457/417/449\\nf 465/425/457 467/428/460 470/1721/524\\nf 470/1721/524 458/418/450 465/425/457\\nf 457/1722/449 470/492/524 471/467/499\\nf 471/467/499 472/493/525 457/1722/449\\nf 475/433/465 240/1692/1853 473/431/463\\nf 486/446/478 376/1723/369 487/444/476\\nf 501/459/491 369/1724/362 503/461/493\\nf 503/461/493 369/1724/362 392/1725/384\\nf 392/1725/384 505/1726/1857 503/461/493\\nf 393/1727/386 506/463/495 503/461/493\\nf 503/461/493 505/1726/1857 393/1727/386\\nf 393/1727/386 394/1728/385 504/462/494\\nf 504/462/494 506/463/495 393/1727/386\\nf 394/1728/385 395/1729/388 494/452/484\\nf 494/452/484 504/462/494 394/1728/385\\nf 395/1729/388 383/1730/387 492/450/482\\nf 492/450/482 494/452/484 395/1729/388\\nf 492/450/482 383/1730/387 507/464/496\\nf 382/1731/375 486/446/478 489/447/479\\nf 489/447/479 507/464/496 382/1731/375\\nf 374/1732/367 376/1723/369 486/446/478\\nf 486/446/478 382/1731/375 374/1732/367\\nf 487/444/476 376/1723/369 508/465/497\\nf 509/466/498 512/1733/502 481/439/471\\nf 477/435/467 481/439/471 512/1733/502\\nf 512/1733/502 510/1734/1859 477/435/467\\nf 444/1735/436 478/436/468 477/435/467\\nf 477/435/467 510/1734/1859 444/1735/436\\nf 284/1736/280 281/1737/275 478/436/468\\nf 478/436/468 444/1735/436 284/1736/280\\nf 281/1737/275 282/1738/276 479/437/469\\nf 479/437/469 478/436/468 281/1737/275\\nf 444/404/436 510/1739/1859 445/405/437\\nf 510/1739/1859 512/470/502 446/406/438\\nf 446/406/438 445/405/437 510/1739/1859\\nf 377/338/370 509/1740/498 508/1715/497\\nf 508/1715/497 373/334/366 377/338/370\\nf 512/470/502 509/1740/498 377/338/370\\nf 529/1741/1860 528/485/517 526/483/515\\nf 526/483/515 527/484/516 529/1741/1860\\nf 536/1742/1861 534/491/523 533/489/521\\nf 533/489/521 531/487/519 536/1742/1861\\nf 535/490/522 534/491/523 536/1742/1861\\nf 536/1742/1861 537/1743/1862 535/490/522\\nf 527/484/516 535/490/522 537/1743/1862\\nf 537/1743/1862 529/1741/1860 527/484/516\\nf 470/492/524 467/1744/460 511/468/500\\nf 539/495/527 457/1722/449 472/493/525\\nf 369/1724/362 544/500/532 540/496/528\\nf 540/496/528 541/497/529 369/1724/362\\nf 501/459/491 544/500/532 369/1724/362\\nf 511/468/500 467/1744/460 468/1745/459\\nf 475/433/465 511/468/500 468/1745/459\\nf 468/1745/459 469/1746/461 475/433/465\\nf 541/1714/529 337/318/350 362/323/355\\nf 362/323/355 369/330/362 541/1714/529\\nf 547/503/535 546/502/534 457/1722/449\\nf 457/1722/449 539/495/527 547/503/535\\nf 451/1747/443 549/505/537 550/506/538\\nf 550/506/538 551/1748/1858 451/1747/443\\nf 550/506/538 330/1749/323 329/290/322\\nf 329/290/322 551/1748/1858 550/506/538\\nf 330/1749/323 550/506/538 548/504/536\\nf 548/504/536 552/507/539 330/1749/323\\nf 552/507/539 332/293/325 330/1749/323\\nf 332/293/325 552/507/539 553/508/540\\nf 553/508/540 334/295/327 332/293/325\\nf 553/508/540 554/509/541 336/297/329\\nf 336/297/329 334/295/327 553/508/540\\nf 473/431/463 336/297/329 554/509/541\\nf 423/1750/462 240/1692/1853 475/433/465\\nf 475/433/465 469/1746/461 423/1750/462\\nf 423/1750/462 555/1713/1851 240/1692/1853\\nf 556/549/616 641/565/599 557/1751/1863\\nf 641/565/599 556/549/616 558/511/543\\nf 558/511/543 559/510/542 641/565/599\\nf 561/553/1864 713/600/1865 712/515/1866\\nf 713/600/1865 561/553/1864 562/601/1867\\nf 563/635/1868 637/563/597 564/631/1869\\nf 637/563/597 563/635/1868 638/564/598\\nf 654/576/610 569/1752/1870 570/1753/1871\\nf 569/1752/1870 654/576/610 655/578/612\\nf 662/1754/1872 579/566/600 580/568/602\\nf 579/566/600 662/1754/1872 663/1755/1873\\nf 664/582/617 581/569/603 582/571/605\\nf 581/569/603 664/582/617 583/625/1874\\nf 587/1756/559 584/1757/1875 656/1758/1876\\nf 584/1757/1875 587/1756/559 739/1759/1877\\nf 585/526/558 586/525/557 657/1760/1878\\nf 707/598/636 592/554/1879 708/599/637\\nf 592/554/1879 707/598/636 593/561/595\\nf 706/597/635 593/561/595 707/598/636\\nf 593/561/595 706/597/635 594/562/596\\nf 595/533/565 596/532/564 634/560/594\\nf 600/1761/1880 636/616/1881 635/617/1882\\nf 636/616/1881 600/1761/1880 671/1762/1883\\nf 605/605/1884 639/607/1885 606/606/1886\\nf 639/607/1885 605/605/1884 690/592/629\\nf 607/579/613 640/1763/1887 608/577/611\\nf 640/1763/1887 607/579/613 609/1764/1888\\nf 611/541/574 610/540/573 700/608/1889\\nf 661/581/615 613/618/1890 660/580/614\\nf 613/618/1890 661/581/615 614/543/576\\nf 615/544/577 614/543/576 661/581/615\\nf 617/547/580 618/546/579 711/609/1891\\nf 620/540/1892 621/546/1893 710/1765/1894\\nf 621/546/1893 620/540/1892 642/567/601\\nf 623/550/583 622/549/582 643/570/604\\nf 625/553/586 626/552/585 644/627/1895\\nf 628/516/589 629/555/588 645/572/606\\nf 632/558/592 631/557/591 709/1766/1896\\nf 592/554/1879 596/532/564 598/512/567\\nf 596/532/564 592/554/1879 593/561/595\\nf 593/561/595 634/560/594 596/532/564\\nf 713/600/1865 635/617/1882 636/616/1881\\nf 635/617/1882 713/600/1865 562/601/1867\\nf 566/514/546 606/606/1886 639/607/1885\\nf 606/606/1886 566/514/546 568/516/548\\nf 569/1752/1870 609/1764/1888 570/1753/1871\\nf 609/1764/1888 569/1752/1870 640/1763/1887\\nf 572/518/550 612/542/575 611/541/574\\nf 612/542/575 572/518/550 574/520/552\\nf 641/565/599 616/545/578 557/1751/1863\\nf 559/510/542 614/543/576 641/565/599\\nf 614/543/576 559/510/542 613/618/1890\\nf 576/522/554 619/548/581 577/523/555\\nf 619/548/581 576/522/554 618/546/579\\nf 642/567/601 579/566/600 621/546/1893\\nf 643/570/604 581/569/603 623/550/583\\nf 584/1757/1875 644/627/1895 626/552/585\\nf 644/627/1895 584/1757/1875 739/1759/1877\\nf 586/525/557 645/572/606 629/555/588\\nf 589/529/561 633/559/593 632/558/592\\nf 633/559/593 589/529/561 591/531/563\\nf 646/621/1897 669/619/1898 667/584/619\\nf 669/619/1898 646/621/1897 648/620/1899\\nf 673/627/1900 646/621/1897 647/583/618\\nf 646/621/1897 673/627/1900 648/620/1899\\nf 649/588/623 680/1767/1901 682/1768/1902\\nf 680/1767/1901 649/588/623 650/587/622\\nf 652/574/608 651/573/607 691/593/630\\nf 587/1756/559 627/554/587 625/553/586\\nf 627/554/587 587/1756/559 656/1758/1876\\nf 585/526/558 630/556/590 628/516/589\\nf 630/556/590 585/526/558 657/1760/1878\\nf 588/528/560 709/1766/1896 631/557/591\\nf 709/1766/1896 588/528/560 590/530/562\\nf 704/596/634 658/624/1903 659/623/1904\\nf 658/624/1903 704/596/634 701/595/633\\nf 661/581/615 556/549/616 615/544/577\\nf 575/521/553 711/609/1891 578/524/556\\nf 711/609/1891 575/521/553 617/547/580\\nf 662/1754/1872 710/1765/1894 663/1755/1873\\nf 710/1765/1894 662/1754/1872 620/540/1892\\nf 664/582/617 624/551/584 583/625/1874\\nf 669/619/1898 665/554/1905 666/618/1906\\nf 665/554/1905 669/619/1898 712/515/1866\\nf 667/584/619 666/618/1906 668/1769/1907\\nf 666/618/1906 667/584/619 669/619/1898\\nf 671/1762/1883 668/1769/1907 670/1770/1908\\nf 668/1769/1907 671/1762/1883 667/584/619\\nf 712/515/1866 670/1770/1908 665/554/1905\\nf 670/1770/1908 712/515/1866 671/1762/1883\\nf 672/626/1909 648/620/1899 673/627/1900\\nf 648/620/1899 672/626/1909 669/619/1898\\nf 667/584/619 647/583/618 646/621/1897\\nf 665/554/1905 668/1769/1907 666/618/1906\\nf 668/1769/1907 665/554/1905 670/1770/1908\\nf 561/553/1864 669/619/1898 672/626/1909\\nf 669/619/1898 561/553/1864 712/515/1866\\nf 671/1762/1883 674/585/620 667/584/619\\nf 674/585/620 671/1762/1883 600/1761/1880\\nf 679/628/1910 675/630/1911 676/629/1912\\nf 675/630/1911 679/628/1910 564/631/1869\\nf 677/632/1913 676/629/1912 678/633/1914\\nf 676/629/1912 677/632/1913 679/628/1910\\nf 604/539/572 678/633/1914 684/634/1915\\nf 678/633/1914 604/539/572 677/632/1913\\nf 564/631/1869 684/634/1915 675/630/1911\\nf 684/634/1915 564/631/1869 604/539/572\\nf 679/628/1910 680/1767/1901 650/587/622\\nf 680/1767/1901 679/628/1910 677/632/1913\\nf 650/587/622 681/586/621 679/628/1910\\nf 677/632/1913 682/1768/1902 680/1767/1901\\nf 682/1768/1902 677/632/1913 683/571/624\\nf 675/630/1911 678/633/1914 676/629/1912\\nf 678/633/1914 675/630/1911 684/634/1915\\nf 563/635/1868 679/628/1910 681/586/621\\nf 679/628/1910 563/635/1868 564/631/1869\\nf 604/539/572 683/571/624 677/632/1913\\nf 692/1771/1916 687/512/627 688/636/1917\\nf 687/512/627 692/1771/1916 685/589/625\\nf 690/592/629 688/636/1917 689/591/628\\nf 688/636/1917 690/592/629 692/1771/1916\\nf 685/589/625 652/574/608 691/593/630\\nf 652/574/608 685/589/625 692/1771/1916\\nf 693/594/631 691/593/630 651/573/607\\nf 692/1771/1916 653/575/609 652/574/608\\nf 653/575/609 692/1771/1916 694/637/1918\\nf 686/590/626 688/636/1917 687/512/627\\nf 688/636/1917 686/590/626 689/591/628\\nf 690/592/629 694/637/1918 692/1771/1916\\nf 694/637/1918 690/592/629 605/605/1884\\nf 698/640/1919 695/641/1920 696/642/1921\\nf 695/641/1920 698/640/1919 573/519/551\\nf 702/1772/1922 696/642/1921 697/639/1923\\nf 696/642/1921 702/1772/1922 698/640/1919\\nf 700/608/1889 697/639/1923 699/638/1924\\nf 697/639/1923 700/608/1889 702/1772/1922\\nf 573/519/551 699/638/1924 695/641/1920\\nf 699/638/1924 573/519/551 700/608/1889\\nf 698/640/1919 658/624/1903 701/595/633\\nf 658/624/1903 698/640/1919 702/1772/1922\\nf 701/595/633 703/523/632 698/640/1919\\nf 702/1772/1922 659/623/1904 658/624/1903\\nf 659/623/1904 702/1772/1922 705/643/1925\\nf 695/641/1920 697/639/1923 696/642/1921\\nf 697/639/1923 695/641/1920 699/638/1924\\nf 571/517/549 698/640/1919 703/523/632\\nf 698/640/1919 571/517/549 573/519/551\\nf 700/608/1889 705/643/1925 702/1772/1922\\nf 705/643/1925 700/608/1889 610/540/573\\nf 708/599/637 598/512/567 599/535/568\\nf 598/512/567 708/599/637 592/554/1879\\nf 590/530/562 632/558/592 709/1766/1896\\nf 632/558/592 590/530/562 589/529/561\\nf 657/1760/1878 629/555/588 630/556/590\\nf 629/555/588 657/1760/1878 586/525/557\\nf 656/1758/1876 626/552/585 627/554/587\\nf 626/552/585 656/1758/1876 584/1757/1875\\nf 583/625/1874 623/550/583 581/569/603\\nf 623/550/583 583/625/1874 624/551/584\\nf 663/1755/1873 621/546/1893 579/566/600\\nf 621/546/1893 663/1755/1873 710/1765/1894\\nf 578/524/556 618/546/579 576/522/554\\nf 618/546/579 578/524/556 711/609/1891\\nf 560/512/544 613/618/1890 559/510/542\\nf 613/618/1890 560/512/544 660/580/614\\nf 573/519/551 611/541/574 700/608/1889\\nf 611/541/574 573/519/551 572/518/550\\nf 655/578/612 640/1763/1887 569/1752/1870\\nf 640/1763/1887 655/578/612 608/577/611\\nf 567/515/547 639/607/1885 690/592/629\\nf 639/607/1885 567/515/547 566/514/546\\nf 564/631/1869 602/537/570 604/539/572\\nf 602/537/570 564/631/1869 637/563/597\\nf 712/515/1866 636/616/1881 671/1762/1883\\nf 636/616/1881 712/515/1866 713/600/1865\\nf 714/549/711 715/1751/1926 797/565/690\\nf 797/565/690 716/511/707 714/549/711\\nf 716/511/707 797/565/690 798/510/691\\nf 798/510/691 717/512/708 716/511/707\\nf 718/553/640 872/515/1927 719/600/638\\nf 721/635/733 722/631/726 793/563/685\\nf 793/563/685 794/564/686 721/635/733\\nf 723/513/1928 870/515/748 871/514/749\\nf 871/514/749 724/614/1929 723/513/1928\\nf 810/576/1930 725/1753/1931 726/1752/1932\\nf 726/1752/1932 811/578/1933 810/576/1930\\nf 727/517/643 868/519/747 728/518/641\\nf 822/521/713 730/523/1934 731/522/1935\\nf 731/522/1935 732/524/1936 822/521/713\\nf 823/1754/1937 733/568/694 734/566/693\\nf 734/566/693 735/1755/1938 823/1754/1937\\nf 824/582/714 736/571/697 737/569/696\\nf 737/569/696 825/625/715 824/582/714\\nf 812/1756/1939 813/1773/1940 738/1774/1941\\nf 738/1774/1941 739/1775/1877 812/1756/1939\\nf 814/526/702 815/622/703 740/1776/1942\\nf 740/1776/1942 812/527/1939 814/526/702\\nf 745/598/650 864/599/1943 746/604/648\\nf 750/533/1944 790/560/682 789/532/681\\nf 789/532/681 751/534/1945 750/533/1944\\nf 751/534/1945 789/532/681 788/512/680\\nf 788/512/680 752/535/1946 751/534/1945\\nf 753/1761/1947 792/617/684 791/616/683\\nf 791/616/683 831/1762/1948 753/1761/1947\\nf 762/579/1949 869/577/1950 795/1763/1951\\nf 795/1763/1951 763/1764/1952 762/579/1949\\nf 764/540/663 796/542/687 765/541/661\\nf 820/581/710 819/580/709 767/618/692\\nf 767/618/692 768/543/689 820/581/710\\nf 821/544/712 820/581/710 768/543/689\\nf 768/543/689 769/545/688 821/544/712\\nf 774/540/1953 867/1765/1954 775/546/1955\\nf 775/546/1955 799/567/695 774/540/1953\\nf 778/550/670 800/570/698 776/549/668\\nf 781/611/673 866/604/1956 779/553/671\\nf 782/614/676 801/1777/1957 783/612/674\\nf 787/558/679 865/1778/1958 785/615/677\\nf 871/514/749 760/607/659 759/606/658\\nf 759/606/658 724/614/1929 871/514/749\\nf 726/1752/1932 725/1753/1931 763/1764/1952\\nf 763/1764/1952 795/1763/1951 726/1752/1932\\nf 728/518/641 765/541/661 796/542/687\\nf 797/565/690 715/1751/1926 769/545/688\\nf 731/522/1935 730/523/1934 773/548/667\\nf 773/548/667 772/546/666 731/522/1935\\nf 799/567/695 775/546/1955 734/566/693\\nf 800/570/698 778/550/670 737/569/696\\nf 738/1774/1941 781/611/673 780/610/672\\nf 780/610/672 739/1775/1877 738/1774/1941\\nf 740/1776/1942 783/612/674 801/1777/1957\\nf 801/1777/1957 812/527/1939 740/1776/1942\\nf 743/603/646 787/558/679 786/559/678\\nf 786/559/678 744/531/647 743/603/646\\nf 802/621/701 828/584/722 803/619/699\\nf 833/627/719 805/583/720 802/621/701\\nf 802/621/701 804/620/700 833/627/719\\nf 806/588/730 842/1768/1959 840/1767/1960\\nf 840/1767/1960 807/587/731 806/588/730\\nf 852/573/1961 808/575/1962 849/574/1963\\nf 849/574/1963 809/593/1964 852/573/1961\\nf 810/576/1930 811/578/1933 869/577/1950\\nf 869/577/1950 762/579/1949 810/576/1930\\nf 812/1756/1939 779/553/671 866/604/1956\\nf 866/604/1956 813/1773/1940 812/1756/1939\\nf 741/602/644 785/615/677 865/1778/1958\\nf 865/1778/1958 742/530/645 741/602/644\\nf 818/624/706 859/595/741 816/596/704\\nf 822/521/713 732/524/1936 771/609/665\\nf 823/1754/1937 735/1755/1938 867/1765/1954\\nf 867/1765/1954 774/540/1953 823/1754/1937\\nf 827/604/717 872/515/1927 803/619/699\\nf 828/584/722 829/1769/1965 826/618/716\\nf 826/618/716 803/619/699 828/584/722\\nf 831/1762/1948 830/1770/1966 829/1769/1965\\nf 829/1769/1965 828/584/722 831/1762/1948\\nf 872/515/1927 827/604/717 830/1770/1966\\nf 830/1770/1966 831/1762/1948 872/515/1927\\nf 828/584/722 802/621/701 805/583/720\\nf 827/604/717 826/618/716 829/1769/1965\\nf 829/1769/1965 830/1770/1966 827/604/717\\nf 803/619/699 872/515/1927 718/553/640\\nf 831/1762/1948 828/584/722 834/585/721\\nf 834/585/721 753/1761/1947 831/1762/1948\\nf 757/539/656 844/634/732 839/633/728\\nf 839/633/728 838/632/727 757/539/656\\nf 722/631/726 837/630/725 844/634/732\\nf 844/634/732 757/539/656 722/631/726\\nf 835/628/723 807/587/731 840/1767/1960\\nf 840/1767/1960 838/632/727 835/628/723\\nf 838/632/727 840/1767/1960 842/1768/1959\\nf 842/1768/1959 843/571/734 838/632/727\\nf 757/539/656 838/632/727 843/571/734\\nf 847/589/1967 846/512/736 854/590/735\\nf 854/590/735 870/515/748 847/589/1967\\nf 850/1771/1968 845/636/737 846/512/736\\nf 846/512/736 847/589/1967 850/1771/1968\\nf 761/592/660 848/591/1969 845/636/737\\nf 845/636/737 850/1771/1968 761/592/660\\nf 870/515/748 854/590/735 848/591/1969\\nf 848/591/1969 761/592/660 870/515/748\\nf 847/589/1967 809/593/1964 849/574/1963\\nf 849/574/1963 850/1771/1968 847/589/1967\\nf 851/594/1970 852/573/1961 809/593/1964\\nf 809/593/1964 847/589/1967 851/594/1970\\nf 850/1771/1968 849/574/1963 808/575/1962\\nf 808/575/1962 853/637/738 850/1771/1968\\nf 845/636/737 848/591/1969 854/590/735\\nf 723/513/1928 851/594/1970 847/589/1967\\nf 847/589/1967 870/515/748 723/513/1928\\nf 761/592/660 850/1771/1968 853/637/738\\nf 855/640/742 857/642/745 863/641/744\\nf 863/641/744 868/519/747 855/640/742\\nf 860/1772/1971 856/639/740 857/642/745\\nf 857/642/745 855/640/742 860/1772/1971\\nf 856/639/740 860/1772/1971 766/608/662\\nf 868/519/747 863/641/744 858/638/739\\nf 858/638/739 766/608/662 868/519/747\\nf 855/640/742 859/595/741 818/624/706\\nf 818/624/706 860/1772/1971 855/640/742\\nf 861/523/743 816/596/704 859/595/741\\nf 860/1772/1971 818/624/706 817/623/705\\nf 817/623/705 862/643/746 860/1772/1971\\nf 855/640/742 868/519/747 727/517/643\\nf 766/608/662 860/1772/1971 862/643/746\\nf 748/597/651 750/533/1944 751/534/1945\\nf 751/534/1945 745/598/650 748/597/651\\nf 745/598/650 751/534/1945 752/535/1946\\nf 752/535/1946 864/599/1943 745/598/650\\nf 864/599/1943 752/535/1946 788/512/680\\nf 788/512/680 746/604/648 864/599/1943\\nf 742/530/645 865/1778/1958 787/558/679\\nf 787/558/679 743/603/646 742/530/645\\nf 815/622/703 784/613/675 783/612/674\\nf 783/612/674 740/1776/1942 815/622/703\\nf 813/1773/1940 866/604/1956 781/611/673\\nf 781/611/673 738/1774/1941 813/1773/1940\\nf 825/625/715 737/569/696 778/550/670\\nf 778/550/670 777/551/669 825/625/715\\nf 735/1755/1938 734/566/693 775/546/1955\\nf 775/546/1955 867/1765/1954 735/1755/1938\\nf 732/524/1936 731/522/1935 772/546/666\\nf 772/546/666 771/609/665 732/524/1936\\nf 717/512/708 798/510/691 767/618/692\\nf 767/618/692 819/580/709 717/512/708\\nf 765/541/661 728/518/641 868/519/747\\nf 811/578/1933 726/1752/1932 795/1763/1951\\nf 795/1763/1951 869/577/1950 811/578/1933\\nf 722/631/726 757/539/656 756/537/655\\nf 756/537/655 793/563/685 722/631/726\\nf 872/515/1927 831/1762/1948 791/616/683\\nf 791/616/683 719/600/638 872/515/1927\\nf 880/1779/1972 873/1780/1973 874/645/751\\nf 874/645/751 875/644/750 880/1779/1972\\nf 876/646/752 887/654/760 886/653/759\\nf 886/653/759 878/648/754 876/646/752\\nf 888/1781/771 875/1782/750 877/1783/753\\nf 877/1783/753 889/1784/763 888/1781/771\\nf 874/645/751 891/656/762 887/654/760\\nf 887/654/760 876/646/752 874/645/751\\nf 889/1784/763 877/1783/753 879/1785/755\\nf 879/1785/755 892/1786/764 889/1784/763\\nf 873/1780/1973 894/661/767 891/656/762\\nf 891/656/762 874/645/751 873/1780/1973\\nf 875/1782/750 888/1781/771 896/1787/770\\nf 896/1787/770 880/1788/1972 875/1782/750\\nf 880/1779/1972 896/1789/770 894/661/767\\nf 894/661/767 873/1780/1973 880/1779/1972\\nf 895/1790/769 890/1791/768 881/655/761\\nf 881/655/761 882/660/766 895/1790/769\\nf 890/1791/768 883/652/758 884/651/757\\nf 884/651/757 881/655/761 890/1791/768\\nf 883/652/758 893/1792/765 885/650/756\\nf 888/665/771 889/657/763 883/1793/758\\nf 883/1793/758 890/662/768 888/665/771\\nf 893/659/765 883/1793/758 889/657/763\\nf 895/1790/769 882/660/766 894/661/767\\nf 894/661/767 896/1789/770 895/1790/769\\nf 943/699/819 942/696/816 941/695/815\\nf 942/696/816 943/699/819 944/698/818\\nf 1000/696/869 1003/698/872 1002/699/871\\nf 1004/697/874 1002/699/871 1003/698/872\\nf 1025/719/893 1035/729/903 1123/1794/988\\nf 1123/1794/988 1027/721/895 1025/719/893\\nf 1042/736/910 1120/1795/991 1020/714/888\\nf 1043/737/911 1131/1796/998 1041/735/909\\nf 1131/1796/998 1043/737/911 1141/1797/1008\\nf 1044/739/913 1141/1797/1008 1043/737/911\\nf 1141/1797/1008 1044/739/913 1143/1798/1010\\nf 1044/739/913 1045/784/958 1143/1798/1010\\nf 1041/735/909 1131/1796/998 1125/1799/997\\nf 1125/1799/997 1042/736/910 1041/735/909\\nf 1066/759/933 1072/765/939 1174/1800/1974\\nf 1174/1800/1974 1073/773/947 1066/759/933\\nf 1071/764/938 1174/1800/1974 1072/765/939\\nf 1071/764/938 1070/763/937 1174/1800/1974\\nf 1137/830/1004 1073/773/947 1174/1800/1974\\nf 1073/773/947 1137/830/1004 1074/775/949\\nf 1137/830/1004 1136/1801/1003 1075/766/940\\nf 1075/766/940 1074/775/949 1137/830/1004\\nf 1136/1801/1003 1076/1802/1975 1077/767/941\\nf 1077/767/941 1075/766/940 1136/1801/1003\\nf 1088/780/954 1140/1803/1007 1092/785/959\\nf 1140/1803/1007 1088/780/954 1089/781/955\\nf 1089/781/955 1139/1804/1006 1140/1803/1007\\nf 1089/781/955 1138/1805/1005 1139/1804/1006\\nf 1138/1805/1005 1089/781/955 1080/770/944\\nf 1077/767/941 1138/1805/1005 1080/770/944\\nf 1138/1805/1005 1077/767/941 1076/1802/1975\\nf 1093/786/960 1177/1806/1042 1033/1807/901\\nf 1112/805/979 1036/1808/904 1040/1809/908\\nf 1040/1809/908 1120/817/991 1121/816/990\\nf 1121/816/990 1112/805/979 1040/1809/908\\nf 1035/1810/903 1122/813/987 1111/804/978\\nf 1114/807/981 1032/1811/900 1123/814/988\\nf 1033/1807/901 1032/1811/900 1114/807/981\\nf 1114/807/981 1093/786/960 1033/1807/901\\nf 1122/813/987 1035/1810/903 1036/1808/904\\nf 1036/1808/904 1112/805/979 1122/813/987\\nf 1120/817/991 1042/1812/910 1124/815/989\\nf 1042/1812/910 1125/823/997 1126/819/993\\nf 1126/819/993 1124/815/989 1042/1812/910\\nf 1135/828/1002 1076/1813/1975 1136/829/1003\\nf 1135/828/1002 1133/826/1000 1076/1813/1975\\nf 1133/826/1000 1138/831/1005 1076/1813/1975\\nf 1132/825/999 1092/1814/959 1140/833/1007\\nf 1092/1814/959 1132/825/999 1045/1815/958\\nf 1132/825/999 1142/835/1009 1045/1815/958\\nf 1045/1815/958 1142/835/1009 1143/836/1010\\nf 1208/1816/1074 1162/871/1045 1158/851/1025\\nf 1158/851/1025 1163/857/1031 1208/1816/1074\\nf 1070/763/937 1137/830/1004 1174/1800/1974\\nf 1177/868/1042 1178/1817/1043 1167/859/1033\\nf 1022/716/890 1020/714/888 1120/1795/991\\nf 1120/1795/991 1040/734/908 1022/716/890\\nf 1178/1817/1043 1176/867/1041 1164/855/1029\\nf 1164/855/1029 1167/859/1033 1178/1817/1043\\nf 1027/721/895 1123/1794/988 1032/726/900\\nf 1035/1810/903 1111/804/978 1115/808/982\\nf 1115/808/982 1123/814/988 1035/1810/903\\nf 1178/869/1043 1177/1806/1042 1095/788/962\\nf 1101/794/968 1175/1818/1040 1100/793/967\\nf 1176/1819/1041 1178/869/1043 1097/790/964\\nf 1097/790/964 1100/793/967 1176/1819/1041\\nf 1095/788/962 1177/1806/1042 1093/786/960\\nf 1179/870/1044 1208/1816/1074 1163/857/1031\\nf 1175/866/1040 1101/1820/968 1179/870/1044\\nf 1175/1818/1040 1176/1819/1041 1100/793/967\\nf 1526/1821/1976 1180/1822/1977 1361/1823/1978\\nf 1364/1824/1220 1181/872/1046 1365/1825/1221\\nf 1365/1825/1221 1181/872/1046 1361/1823/1978\\nf 1361/1823/1978 1180/1822/1977 1365/1825/1221\\nf 1361/1823/1978 1182/875/1049 1183/886/1060\\nf 1183/886/1060 1184/885/1059 1361/1823/1978\\nf 1361/1823/1978 1185/874/1048 1182/875/1049\\nf 1185/874/1048 1361/1823/1978 1181/872/1046\\nf 1208/900/1074 1209/899/1073 1162/1826/1045\\nf 1209/899/1073 1395/1827/1250 1319/1828/1979\\nf 1395/1827/1250 1209/899/1073 1210/901/1075\\nf 1396/1829/1255 1395/1827/1250 1210/901/1075\\nf 1210/901/1075 1211/1830/1980 1396/1829/1255\\nf 1210/901/1075 1208/900/1074 1179/1831/1044\\nf 1179/1831/1044 1211/1830/1980 1210/901/1075\\nf 1224/914/1088 1360/1832/1981 1412/1833/1385\\nf 1412/1833/1385 1225/1209/1383 1224/914/1088\\nf 1217/907/1081 1226/916/1090 1235/996/1170\\nf 1235/996/1170 1213/903/1077 1217/907/1081\\nf 1227/915/1089 1228/917/1091 1416/1834/1271\\nf 1416/1834/1271 1229/918/1092 1227/915/1089\\nf 1231/920/1094 1235/996/1170 1226/916/1090\\nf 1232/922/1096 1235/996/1170 1231/920/1094\\nf 1235/996/1170 1232/922/1096 1234/1205/1379\\nf 1449/1835/1301 1267/954/1128 1274/1043/1217\\nf 1274/1043/1217 1450/1836/1302 1449/1835/1301\\nf 1452/1837/1304 1265/952/1126 1266/953/1127\\nf 1266/953/1127 1275/1045/1219 1452/1837/1304\\nf 1272/959/1133 1453/1838/1982 1276/961/1135\\nf 1272/959/1133 1277/962/1136 1453/1838/1982\\nf 1280/965/1139 1361/1823/1978 1184/885/1059\\nf 1361/1823/1978 1280/965/1139 1282/1042/1216\\nf 1283/1839/1983 1361/1823/1978 1282/1042/1216\\nf 1271/958/1132 1270/957/1131 1457/1840/1308\\nf 1457/1840/1308 1458/1841/1309 1271/958/1132\\nf 1268/955/1129 1459/1842/1376 1284/967/1141\\nf 1317/1001/1175 1490/1843/1339 1316/1000/1174\\nf 1491/1844/1340 1318/1002/1176 1209/1845/1073\\nf 1209/1845/1073 1319/1846/1979 1491/1844/1340\\nf 1162/871/1045 1209/1845/1073 1318/1002/1176\\nf 1188/877/1051 1521/1847/1372 1355/1038/1212\\nf 1521/1847/1372 1188/877/1051 1356/1039/1213\\nf 1356/1039/1213 1354/1037/1211 1522/1848/1373\\nf 1522/1848/1373 1354/1037/1211 1181/872/1046\\nf 1181/872/1046 1364/1824/1220 1522/1848/1373\\nf 1523/1849/1374 1323/1006/1180 1314/998/1172\\nf 1314/998/1172 1313/997/1171 1523/1849/1374\\nf 1359/1850/1984 1355/1851/1212 1521/1852/1372\\nf 1355/1851/1212 1359/1850/1984 1818/1853/1666\\nf 1360/1854/1981 1818/1853/1666 1359/1850/1984\\nf 1818/1853/1666 1360/1854/1981 1224/1855/1088\\nf 1361/1823/1978 1283/1839/1983 1526/1821/1976\\nf 1269/956/1130 1284/967/1141 1457/1840/1308\\nf 1457/1840/1308 1270/957/1131 1269/956/1130\\nf 1458/1841/1309 1283/1839/1983 1282/1042/1216\\nf 1282/1042/1216 1271/958/1132 1458/1841/1309\\nf 1267/954/1128 1449/1835/1301 1459/1842/1376\\nf 1459/1842/1376 1268/955/1129 1267/954/1128\\nf 1265/952/1126 1452/1837/1304 1450/1836/1302\\nf 1450/1836/1302 1274/1043/1217 1265/952/1126\\nf 1526/1856/1976 1363/1049/1223 1180/1857/1977\\nf 1363/1049/1223 1365/1047/1221 1180/1857/1977\\nf 1676/1858/1528 1533/1859/1382 1393/1078/1252\\nf 1393/1078/1252 1394/1077/1251 1676/1858/1528\\nf 1393/1078/1252 1319/1828/1979 1395/1076/1250\\nf 1396/1081/1255 1529/1860/1985 1397/1079/1253\\nf 1691/1861/1542 1676/1858/1528 1394/1077/1251\\nf 1394/1077/1251 1398/1080/1254 1691/1861/1542\\nf 1409/1092/1266 1411/1210/1384 1525/1862/1986\\nf 1525/1862/1986 1411/1210/1384 1412/1211/1385\\nf 1412/1211/1385 1360/1863/1981 1525/1862/1986\\nf 1403/1086/1260 1402/1085/1259 1417/1864/1987\\nf 1417/1864/1987 1413/1095/1269 1403/1086/1260\\nf 1414/1094/1268 1229/1865/1092 1416/1097/1271\\nf 1413/1095/1269 1230/1866/1093 1229/1865/1092\\nf 1229/1865/1092 1414/1094/1268 1413/1095/1269\\nf 1413/1095/1269 1417/1864/1987 1231/1867/1094\\nf 1231/1867/1094 1230/1866/1093 1413/1095/1269\\nf 1231/1867/1094 1417/1864/1987 1528/1868/1988\\nf 1231/1867/1094 1528/1868/1988 1233/1869/1095\\nf 1417/1864/1987 1418/1164/1338 1419/1204/1378\\nf 1452/1130/1304 1275/1870/1219 1441/1119/1293\\nf 1276/1871/1135 1453/1872/1982 1447/1125/1299\\nf 1447/1125/1299 1448/1126/1300 1276/1871/1135\\nf 1447/1125/1299 1453/1872/1982 1277/1873/1136\\nf 1277/1873/1136 1439/1117/1291 1447/1125/1299\\nf 1439/1117/1291 1277/1873/1136 1259/946/1120\\nf 1283/1874/1983 1456/1133/1307 1363/1049/1223\\nf 1284/1875/1141 1459/1202/1376 1442/1120/1294\\nf 1442/1120/1294 1444/1122/1296 1284/1875/1141\\nf 1418/1164/1338 1417/1864/1987 1402/1085/1259\\nf 1313/1876/1171 1316/1877/1174 1488/1173/1347\\nf 1488/1173/1347 1489/1172/1346 1313/1876/1171\\nf 1393/1878/1252 1492/1167/1341 1491/1166/1340\\nf 1491/1166/1340 1319/1879/1979 1393/1878/1252\\nf 1521/1198/1372 1356/1880/1213 1373/1056/1230\\nf 1519/1196/1370 1373/1056/1230 1356/1880/1213\\nf 1356/1880/1213 1522/1199/1373 1519/1196/1370\\nf 1523/1200/1374 1313/1876/1171 1489/1172/1346\\nf 1359/1850/1984 1521/1852/1372 1520/1881/1371\\nf 1520/1881/1371 1963/1882/1810 1359/1850/1984\\nf 1360/1854/1981 1359/1850/1984 1963/1882/1810\\nf 1963/1882/1810 1525/1883/1986 1360/1854/1981\\nf 1363/1049/1223 1526/1856/1976 1283/1874/1983\\nf 1457/1134/1308 1284/1875/1141 1444/1122/1296\\nf 1456/1133/1307 1283/1874/1983 1458/1135/1309\\nf 1448/1126/1300 1441/1119/1293 1275/1870/1219\\nf 1275/1870/1219 1276/1871/1135 1448/1126/1300\\nf 1528/1868/1988 1692/1884/1989 1397/1885/1253\\nf 1528/1868/1988 1397/1885/1253 1529/1886/1985\\nf 1528/1868/1988 1529/1886/1985 1233/1869/1095\\nf 1233/921/1095 1529/1887/1985 1232/922/1096\\nf 1232/922/1096 1529/1887/1985 1530/1888/1990\\nf 1232/922/1096 1530/1888/1990 1101/794/968\\nf 1396/1829/1255 1211/1830/1980 1530/1889/1990\\nf 1530/1889/1990 1529/1860/1985 1396/1829/1255\\nf 1530/1889/1990 1211/1830/1980 1179/1831/1044\\nf 1179/1831/1044 1101/1890/968 1530/1889/1990\\nf 1691/1861/1542 1398/1080/1254 1397/1079/1253\\nf 1397/1079/1253 1692/1891/1989 1691/1861/1542\\nf 1490/1843/1339 1317/1001/1175 1318/1002/1176\\nf 1318/1002/1176 1491/1844/1340 1490/1843/1339\\nf 1316/1877/1174 1490/1165/1339 1493/1168/1342\\nf 1493/1168/1342 1488/1173/1347 1316/1877/1174\\nf 1323/1006/1180 1523/1849/1374 282/244/276\\nf 282/1738/276 1523/1200/1374 1498/1175/1349\\nf 1498/1175/1349 479/437/469 282/1738/276\\nf 1492/1167/1341 1393/1878/1252 1533/1208/1382\\nf 1525/1862/1986 1392/1075/1249 1409/1092/1266\\nf 1225/1209/1383 1412/1833/1385 1416/1834/1271\\nf 1416/1834/1271 1228/917/1091 1225/1209/1383\\nf 1692/1884/1989 1528/1868/1988 1419/1204/1378\\nf 1419/1204/1378 1527/1203/1377 1692/1884/1989\\nf 1419/1204/1378 1528/1868/1988 1417/1864/1987\\nf 1552/1230/1404 1644/1892/1494 1550/1228/1402\\nf 1544/1222/1396 1546/1224/1398 1643/1893/1493\\nf 1643/1893/1493 1553/1231/1405 1544/1222/1396\\nf 1553/1231/1405 1645/1894/1495 1543/1221/1395\\nf 1554/1233/1407 1543/1221/1395 1645/1894/1495\\nf 1645/1894/1495 1555/1234/1408 1554/1233/1407\\nf 1555/1234/1408 1645/1894/1495 1629/1895/1481\\nf 1629/1895/1481 1557/1235/1409 1555/1234/1408\\nf 1540/1218/1392 1641/1896/1496 1558/1236/1410\\nf 1560/1238/1412 1559/1237/1411 1652/1897/1504\\nf 1652/1897/1504 1561/1240/1414 1560/1238/1412\\nf 1562/1239/1413 1563/1241/1415 1660/1898/1511\\nf 1564/1242/1416 1652/1897/1504 1559/1237/1411\\nf 1586/1264/1438 1593/1278/1452 1687/1899/1991\\nf 1687/1899/1991 1592/1270/1444 1586/1264/1438\\nf 1591/1269/1443 1592/1270/1444 1687/1899/1991\\nf 1591/1269/1443 1687/1899/1991 1590/1268/1442\\nf 1658/1336/1510 1687/1899/1991 1593/1278/1452\\nf 1593/1278/1452 1594/1280/1454 1658/1336/1510\\nf 1595/1271/1445 1657/1900/1509 1658/1336/1510\\nf 1658/1336/1510 1594/1280/1454 1595/1271/1445\\nf 1596/1274/1448 1597/1293/1467 1657/1900/1509\\nf 1657/1900/1509 1595/1271/1445 1596/1274/1448\\nf 1660/1898/1511 1611/1288/1462 1562/1239/1413\\nf 1611/1288/1462 1660/1898/1511 1612/1289/1463\\nf 1616/1296/1470 1552/1901/1404 1617/1294/1468\\nf 1692/1884/1989 1527/1203/1377 1624/1302/1476\\nf 1640/1323/1497 1641/1322/1496 1557/1902/1409\\nf 1557/1902/1409 1629/1307/1481 1640/1323/1497\\nf 1553/1903/1405 1630/1308/1482 1642/1318/1492\\nf 1552/1901/1404 1616/1296/1470 1635/1313/1487\\nf 1635/1313/1487 1644/1320/1494 1552/1901/1404\\nf 1642/1318/1492 1645/1321/1495 1553/1903/1405\\nf 1646/1324/1498 1558/1904/1410 1641/1322/1496\\nf 1558/1904/1410 1646/1324/1498 1647/1327/1501\\nf 1647/1327/1501 1564/1905/1416 1558/1904/1410\\nf 1564/1905/1416 1647/1327/1501 1651/1329/1503\\nf 1652/1330/1504 1564/1905/1416 1651/1329/1503\\nf 1656/1334/1508 1657/1335/1509 1597/1906/1467\\nf 1656/1334/1508 1597/1906/1467 1654/1332/1506\\nf 1654/1332/1506 1597/1906/1467 1615/1907/1466\\nf 1615/1907/1466 1614/1908/1465 1654/1332/1506\\nf 1654/1332/1506 1614/1908/1465 1655/1333/1507\\nf 1614/1908/1465 1613/1909/1464 1655/1333/1507\\nf 1613/1909/1464 1653/1331/1505 1655/1333/1507\\nf 1653/1331/1505 1613/1909/1464 1612/1910/1463\\nf 1561/1911/1414 1653/1331/1505 1659/1338/1512\\nf 1653/1331/1505 1561/1911/1414 1652/1330/1504\\nf 1612/1910/1463 1660/1337/1511 1653/1331/1505\\nf 1563/1912/1415 1561/1911/1414 1659/1338/1512\\nf 1660/1337/1511 1563/1912/1415 1659/1338/1512\\nf 1590/1268/1442 1687/1899/1991 1658/1336/1510\\nf 1679/1357/1531 1678/1356/1530 1690/1913/1541\\nf 1690/1913/1541 1688/1914/1539 1679/1357/1531\\nf 1617/1915/1468 1681/1359/1533 1680/1358/1532\\nf 1680/1358/1532 1689/1916/1540 1617/1915/1468\\nf 1681/1359/1533 1617/1915/1468 1552/1230/1404\\nf 1541/1219/1393 1557/1235/1409 1641/1896/1496\\nf 1641/1896/1496 1540/1218/1392 1541/1219/1393\\nf 1679/1357/1531 1688/1914/1539 1689/1916/1540\\nf 1689/1916/1540 1680/1358/1532 1679/1357/1531\\nf 1546/1224/1398 1550/1228/1402 1644/1892/1494\\nf 1644/1892/1494 1643/1893/1493 1546/1224/1398\\nf 1633/1311/1485 1630/1308/1482 1553/1903/1405\\nf 1553/1903/1405 1643/1319/1493 1633/1311/1485\\nf 1691/1368/1542 1692/1917/1989 1690/1913/1541\\nf 1690/1913/1541 1678/1356/1530 1691/1368/1542\\nf 1692/1884/1989 1624/1302/1476 1623/1301/1475\\nf 1623/1301/1475 1690/1367/1541 1692/1884/1989\\nf 1726/1404/1578 1800/1918/1649 1727/1402/1576\\nf 1796/1919/1645 1795/1920/1644 1722/1398/1572\\nf 1722/1398/1572 1721/1397/1571 1796/1919/1645\\nf 1729/1405/1579 1722/1398/1572 1795/1920/1644\\nf 1795/1920/1644 1841/1921/1690 1729/1405/1579\\nf 1742/1419/1593 1743/1418/1592 1842/1922/1691\\nf 1842/1922/1691 1844/1923/1693 1742/1419/1593\\nf 1758/1434/1608 1757/1433/1607 1845/1924/1694\\nf 1845/1924/1694 1757/1433/1607 1753/1429/1603\\nf 1753/1429/1603 1843/1925/1692 1845/1924/1694\\nf 1843/1925/1692 1753/1429/1603 1745/1421/1595\\nf 1759/1435/1609 1742/1419/1593 1844/1923/1693\\nf 1844/1923/1693 1843/1925/1692 1759/1435/1609\\nf 1843/1925/1692 1745/1421/1595 1759/1435/1609\\nf 1760/1436/1610 1847/1926/1992 1762/1442/1616\\nf 1760/1436/1610 1746/1422/1596 1847/1926/1992\\nf 1763/1440/1614 1846/1927/1695 1764/1438/1612\\nf 1763/1440/1614 1766/1441/1615 1847/1926/1992\\nf 1847/1926/1992 1766/1441/1615 1767/1443/1617\\nf 1767/1443/1617 1762/1442/1616 1847/1926/1992\\nf 1750/1928/1600 1769/1515/1689 1749/1929/1599\\nf 1769/1515/1689 1764/1438/1612 1846/1927/1695\\nf 1846/1927/1695 1749/1929/1599 1769/1515/1689\\nf 1801/1476/1650 1726/1930/1578 1817/1931/1665\\nf 1817/1931/1665 1802/1477/1651 1801/1476/1650\\nf 1818/1932/1666 1224/914/1088 1811/1486/1660\\nf 1811/1486/1660 1819/1933/1667 1818/1932/1666\\nf 1802/1477/1651 1817/1931/1665 1812/1487/1661\\nf 1821/1934/1671 1808/1483/1657 1809/1484/1658\\nf 1809/1484/1658 1813/1522/1696 1821/1934/1671\\nf 1821/1497/1671 1813/1935/1696 1822/1495/1669\\nf 1816/1490/1664 1812/1936/1661 1817/1491/1665\\nf 1756/1937/1606 1833/1507/1681 1834/1508/1682\\nf 1834/1508/1682 1755/1938/1605 1756/1937/1606\\nf 1755/1938/1605 1834/1508/1682 1835/1509/1683\\nf 1755/1938/1605 1835/1509/1683 1836/1510/1684\\nf 1836/1510/1684 1754/1939/1604 1755/1938/1605\\nf 1754/1939/1604 1836/1510/1684 1837/1511/1685\\nf 1837/1511/1685 1751/1940/1601 1754/1939/1604\\nf 1837/1511/1685 1750/1928/1600 1751/1940/1601\\nf 1750/1928/1600 1837/1511/1685 1838/1512/1686\\nf 1769/1515/1689 1750/1928/1600 1838/1512/1686\\nf 1845/1520/1694 1833/1507/1681 1758/1941/1608\\nf 1833/1507/1681 1756/1937/1606 1758/1941/1608\\nf 1763/1440/1614 1746/1422/1596 1846/1521/1695\\nf 1746/1422/1596 1763/1440/1614 1847/1926/1992\\nf 1800/1918/1649 1796/1919/1645 1721/1397/1571\\nf 1721/1397/1571 1727/1402/1576 1800/1918/1649\\nf 1726/1930/1578 1801/1476/1650 1799/1474/1648\\nf 1799/1474/1648 1800/1475/1649 1726/1930/1578\\nf 1808/1483/1657 1821/1934/1671 1819/1933/1667\\nf 1819/1933/1667 1811/1486/1660 1808/1483/1657\\nf 1813/1935/1696 1812/1936/1661 1816/1490/1664\\nf 1816/1490/1664 1822/1495/1669 1813/1935/1696\\nf 1743/1418/1592 1729/1405/1579 1841/1921/1690\\nf 1841/1921/1690 1842/1922/1691 1743/1418/1592\\nf 1876/1551/1725 1946/1942/1794 1880/1555/1729\\nf 1883/1559/1733 1995/1943/1843 1946/1942/1794\\nf 1946/1942/1794 1876/1551/1725 1883/1559/1733\\nf 1995/1943/1843 1883/1559/1733 1895/1570/1744\\nf 1895/1570/1744 1996/1944/1844 1995/1943/1843\\nf 1900/1575/1749 1902/1577/1751 1920/1945/1842\\nf 1920/1945/1842 1994/1946/1841 1900/1575/1749\\nf 1900/1575/1749 1994/1946/1841 1903/1579/1753\\nf 1994/1946/1841 1905/1580/1754 1903/1579/1753\\nf 1904/1578/1752 1905/1580/1754 1993/1947/1840\\nf 1993/1947/1840 1992/1948/1839 1904/1578/1752\\nf 1904/1578/1752 1992/1948/1839 1906/1582/1756\\nf 1999/1949/1847 1907/1581/1755 1906/1582/1756\\nf 1992/1948/1839 1999/1949/1847 1906/1582/1756\\nf 1904/1578/1752 1907/1581/1755 1998/1950/1846\\nf 1998/1950/1846 1898/1573/1747 1904/1578/1752\\nf 1908/1583/1757 1998/1950/1846 1997/1951/1845\\nf 1997/1951/1845 1909/1584/1758 1908/1583/1757\\nf 1998/1950/1846 1908/1583/1757 1898/1573/1747\\nf 1914/1593/1767 1915/1592/1766 2000/1952/1993\\nf 2000/1952/1993 1916/1595/1769 1914/1593/1767\\nf 1917/1590/1764 1916/1595/1769 2000/1952/1993\\nf 2000/1952/1993 1913/1588/1762 1917/1590/1764\\nf 1920/1668/1842 1902/1953/1751 1921/1594/1768\\nf 1921/1594/1768 1902/1953/1751 1915/1592/1766\\nf 1945/1619/1793 1880/1954/1729 1946/1620/1794\\nf 1945/1619/1793 1950/1624/1798 1881/1955/1730\\nf 1881/1955/1730 1880/1954/1729 1945/1619/1793\\nf 1953/1627/1801 1970/1956/1818 1951/1625/1799\\nf 1525/1862/1986 1962/1638/1812 1961/1635/1809\\nf 1961/1635/1809 1392/1075/1249 1525/1862/1986\\nf 1962/1638/1812 1525/1862/1986 1963/1636/1810\\nf 1974/1957/1994 1953/1627/1801 1952/1626/1800\\nf 1952/1626/1800 1957/1631/1805 1974/1957/1994\\nf 1965/1639/1813 1974/1957/1994 1957/1631/1805\\nf 1970/1644/1818 1953/1958/1801 1967/1641/1815\\nf 1971/1650/1824 2001/1959/1848 1964/1960/1811\\nf 1964/1960/1811 1972/1646/1820 1971/1650/1824\\nf 2001/1959/1848 1971/1650/1824 1973/1649/1823\\nf 1973/1649/1823 1965/1961/1813 2001/1959/1848\\nf 1953/1958/1801 1974/1962/1994 1968/1642/1816\\nf 1968/1642/1816 1967/1641/1815 1953/1958/1801\\nf 1993/1666/1840 1905/1963/1754 1987/1660/1834\\nf 1988/1661/1835 1987/1660/1834 1905/1963/1754\\nf 1905/1963/1754 1994/1667/1841 1988/1661/1835\\nf 1998/1672/1846 1907/1964/1755 1940/1614/1788\\nf 1984/1657/1831 1940/1614/1788 1907/1964/1755\\nf 1907/1964/1755 1999/1673/1847 1984/1657/1831\\nf 1901/1576/1750 1915/1965/1766 1902/1577/1751\\nf 1901/1576/1750 1899/1574/1748 1915/1965/1766\\nf 2000/1952/1993 1915/1965/1766 1899/1574/1748\\nf 1899/1574/1748 1913/1588/1762 2000/1952/1993\\nf 1950/1624/1798 1951/1625/1799 1970/1956/1818\\nf 1970/1956/1818 1881/1955/1730 1950/1624/1798\\nf 1963/1966/1810 1520/1197/1371 1972/1646/1820\\nf 1972/1646/1820 1964/1960/1811 1963/1966/1810\\nf 1968/1642/1816 1974/1962/1994 1965/1961/1813\\nf 1965/1961/1813 1973/1649/1823 1968/1642/1816\\nf 1909/1584/1758 1997/1951/1845 1996/1944/1844\\nf 1996/1944/1844 1895/1570/1744 1909/1584/1758\\n\";\n  const mesh = new Mesh(source);\n  \n    const materialSource = \"# \\n# \\n\\nnewmtl cat\\nNs 96.078431\\nKa 1.000000 1.000000 1.000000\\nKd 0.640000 0.640000 0.640000\\nKs 0.000000 0.000000 0.000000\\nKe 0.000000 0.000000 0.000000\\nNi 1.000000\\nd 1.000000\\nillum 1\\nmap_Kd Cat_D.tga\\nmap_Bump Cat_N.tga\\n\";\n    const materialLibrary = new MaterialLibrary(materialSource);\n    mesh.addMaterialLibrary(materialLibrary);\n    \n  export default mesh;","import basicLightShader from 'src/WebGL/shaders/basicLight.js';\nimport finalPassShader from \"src/WebGL/shaders/finalPass.js\";\nimport skyShader from 'src/WebGL/shaders/sky.js';\nimport simpleShader from \"src/WebGL/shaders/simpleColor.js\";\nimport fullScreenShader from \"src/WebGL/shaders/fullscreen.js\";\nimport zenTimeShader from \"src/WebGL/shaders/shadertoy_zentime.js\";\nimport thatCatShader from \"src/WebGL/shaders/shadertoy_thatcat.js\";\nimport noise64 from \"src/external/textures/noise64.png\";\nimport wood from \"src/external/textures/wood.png\";\nimport catDiffuse from \"src/external/models/Cat-1/Cat_D.png\";\nimport catNormal from \"src/external/models/Cat-1/Cat_N.png\";\nimport catSpecular from \"src/external/models/Cat-1/Cat_S.png\";\nimport catModel from \"src/external/models/Cat-1/Cat.obj\";\n\nconst appData = {\n    // Shaders\n    shaders: {\n      \"3D\": {\n        \"BasicLight\": basicLightShader,\n        \"FinalPass\":  finalPassShader,\n        \"SimpleColor\": simpleShader,\n        \"Sky\": skyShader\n      },\n      \"2D\": {\n        \"FullScreen\": fullScreenShader,\n        \"ZenTime\": zenTimeShader,\n        \"ThatCat\": thatCatShader,\n      }\n    },\n    currentShader: {\n      \"2D\": \"ZenTime\",\n      \"3D\": \"BasicLight\"\n    },\n    model: {\n      \"modelType\": \"custom\",\n      \"model\": catModel,\n      \"textures\": {\n        \"diffuseMap\": {\n          path: catDiffuse,\n          img: null,\n          desc: \"Diffuse Map\"\n        },\n        \"normalMap\": {\n          path: catNormal,\n          img: null,\n          desc: \"Normal Map\"\n        },\n        \"specularMap\": {\n          path: catSpecular,\n          img: null,\n          desc: \"Specular Map\"\n        }\n      },\n    },\n    images: {\n      \"noise64\": {\n        path: noise64,\n        img: null\n      },\n      \"wood\": {\n        path: wood,\n        img: null\n      }\n    }\n}\nconst appStore = {\n  get: () => Object.assign({}, appData),\n  getById: id => Object.assign({}, appData[id]),\n  setDataById: (id, newData) => {\n    appData[id] = Object.assign({}, {...appData[id], ...newData});\n  }\n}\n\nObject.freeze(appStore);\n\nexport default appStore;\n\n  \n","var vertex =`#version 300 es\n  precision mediump float;\n  uniform mat4 u_model;\n  uniform mat4 u_view;\n  uniform mat4 u_projection;\n  uniform mat4 u_normalMatrix;\n  uniform vec3 u_lightPos;\n  uniform vec3 u_cameraPos;\n  uniform sampler2D u_normal;\n\n  in vec4 a_position;\n  in vec3 a_normal;\n  in vec2 a_texCoord;\n\n  out vec2 v_texCoord;\n  out vec3 v_normal;\n  out vec3 v_fragPos;\n\n  void main(){\n    gl_Position = u_projection * u_view * u_model * a_position;\n    vec3 texNor = texture(u_normal, v_texCoord).rgb;\n    v_normal = mat3(u_normalMatrix) * a_normal; //Transform to world space\n    v_fragPos = vec3(u_model * a_position); //Transform to world space\n    v_texCoord = a_texCoord;\n  }\n  `;\n\nvar fragment = `#version 300 es\n  precision mediump float;\n  uniform vec3 u_lightPos;\n  uniform vec3 u_cameraPos;\n  uniform vec3 u_lightColor;\n  uniform vec3 u_specularColor;\n  uniform sampler2D u_sample;\n  uniform sampler2D u_specular;\n\n  in vec3 v_normal;\n  in vec3 v_fragPos;\n  in vec2 v_texCoord;\n  out vec4 outColor;\n  void main(){\n    vec3 texDiff = texture(u_sample, v_texCoord).rgb;\n    vec3 texSpec = texture(u_specular, v_texCoord).rgb;\n\n    vec3 normal = normalize(v_normal);\n    //calculate ambient light\n    vec3 ambientColor = 0.05 * u_lightColor * texDiff;\n    //calculate diffuse light\n    vec3 lightDir = normalize(u_lightPos - v_fragPos);\n    float nDotL = max(dot(lightDir, normal), 0.0);\n    vec3 diffuseColor = texDiff * nDotL;\n    //calculate specular light\n    vec3 viewDir = normalize(u_cameraPos-v_fragPos);\n    vec3 reflectDir = reflect(-lightDir, normal);\n    float spec = pow(max(dot(reflectDir, viewDir), 0.0), 64.0);\n    vec3 specularColor = u_specularColor * spec * texSpec.r;\n    outColor = vec4(ambientColor + diffuseColor + specularColor , 1.0);\n  }\n  `;\n  \nexport default {\n  vertex,\n  fragment\n}\n","var vertex =`#version 300 es\n  precision mediump float;\n  uniform mat4 u_model;\n  uniform mat4 u_view;\n  uniform mat4 u_projection;\n  uniform mat4 u_normalMatrix;\n\n  in vec4 a_position;\n  in vec3 a_normal;\n  in vec2 a_texCoord;\n\n  out vec2 v_texCoord;\n  out vec3 v_normal;\n  out vec3 v_fragPos;\n\n  void main(){\n    gl_Position = u_projection * u_view * u_model * a_position;\n    v_normal = mat3(u_normalMatrix) * a_normal; //Transform to world space\n    v_fragPos = vec3(u_model * a_position); //Transform to world space\n    v_texCoord = a_texCoord;\n  }\n  `;\n\nvar fragment = `#version 300 es\n  precision mediump float;\n  uniform vec3 u_lightPos;\n  uniform vec3 u_cameraPos;\n  uniform vec3 u_lightColor;\n  uniform vec3 u_color;\n  uniform sampler2D u_sample;\n\n  in vec3 v_normal;\n  in vec3 v_fragPos;\n  in vec2 v_texCoord;\n  out vec4 outColor;\n  void main(){\n    vec3 normal = normalize(v_normal);\n    //calculate ambient light\n    vec3 ambientColor = 0.05 * u_lightColor * u_color;\n    vec3 diffColor = u_color;\n    //calculate diffuse light\n    vec3 lightDir = normalize(u_lightPos - v_fragPos);\n    float nDotL = max(dot(lightDir, normal), 0.0);\n    vec3 diffuseColor = diffColor * nDotL;\n    //calculate specular light\n    vec3 viewDir = normalize(u_cameraPos-v_fragPos);\n    vec3 reflectDir = reflect(-lightDir, normal);\n    float spec = pow(max(dot(reflectDir, viewDir), 0.0), 64.0);\n    vec3 specularColor = u_lightColor * spec;\n    outColor = vec4(ambientColor + diffuseColor + specularColor , 1.0);\n  }\n  `;\n  \nexport default {\n  vertex,\n  fragment\n}\n","var vertex =\n    `#version 300 es\n    precision mediump float;\n\n    in vec4 a_position;\n    in vec2 a_texCoord;\n    in vec3 a_normal;\n\n    out vec2 v_texCoord;\n    out vec3 v_normal;\n    out vec4 v_fragPos;\n\n    void main(){\n      v_fragPos = a_position;\n      v_fragPos.z = 1.0; // force z to be 1.0 for later transformation\n      v_normal = a_normal;\n      v_texCoord = a_texCoord;\n      gl_Position = a_position;\n      gl_Position.z = gl_Position.w;\n    }\n    `;\n\nvar fragment =\n    `#version 300 es\n    #define SUN_COLOR vec3(0.6,0.5,0.2)\n    #define SUN_GLOW vec3(0.7,0.4,0.4)\n    #define SKY_COLOR vec3(0.5,0.6,0.9)\n    #define SUN_DIR vec3(0.0, 0.5, -1.0)\n\n    precision mediump float;\n    uniform sampler2D u_noisemap;\n    uniform float u_time;\n    uniform mat4 u_viewProjectInvMatrix;\n    in vec4 v_fragPos;\n    out vec4 outColor;\n\n    float noise(in vec2 uv) {\n        return texture(u_noisemap, uv/64.0).r;\n    }\n\n    float smoothNoise(in vec2 uv) {\n        vec2 luv = fract(uv); //range from 0.0 to 1.0\n        vec2 id = floor(uv); //the integer part of uv, 0, 1, 2\n        luv = luv*luv*(3.0 - 2.0*luv); //similar to smoothstep\n\n        //get values from the cordinates of a square\n        float bl = noise(id);\n        float br = noise(id + vec2(1.0, 0.0));\n        float tl = noise(id + vec2(0.0, 1.0));\n        float tr = noise(id + vec2(1.0, 1.0));\n\n        float b = mix(bl, br, luv.x); //interpolate between bl and br\n        float t = mix(tl, tr, luv.x); //interpolate between tl and tr\n\n        return mix(b, t, luv.y);\n    }\n\n    float fbm4(in vec2 uv) {\n        float amp = 0.5;\n        float f = 2.0;\n        float h = 0.0;\n        float a = 0.0;\n        for (int i = 0; i < 4; i++){\n            h += amp * smoothNoise(uv*f);\n            a += amp;\n            amp *= 0.5;\n            f *= 2.0;\n        }\n\n        h /= a;\n        return h;\n    }\n\n    vec3 calcSky(vec3 skyColor, vec3 cloudColor, vec2 uv) {\n        vec3 col = vec3(0.0);\n        // speed\n        float v = 0.001;\n        // layer1\n        vec2 scale = uv * 2.0;\n        vec2 turbulence = 0.008 * vec2(noise(vec2(uv.x * 10.0, uv.y *10.0)), noise(vec2(uv.x * 10.0, uv.y * 10.0)));\n        scale += turbulence;\n    \t  float n1 = fbm4(uv);\n\n        col = mix( skyColor, cloudColor, smoothstep(0.2, 0.8, n1));\n        col = min(col, vec3(1.0));\n        return col;\n    }\n\n    vec3 skybox() {\n      vec4 t = u_viewProjectInvMatrix * v_fragPos;\n      vec3 rd = normalize(t.xyz / t.w);\n      // A simple way to place some clouds on a distant plane above the terrain -- Based on something IQ uses.\n      const float SC = 1e5;\n      // Trace out to a distant XZ plane.\n      float dist = (SC - 0.0)/rd.y;\n      vec2 p = (dist*rd).xz;\n\n      vec3 sunDir = normalize(SUN_DIR);\n      float sun = max(dot(sunDir, rd),0.0);\n      vec3 skyCol = vec3(0.0);\n      vec3 cloudCol = vec3(1.0);\n\n      skyCol += mix(SUN_GLOW, SKY_COLOR, 2.0*abs(rd.y));//horizontal brightness\n      skyCol += 0.5*SUN_COLOR*pow(sun, 64.0);\n      skyCol += 0.4*SUN_GLOW*pow(sun, 32.0);\n\n      skyCol = calcSky(skyCol, cloudCol, p/SC);\n      float grad = smoothstep(0.0, 0.3, rd.y);\n      skyCol = mix(SUN_GLOW*vec3(0.4,0.6,0.6), skyCol, grad);\n\n      return skyCol;\n    }\n\n    void main(){\n      outColor = vec4(skybox(), 1.0);\n    }\n    `;\n\nexport default {\n    vertex,\n    fragment\n}\n","var vertex =\n`#version 300 es\n  precision mediump float;\n  in vec4 a_position;\n  in vec2 a_texCoord;\n  in vec3 a_normal;\n  out vec2 v_texCoord;\n  out vec3 v_normal;\n  out vec4 v_fragPos;\n\n  void main(){\n    gl_Position = a_position;\n    v_texCoord = a_texCoord;\n    v_normal = a_normal;\n    v_fragPos = a_position;\n  }\n`;\n\nvar fragment =\n`#version 300 es\nprecision mediump float;\nuniform sampler2D u_sample;\nuniform vec2 u_mouse;\nuniform float u_time;\nin vec2 v_texCoord;\nin vec3 v_normal;\nin vec4 v_fragPos;\nout vec4 outColor;\n\nvoid main(){\n  vec3 color = texture(u_sample, v_texCoord).rgb;\n  outColor = vec4(u_mouse, 0.0, 1.0);\n}\n`;\n\nexport default {\n  vertex,\n  fragment\n}","var vertex =\n`#version 300 es\n  precision mediump float;\n  in vec4 a_position;\n  in vec2 a_texCoord;\n  in vec3 a_normal;\n  out vec2 v_texCoord;\n  out vec3 v_normal;\n  out vec4 v_fragPos;\n\n  void main(){\n    gl_Position = a_position;\n    v_texCoord = a_texCoord;\n    v_normal = a_normal;\n    v_fragPos = a_position;\n  }\n`;\n\nvar fragment = `#version 300 es\n    precision mediump float;\n\n    uniform sampler2D u_sample;\n    uniform vec2 u_mouse;\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    \n    in vec2 v_texCoord;\n    in vec3 v_normal;\n    in vec4 v_fragPos;\n    out vec4 outColor;\n\n    const float TURBULENCE = 0.04;\n    //noise function from iq: https://www.shadertoy.com/view/Msf3WH\n    vec2 hash( vec2 p ) \n    {\n        p = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) );\n        return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n    }\n\n    float noise( in vec2 p )\n    {\n        const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n        const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n        vec2  i = floor( p + (p.x+p.y)*K1 );\n        vec2  a = p - i + (i.x+i.y)*K2;\n        float m = step(a.y,a.x); \n        vec2  o = vec2(m,1.0-m);\n        vec2  b = a - o + K2;\n        vec2  c = a - 1.0 + 2.0*K2;\n        vec3  h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n        vec3  n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n        return dot( n, vec3(70.0) );\n    }\n\n    const mat2 m2 = mat2(1.6,  1.2, -1.2,  1.6);\n\n    float fbm(vec2 p) {\n        float amp = 0.5;\n        float h = 0.0;\n        for (int i = 0; i < 8; i++) {\n            float n = noise(p);\n            h += amp * n;\n            amp *= 0.5;\n            p = m2 * p ;\n        }\n        \n        return  0.5 + 0.5*h;\n    }\n    vec3 smokeEffect(vec2 uv) {\n        vec3 col = vec3(0.0);\n        // time scale\n        float v = 0.0002;\n        vec3 smoke = vec3(1.0);\n        vec2 scale = uv * 0.5 ;\n        vec2 turbulence = TURBULENCE * vec2(noise(vec2(uv.x * 3.5, uv.y * 3.2)), noise(vec2(uv.x * 2.2, uv.y * 1.5)));\n        scale += turbulence;\n        float n1 = fbm(vec2(scale.x - abs(sin(u_time * v * 2.0)), scale.y - 50.0 * abs(sin(u_time * v))));\n        col =  mix( col, smoke, smoothstep(0.5, 0.9, n1));\n        col = clamp(col, vec3(0.0), vec3(1.0));\n        return col;\n    }\n\n    float circle(vec2 p, float r) {\n        float c = length(p) - r;\n        return smoothstep(r + 0.01, r, c);\n    }\n\n    float sinwave(vec2 p, float scale, float amp) {\n        float wave = cos(p.x * scale + 0.5) + 0.25 * cos(p.x * scale * scale);\n        float s = smoothstep(amp + 0.01, amp, amp * wave - p.y);\n        return s;\n    }\n\n    void main() {\n        vec2 uv = v_texCoord;\n        vec2 p = v_fragPos.xy;\n\n        vec3 col = vec3(0.0);    \n        vec3 smoke = smokeEffect(p);\n        vec3 tex = texture(u_sample, uv).rgb;\n        \n        vec3 background = 0.7 * vec3(238.0,232.0,170.0)/255.0;\n        vec3 mountCol = mix(vec3(102.0,153.0,153.0)/255.0, vec3(153.0,204.0,0.0)/255.0, p.y + 0.5);\n        vec3 sunCol = 0.85 * mix(vec3(1.0, 0.0, 0.0), vec3(1.0, 1.0, 0.0), p.y + 0.5);\n        vec3 cloudCol = vec3(0.9);\n        float t = u_time * 0.05;\n        vec2 sunPos = p - vec2(0.4 * cos(t), 0.4 * sin(t));\n        float sun = circle(sunPos, 0.1); \n        float mountain1 = sinwave(p - vec2(0.5, -0.1), 3.0, 0.1);\n        float mountain2 = sinwave(p, 3.0, 0.2);\n        float cloud = 1.0 - smoke.r;\n        col = mix(background, sunCol, sun);\n        col = mix(mountCol * 0.9, col, mountain1);\n        col = mix(cloudCol, col, cloud);\n        col = mix(mountCol, col, mountain2);\n        \n        col *= 0.2 + 0.8 * pow(32.0 * uv.x * uv.y * (1.0 - uv.x) * (1.0 - uv.y), 0.2);\n        outColor = vec4(col ,1.0);\n    }\n`;\n  \nexport default {\n    vertex,\n    fragment\n}","var vertex =\n`#version 300 es\n  precision mediump float;\n  in vec4 a_position;\n  in vec2 a_texCoord;\n  in vec3 a_normal;\n  out vec2 v_texCoord;\n  out vec3 v_normal;\n  out vec4 v_fragPos;\n\n  void main(){\n    gl_Position = a_position;\n    v_texCoord = a_texCoord;\n    v_normal = a_normal;\n    v_fragPos = a_position;\n  }\n`;\n\nvar fragment = `#version 300 es\nprecision mediump float;\n\nuniform sampler2D u_sample;\nuniform vec2 u_mouse;\nuniform float u_time;\nuniform vec2 u_resolution;\nin vec2 v_texCoord;\nin vec3 v_normal;\nin vec4 v_fragPos;\nout vec4 fragColor;\n\n#define PI 3.1416\n#define TERRAIN_PATTERN 4.0*sin(12.0*pos.x)+sin(20.0*pos.y)+sin(15.0*pos.z)\n#define SPEED aTime*0.3\n#define MAX_DIST 20.0\n#define MAX_STEP 80\n#define SUN_DIRECTION vec3(0.8,0.3,0.9)\n#define SUNLIGHT_INTENSITY vec3(6.0,5.5,4.0)\n#define SUNSET_COLOR vec3(0.7,0.2,0.1)\n#define SKY_COLOR vec3(0.25, 0.35, 0.6)\n#define TERRAIN_COLOR vec3(0.07,0.04,0.03)\n#define RIM_COLOR vec3(0.85,0.1,0.1)\n#define RIM_POWER 0.15\n#define AA_SIZE 1\n#define iTime u_time\n#define iResolution u_resolution\n\nfloat hash1(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * 0.013);\n    p3 += dot(p3, p3.yzx + 19.31);\n    return -1.0 + 2.0 * fract((p3.x + p3.y) * p3.z);\n}\n\nfloat noise(in vec2 x) {\n    vec2 p = floor(x);\n    vec2 w = fract(x);\n    \n    vec2 u = w*w*w*(w*(w*6.0-15.0)+10.0);\n    \n    float a = hash1(p+vec2(0,0));\n    float b = hash1(p+vec2(1,0));\n    float c = hash1(p+vec2(0,1));\n    float d = hash1(p+vec2(1,1));\n\n    float k0 = a;\n    float k1 = b - a;\n    float k2 = c - a;\n    float k4 = a - b - c + d;\n\n    return k0 + k1*u.x + k2*u.y + k4*u.x*u.y;\n}\n\nfloat sdSphere(in vec3 pos, in float r)\n{\n    return length(pos)-r;\n}\n\n//http://iquilezles.org/www/articles/ellipsoids/ellipsoids.htm\nfloat sdElipsoid(in vec3 pos, in vec3 r)\n{\n    float k0 = length(pos/r);\n    float k1 = length(pos/r/r);\n    return k0*(k0-1.0)/k1;\n}\n\nfloat sdStick(vec3 p, vec3 a, vec3 b, float r1, float r2) // approximated\n{\n    vec3 pa = p-a, ba = b-a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    float r = mix(r1, r2, h);\n\treturn length( pa - ba*h ) - r;\n}\n\nfloat sdTorus( vec3 p, vec2 t )\n{\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n\n//http://iquilezles.org/www/articles/smin/smin.htm\nfloat smin(in float a, in float b, in float k)\n{\n    float h = max( k - abs(a-b), 0.0);\n    return min(a,b) - h*h*0.25/k;\n}\n\nfloat smax(in float a, in float b, in float k)\n{\n    float h = max( k - abs(a-b), 0.0);\n    return max(a,b) + h*h*0.25/k;\n}\n\nvec4 sdUnion(vec4 d1, vec4 d2)\n{\n    return (d1.x<d2.x)? d1:d2;\n}\n\nvec4 map(in vec3 pos, float aTime)\n{\n    vec4 res = vec4(0.0, 0.0, 0.0, 0.0);\n    float t = fract(aTime);\n    float y = 3.0*t*(1.0-t); \n    vec3 cen = vec3(0.0,0.25+0.01*y,SPEED);\n    float sy = 0.8 + 0.2*y;\n    float sz = 1.0/sy;\n    vec3 r = vec3(0.35,0.32+0.02*sy,0.25+0.05*sz);\n    vec3 q = pos-cen;\n    vec3 h = q;\n    \n    //body\n    float d = sdElipsoid(q-vec3(0.0, 0.03, -0.09), r);\n    \n  \n    {\n    \n    //head\n    float hr = sin(aTime);\n    hr = 0.5*sign(hr)*smoothstep(0.5,1.0,abs(hr));\n    h.xz = mat2(cos(hr),sin(hr),-sin(hr),cos(hr))*h.xz;\n    \n    float d1 = sdElipsoid(h - vec3(0.0, 0.32, 0.01), vec3(0.28, 0.2, 0.18));\n    float d2 = sdElipsoid(h - vec3(0.0, 0.30, -0.07), vec3(0.2));\n    d2 = smin(d1, d2, 0.08);\n    d = smin(d, d2, 0.08);\n    \n    \n    vec3 sh = vec3(abs(h.x), h.yz);//symmetric along x\n    \n    //legs\n    vec3 shh = vec3(abs(h.x), h.y, abs(h.z+0.1));//symmetric along x and z\n    //animation settings\n    float t1 = fract(aTime+4.71*sign(h.x));\n    float y1 = 3.0*t1*(1.0-t1); \n    float offset = y1;\n    \n    d1 = sdStick(shh - vec3(0.11,-0.24,0.22), vec3(0.0,0.18,-0.1), vec3(0.0,-0.1,-0.15*offset), 0.08, 0.05); \n    d = smin(d, d1, 0.04);\n        \n    //nose\n    d1 = sdStick(h, vec3(0.0,0.41,0.12), vec3(0.0,0.37,0.18), 0.05, 0.03);\n    d = smin(d,d1,0.01);\n    \n    //ears\n    d2 = sdElipsoid(sh - vec3(0.15, 0.47, -0.05), vec3(0.06, 0.09, 0.04));\n    d = smin(d, d2, 0.08);\n    res = vec4(d,2.0,0.0,0.0);\n    \n    //tail\n    d2 = sdStick(h, vec3(0.0,-0.3,-0.1), vec3(-0.1*y,0.2,-0.55), 0.03, 0.05);\n    d = smin(d, d2, 0.06);\n    res = vec4(d,2.0,0.0,0.0);\n    \n    \n    //eyelids\n    vec3 elPos = sh - vec3(0.04,0.33,0.09);\n    d2 = sdStick(elPos, vec3(0.0,0.12,0.02), vec3(0.05,0.1,-0.02), 0.02, 0.02);\n   \td = smin(d, d2, 0.03);\n    res = vec4(d,2.0,0.0,0.0);\n    \n     \n    //eyes\n    float d5 = sdSphere(sh - vec3(0.065,0.4,0.108), 0.07);\n    res = sdUnion(res, vec4(d5,3.0,0.0,0.0));\n    \n    float eyeOffsetY = 0.01*smoothstep(0.0, 0.8,sin(aTime));\n    \n    d5 = sdSphere(sh - vec3(0.066,0.40+eyeOffsetY,0.124), 0.056);\n    res = sdUnion(res, vec4(d5,4.0,0.0,0.0));\n         \n    //mouth\n    float d6 = sdElipsoid(h - vec3(0.0,0.29,0.16), vec3(0.06,0.03,0.04));\n    float d7 = sdElipsoid(sh - vec3(0.035,0.32,0.175), vec3(0.055,0.036,0.04));\n    d6 = smin(d6,d7,0.01);\n    res = sdUnion(res, vec4(d6,6.0,0.0,0.0));\n    \n    //terrain\n    float fh = -0.1+0.05*(sin(2.2*pos.x) + sin(1.5*pos.z));\n    d1 = pos.y - fh;\n    d1 -= .01*noise(vec2(pos.x*10.0,pos.z*10.0));\n    if (d1<res.x) res = vec4(d1,1.0,0.0,0.0);\n    \n    //watermelon\n    float b = 5.0;\n    vec3 rep = vec3(mod(abs(pos.x),b)-3.5, pos.y, mod(abs(pos.z+1.5), b)-2.5);\n    vec2 id = vec2(floor(abs(pos.x)/b),floor((pos.z+1.5)/b));\n    float fid = id.x*13.3 + id.y*31.7;\n    float wr = 1.4+0.5*sin(fid*1.312);\n    \n    d2 = sdSphere(rep, wr);\n    if (d2<res.x) res = vec4(d2,8.0,0.0,0.0);\n \n    }\n    return res;\n}\n\nfloat calcOcclusion( in vec3 pos, in vec3 nor, in float aTime)\n{\n\tfloat occ = 0.0;\n    float sca = 1.0;\n    for( int i=0; i<4; i++ )\n    {\n        float h = 0.01 + 0.16*float(i)/4.0;\n        vec3 opos = pos + h*nor;\n        float d = map( opos, aTime ).x;\n        occ += (h-d)*sca;\n        sca *= 0.95;\n        \n    }\n    return clamp( 1.0 - 2.0*occ, 0.0, 1.0 );\n}\n\nvec3 calcNormal(in vec3 pos, in float aTime)\n{\n    vec2 e = vec2(0.001,0.0);\n    return normalize( vec3(map(pos + e.xyy,aTime).x - map(pos - e.xyy,aTime).x,\n                          map(pos + e.yxy,aTime).x - map(pos - e.yxy,aTime).x,\n                          map(pos + e.yyx,aTime).x - map(pos - e.yyx,aTime).x) );\n}\n\nfloat castShadow(in vec3 ro, in vec3 rd, in float aTime)\n{\n    float res = 1.0;\n    float t = 0.01;\n    float tMax = MAX_DIST;\n\n    for (int i=0; i<MAX_STEP;++i)\n    {\n        vec3 pos = ro + t*rd;\n        float h = map(pos,aTime).x;\n        res = min( res, 18.0*h/t );\n        if (res<0.001) break;\n        t += h;\n        if (t>tMax) break;\n    }\n    return clamp(res, 0.0, 1.0);\n}\n\nvec4 castRay(in vec3 ro, in vec3 rd, in float aTime)\n{\n   float t = 0.01;\n   vec3 m = vec3(0.0);\n   float tMax = MAX_DIST;\n   /*\n   float hMax = 2.5;\n   float bt = (hMax-ro.y)/rd.y;\n   if ( bt>0.0 ) tMax = min(tMax, bt);\n   */\n   \n   for ( int i = 0; i < MAX_STEP; ++i )\n   {\n       vec3 pos = ro + t*rd;\n       vec4 h = map( pos,aTime );\n       m = h.yzw;\n       if ( abs(h.x)<(0.001*t) )\n       {\n           break;\n       }\n       t += h.x;\n       if ( t>tMax ) break;\n   } \n    \n   if ( t>tMax )\n   {\n       m = vec3(-1.0);\n   }\n   return vec4(t,m);\n}\n\nvec3 render(in vec2 fragCoord, in float aTime)\n{\n    vec2 p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    vec2 mouse = u_mouse;\n    float angle = 10.0*u_mouse.x+1.0;\n    \n    vec3 ta = vec3(0.0,0.45,0.8+SPEED);\n    vec3 ro = ta+vec3( 1.0*cos(angle), mouse.y, 1.0*sin(angle) );;\n    \n    vec3 ww = normalize(ta - ro);\n    vec3 uu = normalize( cross( ww, vec3(0.0, 1.0, 0.0) ) );\n    vec3 vv = normalize( cross( uu, ww ) );\n    \n    \n    vec3 rd = normalize(p.x * uu + p.y * vv + 2.0*ww);\n    vec3 sunDir = SUN_DIRECTION;//normalize( vec3(0.8,0.4,0.9) );\n    \n    vec3 col = SKY_COLOR - 0.8*rd.y;\n    \n    vec2 uv = rd.xz/rd.y; //sky dome( intersect the top )\n    float sinV = 1.0*(sin(1.0*uv.x )+sin(1.0*uv.y))\n        \t\t+ 0.5*(sin(2.0*uv.x+aTime)+sin(2.0*uv.y+aTime));\n    col = mix( col, vec3(0.9,0.85,0.6),smoothstep(-0.3,0.3,-0.5+sinV) );\n    col = mix(col, SUNSET_COLOR, exp(-4.0*rd.y));\n   \n    vec4 tm = castRay(ro, rd, aTime);\n    if ( tm.y>-1.0 )\n    {\n        float t = tm.x;\n        vec3 pos = ro + t*rd;\n        vec3 nor = calcNormal(pos, aTime);\n        vec3 mate = vec3(0.18);\n        if (tm.y==8.0)\n        {\n            //watermelon\n            mate = vec3(0.03,0.1,0.07);\n            float f = 1.0-smoothstep(-0.2, 0.2, TERRAIN_PATTERN);\n            mate = mix(mate, vec3(0.0,0.05,0.03), f);\n        } \n        else if (tm.y==7.0)\n        {\n            mate = vec3(0.8,0.2,0.0);\n        }\n        else if (tm.y==6.0)\n        {\n            mate = vec3(0.2,0.2,0.2); //mouth\n        }\n        else if (tm.y==5.0)\n        {\n            mate = vec3(0.25)*pos.y; //tail\n        } \n        else if (tm.y==4.0)\n        {\n        \tmate = vec3(0.01, 0.01, 0.015); //eyes \n        }\n        else if (tm.y==3.0)\n        {\n            mate = vec3(0.5, 0.5, 0.5); //eyes\n        }\n        else if (tm.y==2.0)\n        {\n            mate = vec3(0.01,0.01,0.02);//body\n        } else\n        {\n            mate = TERRAIN_COLOR;//terrain\n        }\n        \n        float occ = calcOcclusion( pos, nor, aTime );\n        float fresnel = clamp(1.0+dot(nor,rd),0.0,1.0);\n        float sunDiff = clamp( dot(nor, sunDir),0.0,1.0 );\n        float sunShadow = castShadow(pos+nor*0.01, sunDir, aTime);//step( castRay(pos+nor*0.001, sunDir).y,0.0 );\n        float skyDiff = clamp( 0.5 + 0.5*dot(nor, vec3(0.0,1.0,0.0)),0.0,1.0 );\n        //Simulate how lights bounce off from the ground to the object surface.\n        float bounceDiff = clamp( 0.5 + 0.5*dot(nor, vec3(0.0,-1.0,0.0)),0.0,1.0 );\n        col = mate*SUNLIGHT_INTENSITY*sunDiff*sunShadow;\n        col += mate*SKY_COLOR*skyDiff;\n        col += mate*SUNSET_COLOR*bounceDiff;\n        col *= occ;\n        col += RIM_POWER*RIM_COLOR*fresnel;\n        \n        if (tm.y==4.0 || tm.y==8.0)\n        {\n            vec3 viewDir = normalize(ro-pos);\n            vec3 reflectDir = normalize(reflect(-sunDir, nor));\n            float spec = pow(max(dot(reflectDir, viewDir), 0.0), 64.0);\n            vec3 speCol = vec3(1.0) * spec;\n            col += speCol;\n        }\n        \n        // fog\n        col = mix( col, SUNSET_COLOR, 1.0-exp( -0.005*t*t ) );\n    } \n    return col;\n}\n\nvoid main() {\n    vec3 col = vec3(0.0);\n    vec2 off = vec2(0.0);\n    vec3 noise = texture(u_sample, v_texCoord).rgb;\n    \n#if AA_SIZE>1\n    //anti aliasing & motion blur\n    for (float aaY = 0.0; aaY < float(AA_SIZE); ++aaY)\n    {\n        for (float aaX = 0.0; aaX < float(AA_SIZE); ++aaX)\n        {\n            off = -0.5+vec2(aaY,aaX)/float(AA_SIZE);\n            \n            float md = noise.x;\n            float mb = (aaY*float(AA_SIZE)+aaX)/(float(AA_SIZE*AA_SIZE-1));\n            mb += (md-0.5)/float(AA_SIZE*AA_SIZE);\n            float aTime = iTime - mb*0.5*(1.0/24.0); //1 frame in 24fps for film\n#else\n            float aTime = iTime;\n#endif\n            \n            col += render(v_fragPos.xy+off, aTime);\n            \n#if AA_SIZE>1\n        }\n    }\n    col /= float(AA_SIZE*AA_SIZE);\n#endif\n    \n    //gamma\n    col = pow( col, vec3(0.4546));\n    // vignetting        \n    vec2 q = v_fragPos.xy;\n    col *= 0.5 + 0.5*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.25);\n    fragColor = vec4(col,0.0);\n}\n`;\n\nexport default {\n    vertex,\n    fragment\n}","/**\n * Specifies a WebGL scene.\n *\n * @author \"Xiaoxuan Zhang\"\n * @this {Scene}\n */\nclass Scene {\n    constructor(gl) {\n        this.gl = gl;\n        this.geometries = []; // Geometries being drawn on canvas\n        this.sceneObjects = []; //Objects being added to scene\n        this.light = null;\n        this.skybox = null;\n        this.particleSystem = [];\n    }\n\n    /**\n     * Adds the given object to the scene.\n     *\n     * @param {Object} object object being added to scene\n    */\n    addSceneObject(object) {\n        this.sceneObjects.push(object);\n    }\n\n    /**\n     * Adds the given geometry to the scene.\n     *\n     * @param {Geometry} geometry Geometry being added to scene\n    */\n    addGeometry(geometry) {\n        this.geometries.push(geometry);\n    }\n\n    addParticles(particles) {\n        this.particleSystem.push(particles);\n    }\n\n    setLight(light) {\n        this.light = light;\n    }\n\n    /**\n     * Clears all geometries in the scene.\n     */\n    clear() {\n        this.geometries = [];\n        this.sceneObjects = [];\n        this.skybox = null;\n        this.particleSystem = [];\n        this.light = null;\n    }\n\n    /**\n     * Updates the animation for each geometry in geometries.\n     */\n    updateAnimation() {\n        // Recomendations: No rendering should be done here. Your Geometry objects\n        // in this.geometries should update their animations themselves through\n        // their own .updateAnimation() methods.\n        this.sceneObjects.forEach(function(object) {\n            object.updateAnimation();\n        });\n\n        this.geometries.forEach(function(geometry){\n            if (geometry.visible) {\n                geometry.updateAnimation();\n            }\n        });\n\n        if (this.skybox) {\n            this.skybox.updateAnimation();\n        }\n\n    }\n\n}\n\nexport default Scene;","import Matrix4 from \"src/WebGL/lib/cuon-matrix.js\";\nimport {\n  sendUniformMat4ToGLSL,\n  sendUniformVec3ToGLSL\n} from \"src/WebGL/lib/webglFunctions.js\";\n\n/**\n * Specifies a FPS Camera.\n *\n * @author \"Xiaoxuan Zhang\"\n * @this {Camera}\n */\nvar Camera = function() {\n  this.position = new Float32Array([0.0, 0.0, 10.0]);\n  this.target = new Float32Array([0.0, 0.0, 0.0]);\n  this.worldUp = new Float32Array([0, 1, 0]);\n  this.up = new Float32Array([0, 1, 0]);\n  this.front = new Float32Array([0, 0, -1]);\n  this.right = new Float32Array([0, 0, 0]);\n  this.yaw = -90.0;\n  this.pitch = 0.0;\n  this.fov = 60.0;\n  this.near = 0.1;\n  this.far = 1000.0;\n  this.aspectRatio = 1.2;\n  this.viewMatrix = new Matrix4();\n  this.projectionMatrix = new Matrix4();\n  this.projectionMatrix.setPerspective(this.fov, this.aspectRatio, this.near, this.far);\n  this.viewProjectionInvMatrix = new Matrix4();\n  this.deltaTime = 0.0;\n  this.lastTime = performance.now();\n  this.rotationSpeed = 0.5;\n  this.speed = 0.02;\n  this.sensitivity = 100.0;\n  this.update();\n}\n\n/**\n* Set camera's position\n**/\nCamera.prototype.setPosition = function(position) {\n  this.position = new Float32Array(position);\n  this.updateViewMatrix();\n}\n\n/**\n* Set camera's lookAt target\n**/\nCamera.prototype.setTarget = function(target) {\n  this.target = new Float32Array(target);\n  this.updateViewMatrix();\n}\n\n/**\n* Set camera's perspective\n**/\nCamera.prototype.setPerspective = function(fov, aspectRatio, near, far) {\n  this.fov = fov;\n  this.near = near;\n  this.far = far;\n  this.aspectRatio = aspectRatio;\n  this.updateProjectionMatrix();\n}\n\n/**\n* move camera in x-z plane\n**/\nCamera.prototype.move = function(direction) {\n  // move the camera around\n  let velocity = this.speed * this.deltaTime;\n  let offset = velocity;\n  if (direction == \"forward\" ) {\n    this.position[0] += this.front[0] * offset;\n    this.position[1] += this.front[1] * offset;\n    this.position[2] += this.front[2] * offset;\n\n  } else if (direction == \"backward\") {\n    this.position[0] -= this.front[0] * offset;\n    this.position[1] -= this.front[1] * offset;\n    this.position[2] -= this.front[2] * offset;\n  } else if (direction == \"left\") {\n    this.position[0] += this.right[0] * offset;\n    this.position[1] += this.right[1] * offset;\n    this.position[2] += this.right[2] * offset;\n  } else if (direction == \"right\"){\n    this.position[0] -= this.right[0] * offset;\n    this.position[1] -= this.right[1] * offset;\n    this.position[2] -= this.right[2] * offset;\n  }\n  this.updateViewMatrix();\n}\n\n/**\n* rotate camera with keyboard\n**/\nCamera.prototype.rotate = function(direction) {\n  let velocity = this.rotationSpeed * this.deltaTime;\n  if (direction == \"left\")\n  {\n    this.yaw -= velocity;\n  } else if (direction == \"right\")\n  {\n    this.yaw += velocity;\n  } else if (direction == \"up\")\n  {\n    this.pitch += velocity;\n  } else if (direction == \"down\")\n  {\n    this.pitch -= velocity;\n  }\n  if (this.pitch > 89.9) {\n    this.pitch = 89.9;\n  }\n  if (this.pitch < -89.9) {\n    this.pitch = -89.9;\n  }\n  this.update();\n}\n\n/**\n* rotate camera with mouse\n**/\nCamera.prototype.rotateWithMouse = function(deltaX, deltaY) {\n  this.yaw += deltaX * this.sensitivity;\n  this.pitch += deltaY * this.sensitivity;\n\n  if (this.pitch > 89.9) {\n    this.pitch = 89.9;\n  }\n  if (this.pitch < -89.9) {\n    this.pitch = -89.9;\n  }\n  this.update();\n}\n\n/**\n* zoom in and out with scroll\n**/\nCamera.prototype.zoom = function(offset) {\n  if (this.fov > 1.0 || this.fov < 45.0) {\n    this.fov += offset;\n  }\n}\n\nCamera.prototype.update = function() {\n  let cosPitch = Math.cos(this.pitch * Math.PI / 180.0);\n  let sinPitch = Math.sin(this.pitch * Math.PI / 180.0);\n  let cosYaw = Math.cos(this.yaw * Math.PI / 180.0);\n  let sinYaw = Math.sin(this.yaw * Math.PI / 180.0);\n\n  this.front[0] = cosYaw * cosPitch;\n  this.front[1] = sinPitch;\n  this.front[2] = sinYaw * cosPitch;\n  this.front = this.normalize(this.front);\n  this.getRight();\n  this.getUp();\n  this.updateViewMatrix();\n  this.updateViewProjectionInvMatrix();\n}\n\nCamera.prototype.getTarget = function() {\n  //for FPS, target = Front + Position\n  let target = new Float32Array([0, 0, 0]);\n  target[0] = this.front[0] + this.position[0];\n  target[1] = this.front[1] + this.position[1];\n  target[2] = this.front[2] + this.position[2];\n  this.target = target;\n  return this.target;\n}\n\nCamera.prototype.getFront = function() {\n  let front = new Float32Array([0, 0, 0]);\n  front[0] = this.target[0] - this.position[0];\n  front[1] = this.target[1] - this.position[1];\n  front[2] = this.target[2] - this.position[2];\n  this.front = this.normalize(front);\n  return this.front;\n}\n\nCamera.prototype.getRight = function() {\n  let right = new Float32Array([0, 0, 0]);\n  let ax = this.front[0], ay = this.front[1], az = this.front[2];\n  let bx = this.worldUp[0], by = this.worldUp[1], bz = this.worldUp[2];\n\n  right[0] = ay * bz - az * by;\n  right[1] = az * bx - ax * bz;\n  right[2] = ax * by - ay * bx;\n  this.right = this.normalize(right);\n  return this.right;\n}\n\nCamera.prototype.getUp = function() {\n  let up = new Float32Array([0, 0, 0]);\n  let ax = this.right[0], ay = this.right[1], az = this.right[2];\n  let bx = this.front[0], by = this.front[1], bz = this.front[2];\n\n  up[0] = ay * bz - az * by;\n  up[1] = az * bx - ax * bz;\n  up[2] = ax * by - ay * bx;\n  this.up = this.normalize(up);\n  return this.up;\n}\n\nCamera.prototype.normalize = function(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let len = x*x + y*y + z*z;\n  let out = new Float32Array(3);\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\nCamera.prototype.updateProjectionMatrix = function() {\n  this.projectionMatrix.setPerspective(this.fov, this.aspectRatio, this.near, this.far);\n}\n\nCamera.prototype.updateViewMatrix = function() {\n  this.getTarget();\n  this.viewMatrix.setLookAt(this.position[0], this.position[1], this.position[2],\n                      this.target[0], this.target[1], this.target[2], this.up[0], this.up[1], this.up[2]);\n}\n\n/*\n* For skybox, we want to transform each pixel on our quad to a direction in the world that the camera is looking towards.\nSo instead of using projection * view matrix to transform world space to camera space, we take the inverse of projectionViewMatrix.\nAnd since we only care about the direction (orientation), we ignore the translation part.\n*/\nCamera.prototype.updateViewProjectionInvMatrix = function() {\n  let m = new Matrix4();\n  m.set(this.projectionMatrix);\n  let v = new Matrix4();\n  v.set(this.viewMatrix);\n  //remove translation\n  v[12] = 0.0;\n  v[13] = 0.0;\n  v[14] = 0.0;\n  v[15] = 1.0;\n  m.concat(v); // projection * view\n  this.viewProjectionInvMatrix.setInverseOf(m); // get the inverse of the projectionViewMatrix\n}\n\nCamera.prototype.getViewDistance = function(target) {\n  let distance = Math.sqrt(Math.pow((target[0] - this.position[0]),2)\n                + Math.pow((target[1] - this.position[1]),2)\n                + Math.pow((target[2] - this.position[2]),2));\n  return distance;\n}\n\nCamera.prototype.getViewDistanceXZ = function(target) {\n  let distance = Math.sqrt(Math.pow((target[0] - this.position[0]),2)\n                + Math.pow((target[2] - this.position[2]),2));\n  return distance;\n}\n\nCamera.prototype.updateAnimation = function() {\n  let currTime = performance.now();\n  this.deltaTime = currTime - this.lastTime;\n  this.lastTime = currTime;\n}\n\nexport default Camera;\n","class Texture {\n    constructor(image, properties) {\n        this.image = image;\n        this.textureObj = null;\n        this.properties = {\n            minParam: \"LINEAR\",\n            magParam: \"LINEAR\",\n            wrapSParam: \"REPEAT\",\n            wrapTParam: \"REPEAT\",\n            ...properties\n        };\n    }\n}\n\nexport default Texture;","/**\n * Specifies a Light.\n *\n * @author \"Xiaoxuan Zhang\"\n * @this {Light}\n */\n\n class SimpleLight {\n    /**\n     * Constructor for Light.\n     *\n     * @constructor\n     */\n    constructor({\n      position=new Float32Array([0.0, 10.0, 5.0]), \n      color=new Float32Array([1.0, 1.0, 1.0]), \n      specularColor=new Float32Array([1.0, 1.0, 1.0])\n    }) {\n      this.position = position;\n      this.color = color;\n      this.specularColor = specularColor;\n    }\n\n    setPosition(pos) {\n        this.position = new Float32Array(pos);\n    }\n\n    setLightColor(color) {\n        this.color = new Float32Array(color);\n    }\n\n    setSpecularColor(color) {\n        this.specularColor = new Float32Array(color);\n    }\n}\n\nexport default SimpleLight;\n  ","import Geometry from \"src/WebGL/geometries/geometry.js\";\n\n/**\n * Specifies a cube. A subclass of Geometry.\n *\n * @author \"Zhang Xiaoxuan\"\n * @this {Cube}\n */\nclass Cube extends Geometry {\n  /**\n   * Constructor for cube.\n   *\n   * @constructor\n   */\n  constructor() {\n    // Recommendations: Remember that cube is a subclass of Geometry.\n    // \"super\" keyword can come in handy when minimizing code reuse.\n    super();\n    this.generateCubeVertices();\n  }\n\n  /**\n   * Generates the vertices of the cube.\n   *\n   * @private\n   */\n  generateCubeVertices() {\n    /*\n      7- - -6\n     /|    /|\n    3- - -2 |\n    | |   | |\n    | 4- -|-5\n    |/    |/\n    0- - -1\n  */\n\n    this.vertices = [\n      //back\n      -1.0, -1.0, -1.0, //4\n      1.0, 1.0, -1.0, //6\n      1.0, -1.0, -1.0, //5\n\n      1.0, 1.0, -1.0, //6\n      -1.0, -1.0, -1.0, //4\n      -1.0, 1.0, -1.0, //7\n\n      //front\n      -1.0, -1.0, 1.0, //0\n      1.0, -1.0, 1.0, //1\n      1.0, 1.0, 1.0, //2\n\n      1.0, 1.0, 1.0, //2\n      -1.0, 1.0, 1.0, //3\n      -1.0, -1.0, 1.0, //0\n\n      //left\n      -1.0, 1.0, 1.0, //3\n      -1.0, 1.0, -1.0, //7\n      -1.0, -1.0, -1.0, //4\n\n      -1.0, -1.0, -1.0, //4\n      -1.0, -1.0, 1.0, //0\n      -1.0, 1.0, 1.0,  //3\n\n      //right\n      1.0, 1.0, 1.0, //2\n      1.0, -1.0, -1.0, //5\n      1.0, 1.0, -1.0, //6\n\n      1.0, -1.0, -1.0, //5\n      1.0, 1.0, 1.0, //2\n      1.0, -1.0, 1.0, //1\n\n      //bottom\n      -1.0, -1.0, -1.0, //4\n      1.0, -1.0, -1.0, //5\n      1.0, -1.0, 1.0, //1\n\n      1.0, -1.0, 1.0, //1\n      -1.0, -1.0, 1.0, //0\n      -1.0, -1.0, -1.0, //4\n\n      //top\n      -1.0, 1.0, -1.0, //7\n      1.0, 1.0, 1.0, //2\n      1.0, 1.0, -1.0, //6\n\n      1.0, 1.0, 1.0, //2\n      -1.0, 1.0, -1.0, //7\n      -1.0, 1.0, 1.0 //3\n\n    ];\n    this.UVs = [\n      //back\n      0.0, 0.0, //4\n      1.0, 1.0, //6\n      1.0, 0.0, //5\n\n      1.0, 1.0, //6\n      0.0, 0.0, //4\n      0.0, 1.0, //7\n\n      //front\n      0.0, 0.0, //0\n      1.0, 0.0, //1\n      1.0, 1.0, //2\n\n      1.0, 1.0, //2\n      0.0, 1.0, //3\n      0.0, 0.0, //0\n\n      //left\n      1.0, 0.0, //3\n      1.0, 1.0, //7\n      0.0, 1.0, //4\n\n      0.0, 1.0, //4\n      0.0, 0.0, //0\n      1.0, 0.0, //3\n\n      //right\n      1.0, 0.0, //2\n      0.0, 1.0, //5\n      1.0, 1.0, //6\n\n      0.0, 1.0, //5\n      1.0, 0.0, //2\n      0.0, 0.0, //1\n\n      //bottom\n      0.0, 1.0, //4\n      1.0, 1.0, //5\n      1.0, 0.0, //1\n\n      1.0, 0.0, //1\n      0.0, 0.0, //0\n      0.0, 1.0, //4\n\n      //top\n      0.0, 1.0, //7\n      1.0, 0.0, //2\n      1.0, 1.0, //6\n\n      1.0, 0.0, //2\n      0.0, 1.0, //7\n      0.0, 0.0 //3\n    ];\n    this.normals = [\n      //back\n      0.0, 0.0, -1.0,\n      0.0, 0.0, -1.0,\n      0.0, 0.0, -1.0,\n      0.0, 0.0, -1.0,\n      0.0, 0.0, -1.0,\n      0.0, 0.0, -1.0,\n\n      //front\n      0.0, 0.0, 1.0,\n      0.0, 0.0, 1.0,\n      0.0, 0.0, 1.0,\n      0.0, 0.0, 1.0,\n      0.0, 0.0, 1.0,\n      0.0, 0.0, 1.0,\n\n      //left\n      -1.0, 0.0, 0.0,\n      -1.0, 0.0, 0.0,\n      -1.0, 0.0, 0.0,\n      -1.0, 0.0, 0.0,\n      -1.0, 0.0, 0.0,\n      -1.0, 0.0, 0.0,\n\n      //right\n      1.0, 0.0, 0.0,\n      1.0, 0.0, 0.0,\n      1.0, 0.0, 0.0,\n      1.0, 0.0, 0.0,\n      1.0, 0.0, 0.0,\n      1.0, 0.0, 0.0,\n\n      //bottom\n      0.0, -1.0, 0.0,\n      0.0, -1.0, 0.0,\n      0.0, -1.0, 0.0,\n      0.0, -1.0, 0.0,\n      0.0, -1.0, 0.0,\n      0.0, -1.0, 0.0,\n\n      //top\n      0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0\n    ];\n  }\n}\n\nexport default Cube;\n","import Geometry from \"src/WebGL/geometries/geometry.js\";\n\n/**\n * Specifies a triangle which fluctuates in size (grows and shrinks).\n *\n * @author \"Zooey\"\n * @this {CustomObject}\n */\nclass CustomObject extends Geometry {\n  /**\n   * Constructor for FluctuatingTriangle.\n   *\n   * @constructor\n   * @param {Number} object imported mesh\n   */\n  constructor(object) {\n    // Recomendations: You're going to need a few variables to keep track of\n    // information relevant to your animation. For example, to what amount your\n    // triangle is currently scaled at.\n    super();\n    this.vertices = object.vertices;\n    this.UVs = object.textures;\n    this.normals = object.vertexNormals;\n    this.indices = object.indices;\n\n    // for (let i = 0; i < object.vertices.length; i++) {\n    //   for (let j = 0; j < object.vertices.length; j++) {\n    //     this.vertices.push() = this.vertices.concat(object.vertices[j]);\n    //   }\n    //   if (object.vertexNormals) {\n    //     for (let j = 0; j < object.vertexNormals.length; j++) {\n    //       this.normals = this.normals.concat(object.vertexNormals[j]);\n    //     }\n    //   }\n    //   if (object.textures) {\n    //     for (let j = 0; j < object.textures.length; j++) {\n    //       this.UVs = this.UVs.concat(object.textures[j]);\n    //     }\n    //   }\n    // }\n  }\n}\n\nexport default CustomObject;\n","import Scene from \"src/WebGL/scene.js\";\nimport Camera from \"src/WebGL/camera.js\";\nimport Material from \"src/WebGL/material.js\";\nimport Texture from \"src/WebGL/texture.js\";\nimport SimpleLight from \"src/WebGL/simpleLight.js\";\nimport Cube from \"src/WebGL/geometries/cube.js\";\nimport Square from \"src/WebGL/geometries/square.js\";\nimport CustomObject from \"src/WebGL/geometries/object.js\";\n  \nconst _createCube = (data, {\n    translate=[0.0, 0.0, 0.0], \n    scale=[1.0, 1.0, 1.0], \n    rotateDegree=0.0, \n    rotateAxis=[0,1,0], \n    autoRotate=false\n}) => {\n    const geo = new Cube();\n    const { images, shaders } = data;\n    const texImg = images[\"wood\"].img;\n    const uniforms = {\n        u_model: {type: \"mat4\", value: geo.modelMatrix},\n        u_normalMatrix: {type: \"mat4\", value: geo.normalMatrix},\n        u_sample: {type: \"texture\", value: new Texture(texImg)},\n    };\n    const lightShader = shaders[\"3D\"][\"BasicLight\"];\n    const material = new Material({uniforms, shaders: lightShader});\n    geo.addMaterial(material);\n    geo.translate(translate);\n    geo.rotate(rotateDegree, rotateAxis);\n    geo.scale(scale);\n    geo.autoRotate = autoRotate;\n    return geo;\n}\n  \nconst _createGround = (data, {\n    translate=[0.0, 0.0, 0.0], \n    scale=[1.0, 1.0, 1.0], \n    rotateDegree=0.0, \n    rotateAxis=[0,1,0], \n    autoRotate=false\n}) => {\n    const geo = new Square();\n    const { shaders } = data;\n    const uniforms = {\n      u_model: {type: \"mat4\", value: geo.modelMatrix},\n      u_normalMatrix: {type: \"mat4\", value: geo.normalMatrix},\n      u_color: {type: \"v3\", value: [0.8, 0.8, 0.8]}\n    };\n    const colorShader = shaders[\"3D\"][\"SimpleColor\"];\n    const material = new Material({uniforms, shaders: colorShader});\n    geo.addMaterial(material);\n    geo.translate(translate);\n    geo.rotate(rotateDegree, rotateAxis);\n    geo.scale(scale);\n    geo.autoRotate = autoRotate;\n    return geo;\n}\n  \nconst _createSkybox = (data) => {\n    const geo = new Square();\n    const { images, shaders } = data;\n    const texImg = images[\"noise64\"].img;\n    const skyShader = shaders[\"3D\"][\"Sky\"];\n    const uniforms = {\n      u_noisemap: {type: \"texture\", value: new Texture(texImg)},\n      u_time: {type: \"t\", value: 0.0}\n    };\n    const material = new Material({uniforms, shaders: skyShader});\n    geo.addMaterial(material);\n    return geo;\n}\n  \nconst _createObject = (data, {\n    translate=[0.0, 0.0, 0.0], \n    scale=[1.0, 1.0, 1.0], \n    rotateDegree=0.0, \n    rotateAxis=[0,1,0], \n    autoRotate=false\n}) => {\n    const { model, shaders } = data;\n    if (!model.model) return null;\n    // Create new obj mesh here \n    /* \n      let meshObj = model.model;\n      if (typeof meshObj === \"string\") {\n        // Parse text to mesh object\n        meshObj = new Mesh(meshObj);\n      }\n      const geo = new CustomObject(meshObj);\n    */\n    const geo = new CustomObject(model.model);\n    geo.translate(translate);\n    geo.rotate(rotateDegree, rotateAxis);\n    geo.scale(scale);\n    geo.autoRotate = autoRotate;\n    const uniforms = {\n      u_model: {type: \"mat4\", value: geo.modelMatrix},\n      u_normalMatrix: {type: \"mat4\", value: geo.normalMatrix}\n    };\n    const maps = model.textures;\n    Object.keys(maps).forEach( key => {\n      const { img } = maps[key];\n      let uniformKey = \"u_sample\";\n      if (key === \"specularMap\") {\n        uniformKey = \"u_specular\";\n      } else if (key === \"normalMap\") {\n        uniformKey = \"u_normal\";\n      } else {\n        uniformKey = \"u_sample\"\n      }\n      uniforms[uniformKey] = {type: \"texture\", value: new Texture(img)};\n    })\n    const material = new Material({uniforms, shaders: shaders[\"3D\"][\"BasicLight\"]});\n    geo.addMaterial(material);\n    return geo;\n}\n\nconst create3DScene = (store) => {\n    const scene = new Scene();\n    const camera = new Camera();\n    camera.setPerspective(40.0, 2, 0.1, 100);\n    camera.setPosition([0.0, 0.0, 1.0]);\n    const storeData = store.get();\n    const { model, modelType } = storeData[\"model\"];\n    if (modelType === \"custom\") {\n      const customObj = _createObject(storeData, {\n        modelData: model,\n        translate: [0.0, -1.0, -2.0]\n      });\n      scene.addGeometry(customObj);\n    } else {\n      //  Add some 3D stuff\n      const cube = _createCube(storeData, {\n        translate: [-2.0, -1.0, -5.0],\n        scale: [0.5, 0.5, 0.5],\n        rotateDegree: 30,\n        rotateAxis: [0, 0, 1],\n        autoRotate: true\n      });\n      scene.addGeometry(cube);\n    }\n    \n    const ground = _createGround(storeData, {\n      translate: [0.0, -3.0, 0.0],\n      scale: [50.0, 50.0, 50.0],\n      rotateDegree: -90,\n      rotateAxis: [1, 0, 0]\n    });\n    scene.addGeometry(ground);\n  \n    // //Add a skybox\n    const skybox = _createSkybox(storeData);\n    scene.skybox = skybox;\n  \n    const light = new SimpleLight({});\n    scene.setLight(light);\n    return { scene, camera };\n}\n\nconst createFullScreenSquad = store => {\n    const scene = new Scene();\n    const camera = new Camera();\n\n    //  Add square\n    const geo = new Square();\n    const storeData = store.get();\n    const uniforms = {\n      u_sample: {type: \"texture\", value: new Texture(storeData.images[\"noise64\"].img)},\n      u_time: {type: \"t\"},\n      u_mouse: {type: \"mouse\"},\n      u_resolution: {type: \"resolution\"}\n    };\n    const currentShader = storeData.currentShader[\"2D\"];\n    const material = new Material({uniforms, shaders: storeData.shaders[\"2D\"][currentShader]});\n    geo.addMaterial(material);\n    scene.addGeometry(geo);\n    return { scene, camera };\n}\n\nconst createNewMesh = objStr => {\n}\n\nexport {\n    create3DScene,\n    createFullScreenSquad\n};","import WebGLRenderer from 'src/WebGL/renderer.js';\nimport UI from 'src/GUI/UI.js';\nimport './style/style.scss';\nimport Store from \"src/store.js\";\nimport { create3DScene, createFullScreenSquad } from \"src/app.js\";\n\nconst CANVAS_ID = \"webgl-canvas\";\n\nconst load = () => {\n  \n  // TODO: add an animated loading indicator\n  \n  // Load local resources\n  let promiseList = [];\n  const textures = Store.getById(\"model\").textures;\n  Object.keys(textures).forEach(key => {\n    promiseList.push(\n      new Promise((resolve, reject) => {\n        const img = new Image();\n        img.addEventListener('load', () => resolve({img, key}));\n        img.addEventListener('error', (err) => reject(err));\n        img.src = textures[key].path;\n      }).then( ({img, key}) => {\n        textures[key].img = img;\n      })\n    )\n  });\n  const images = Store.getById(\"images\");\n  Object.keys(images).forEach( key => {\n    promiseList.push(\n      new Promise((resolve, reject) => {\n        const img = new Image();\n        img.addEventListener('load', () => resolve({img, key}));\n        img.addEventListener('error', (err) => reject(err));\n        img.src = images[key].path;\n      })\n      .then( ({img, key}) => {\n        images[key].img = img;\n        \n      })\n    )\n  })\n\n  Promise.all(promiseList)\n  .then(() => {\n    const model = Store.getById(\"model\");\n    model.textures = textures;\n    Store.setDataById(\"model\", model);\n    Store.setDataById(\"images\", images);\n    render();\n  })\n  .catch( err => {\n    console.log(\"Error occurred when loading static files: \", err);\n  })\n  \n  return true;\n};\n\nconst render = () => {\n  const renderer = new WebGLRenderer(CANVAS_ID);\n  const ui = UI(Store);\n  // Initialize canvas and webgl context\n  const { scene, camera } = create3DScene(Store);\n  renderer.init(scene, camera);\n\n  window.addEventListener(\"resize\", () => {\n    renderer.resizeCanvas();\n  }, false);\n\n  ui.addListener( \"SUBMIT_SHADER\", (selectedScene, selectedShader) => {\n    if (sessionStorage && `textarea-${selectedShader}` in sessionStorage) {\n      const currShaders = Store.getById(\"shaders\");\n      currShaders[selectedScene][selectedShader].fragment = sessionStorage[`textarea-${selectedShader}`];\n      Store.setDataById(\"shaders\", currShaders);\n    }\n    if (selectedScene === \"3D\") {\n      const { scene, camera } = create3DScene(Store);\n      renderer.init(scene, camera);\n    } else {\n      const currentShader = Store.getById(\"currentShader\");\n      currentShader[\"2D\"] = selectedShader;\n      Store.setDataById(\"currentShader\", currentShader);\n      const { scene, camera } = createFullScreenSquad(Store);\n      renderer.init(scene, camera);\n    }\n    \n  });\n\n  ui.addListener(\"SELECT_SCENE\", option => {\n    if (option === \"2d\") {\n      const { scene, camera } = createFullScreenSquad(Store);\n      renderer.init(scene, camera);\n    } else {\n      const { scene, camera } = create3DScene(Store);\n      renderer.init(scene, camera);\n    }\n  })\n\n  ui.addListener(\"UPDATE_MODEL\", () => {\n    const { scene, camera } = create3DScene(Store);\n    renderer.init(scene, camera);\n  })\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    renderer.render();\n  }\n  animate();\n}\n\nwindow.onload = load();\n\n\n/**\n * Provides requestAnimationFrame in a cross browser\n * way.\n */\nif (!window.requestAnimationFrame) {\n  window.requestAnimationFrame = (function() {\n    return window.requestAnimationFrame ||\n           window.webkitRequestAnimationFrame ||\n           window.mozRequestAnimationFrame ||\n           window.oRequestAnimationFrame ||\n           window.msRequestAnimationFrame ||\n           function(/* function FrameRequestCallback */ callback, /* DOMElement Element */ element) {\n             window.setTimeout(callback, 1000/60);\n           };\n  })();\n}\n\n/** * ERRATA: 'cancelRequestAnimationFrame' renamed to 'cancelAnimationFrame' to reflect an update to the W3C Animation-Timing Spec.\n *\n * Cancels an animation frame request.\n * Checks for cross-browser support, falls back to clearTimeout.\n * @param {number}  Animation frame request. */\nif (!window.cancelAnimationFrame) {\n  window.cancelAnimationFrame = (window.cancelRequestAnimationFrame ||\n                                 window.webkitCancelAnimationFrame || window.webkitCancelRequestAnimationFrame ||\n                                 window.mozCancelAnimationFrame || window.mozCancelRequestAnimationFrame ||\n                                 window.msCancelAnimationFrame || window.msCancelRequestAnimationFrame ||\n                                 window.oCancelAnimationFrame || window.oCancelRequestAnimationFrame ||\n                                 window.clearTimeout);\n}\n"],"sourceRoot":""}