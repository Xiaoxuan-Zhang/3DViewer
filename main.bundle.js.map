{"version":3,"sources":["webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/createClass.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/inherits.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/typeof.js","webpack://webgl_webpack/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://webgl_webpack/./src/style/style.scss","webpack://webgl_webpack/./node_modules/css-loader/dist/runtime/api.js","webpack://webgl_webpack/./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack://webgl_webpack/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://webgl_webpack/webpack/bootstrap","webpack://webgl_webpack/webpack/runtime/compat get default export","webpack://webgl_webpack/webpack/runtime/define property getters","webpack://webgl_webpack/webpack/runtime/hasOwnProperty shorthand","webpack://webgl_webpack/webpack/runtime/publicPath","webpack://webgl_webpack/./src/style/style.scss?747e","webpack://webgl_webpack/./src/WebGL/shaders/finalPass.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_vertex.js","webpack://webgl_webpack/./src/WebGL/shaders/blank.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_zentime.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_thatcat.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_nowhere.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_mushroom.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_hallomeowy.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_getout.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_water.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_cloud.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_transparent.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_cloud2D.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_bigbang.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_set.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_glassy.js","webpack://webgl_webpack/./src/WebGL/shaders/shadertoy_glow.js","webpack://webgl_webpack/./src/store.js","webpack://webgl_webpack/./src/WebGL/shaders/simpleColor.js","webpack://webgl_webpack/./src/WebGL/shaders/sky.js","webpack://webgl_webpack/./src/WebGL/shaders/pbr.js","webpack://webgl_webpack/./src/WebGL/lib/webgl-utils.js","webpack://webgl_webpack/./src/WebGL/lib/webglFunctions.js","webpack://webgl_webpack/./src/WebGL/material.js","webpack://webgl_webpack/./src/WebGL/lib/cuon-matrix.js","webpack://webgl_webpack/./src/WebGL/geometries/geometry.js","webpack://webgl_webpack/./src/WebGL/geometries/square.js","webpack://webgl_webpack/./src/WebGL/renderer.js","webpack://webgl_webpack/./src/GUI/Components/UIComponent.js","webpack://webgl_webpack/./src/GUI/Components/Sidebar.js","webpack://webgl_webpack/./src/GUI/Components/TextWidget.js","webpack://webgl_webpack/./src/GUI/Components/Accordion.js","webpack://webgl_webpack/./src/GUI/Components/FileUploader.js","webpack://webgl_webpack/./src/GUI/Components/Dropdown.js","webpack://webgl_webpack/./src/GUI/Components/Tabs.js","webpack://webgl_webpack/./src/GUI/UI.js","webpack://webgl_webpack/./src/WebGL/scene.js","webpack://webgl_webpack/./src/WebGL/camera.js","webpack://webgl_webpack/./src/WebGL/texture.js","webpack://webgl_webpack/./src/WebGL/cubemap.js","webpack://webgl_webpack/./src/WebGL/simpleLight.js","webpack://webgl_webpack/./src/WebGL/geometries/cube.js","webpack://webgl_webpack/./src/WebGL/lib/objParser.js","webpack://webgl_webpack/./src/WebGL/geometries/object.js","webpack://webgl_webpack/./src/app.js","webpack://webgl_webpack/./src/index.js"],"names":["module","exports","arr","len","length","i","arr2","Array","isArray","arrayLikeToArray","self","ReferenceError","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","create","constructor","iter","Symbol","iterator","from","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","_typeof","assertThisInitialized","call","_setPrototypeOf","p","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","minLen","n","toString","slice","name","test","___CSS_LOADER_EXPORT___","id","cssWithMappingToString","list","this","map","item","content","concat","join","modules","mediaQuery","dedupe","alreadyImportedModules","_arrayLikeToArray","_item","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","memo","getTarget","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","index","css","media","sourceMap","references","updater","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","replacement","filter","Boolean","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","firstChild","singleton","singletonCounter","update","styleIndex","bind","parentNode","removeStyleElement","newObj","all","atob","lastIdentifiers","newList","newLastIdentifiers","_index","splice","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","d","a","definition","get","prop","hasOwnProperty","vertex","fragment","appData","shaders","finalPassShader","blankShader","zenTimeShader","thatCatShader","nowhereShader","mushroomShader","hallomeowyShader","getoutShader","waterShader","cloudShader","cloud2dShader","transparentShader","bigbangShader","setShader","glassyShader","glowShader","textures","cubemapTextures","currentShader","lightInfo","position","color","cameraInfo","currentScene","currentModel","model","caseModel","path","caseNormal","img","desc","caseColor","caseMetal","caseRough","caseAO","cupModel","cupNormal","cupColor","cupMetal","cupRough","cube","wallNormal","wallColor","images","noise64","noise256","wood","stone","cubemaps","buildingFace0","buildingFace1","buildingFace2","buildingFace3","buildingFace4","buildingFace5","forestFace0","forestFace1","forestFace2","forestFace3","forestFace4","forestFace5","appStore","assign","getById","setDataById","newData","freeze","handleCreationError","msg","container","getElementsByTagName","str","WebGLRenderingContext","innerHTML","makeFailHTML","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","cancelAnimationFrame","cancelRequestAnimationFrame","webkitCancelAnimationFrame","webkitCancelRequestAnimationFrame","mozCancelAnimationFrame","mozCancelRequestAnimationFrame","msCancelAnimationFrame","msCancelRequestAnimationFrame","oCancelAnimationFrame","oCancelRequestAnimationFrame","clearTimeout","createShader","gl","vshader","fshader","transformFeedbackProperties","program","createProgram","console","log","useShader","useProgram","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","transformFeedbackVaryings","INTERLEAVED_ATTRIBS","linkProgram","linked","getProgramParameter","LINK_STATUS","error","getProgramInfoLog","deleteProgram","deleteShader","type","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","send2DTextureToGLSL","val","textureUnit","uniformName","loc","getUniformLocation","uniform1i","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","sendCubemapToGLSL","TEXTURE_CUBE_MAP","create2DTexture","image","magParam","minParam","wrapSParam","wrapTParam","texture","createTexture","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","width","height","UNSIGNED_BYTE","createCubemapTexture","wrapRParam","faces","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","face","faceId","imageObj","CLAMP_TO_EDGE","TEXTURE_WRAP_R","RGB","createNullTexture","internalFormat","format","border","dataType","updateNullTexture","createBufferData","bufferObj","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","createElementArrayBuffer","indexBuffer","ELEMENT_ARRAY_BUFFER","sendAttributeBufferToGLSL","buffer","dataCount","attribName","FLOAT","stride","offset","attribLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","sendUniformFloatToGLSL","val_loc","uniform1f","sendUniformVec4ToGLSL","uniform4f","sendUniformVec3ToGLSL","uniform3f","sendUniformVec2ToGLSL","uniform2f","sendUniformMat4ToGLSL","uniformMatrix4fv","elements","params","uniforms","shaderProgram","textureUnitCount","Matrix4","opt_src","s","Float32Array","setIdentity","set","src","other","b","ai0","ai1","ai2","ai3","multiply","multiplyVector3","pos","v","Vector3","multiplyVector4","Vector4","transpose","t","setInverseOf","inv","det","invert","setOrtho","left","right","bottom","top","near","far","rw","rh","rd","ortho","setFrustum","frustum","setPerspective","fovy","aspect","ct","Math","PI","sin","cos","perspective","setScale","x","y","z","scale","setTranslate","translate","setRotate","angle","c","rlen","nc","xy","yz","zx","xs","ys","zs","sqrt","rotate","setLookAt","eyeX","eyeY","eyeZ","centerX","centerY","centerZ","upX","upY","upZ","fx","fy","fz","rlf","sx","sy","sz","rls","ux","uy","uz","lookAt","dropShadow","plane","light","mat","dot","dropShadowDirectionally","normX","normY","normZ","planeX","planeY","planeZ","lightX","lightY","lightZ","Vector2","normalize","g","pow","subtract","add","scalar","vertices","normals","UVs","indices","tangents","modelMatrix","normalMatrix","translateValue","scaleValue","rotation","rotationAxis","autoRotate","visible","material","now","performance","materialObj","binded","attr","coords","degree","axis","elapsed","generateSquareVertices","Geometry","divId","models","framebuffer","scene","camera","multiPassEnabled","frameBufferTexture","fogNear","fogFar","fogAmount","fogColor","isMousedown","lastMouse","deltaMouse","mousePos","domElement","getElementById","canvas","optAttribs","optOnError","errorHandler","addEventListener","event","statusMessage","context","names","ii","getContext","create3DContext","setupWebGL","_initFramebuffers","_initEventHandelers","_initWebGLContext","_createTextures","_compileShaders","_createFinalSquad","_createBufferData","resizeCanvas","realToCSSPixels","devicePixelRatio","displayWidth","floor","clientWidth","displayHeight","clientHeight","viewport","setAspectRatio","_updateRenderTexture","enabled","updateAnimation","bindFramebuffer","FRAMEBUFFER","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","geometries","geo","_renderObject","flush","skybox","disable","CULL_FACE","depthFunc","LEQUAL","LESS","enable","clearColor","DEPTH_TEST","frontFace","CCW","fb0","createFramebuffer","colorTexture","WebGLFunc","NEAREST","depthTexture","DEPTH_COMPONENT24","DEPTH_COMPONENT","UNSIGNED_INT","framebufferTexture2D","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","onmouseup","ev","onmousedown","_handleMouseClick","onmousemove","clientX","clientY","rect","getBoundingClientRect","move","rotateWithMouse","WebGLUtils","setBuffer","Uint16Array","_assignTextureObj","properties","Square","u_near","u_far","u_fog","u_fogColor","u_sample","textureObj","u_depth","Material","addMaterial","uniform1ui","getTextureUnit","res","viewMatrix","projectionMatrix","viewProjectionInvMatrix","specularColor","renderObj","pointCount","_sendMaterialUniforms","_sendCameraUniforms","_sendLightUniforms","drawElements","TRIANGLES","UNSIGNED_SHORT","drawArrays","element","className","UIComponent","title","text","textAreaId","submitId","editor","eventType","targetId","ele","checkboxId","newItem","input","inputId","_registerCheckboxId","label","contentDiv","currId","accept","filename","fileName","innerText","stopPropagation","preventDefault","file","files","items","selected","wrapperDiv","selector","option","toLowerCase","_createContent","querySelectorAll","node","display","getSelectedOption","selectedIndex","addToList","parent","child","li","getFileName","filePath","substring","lastIndexOf","processImage","store","imageHandler","reader","FileReader","Image","onload","readAsDataURL","processObj","objHandler","readAsText","updateTextureToStore","fileObj","updateObjToStore","createModelEditor","modelEditorDiv","sceneSelector","Dropdown","getElement","divider","modelLoader","loaderDiv","ul","FileLoader","bindEvent","fileLoaders","imgObj","getImageName","submitBtn","createModelLoader","listeners","rootElement","body","sidebar","Sidebar","modelOptions","shaderOptions","shaderEditorDiv","typeLower","wrapper","shaderItems","current","textWidget","TextWidget","tabs","Tabs","createShaderEditor","accordion","Accordion","addItem","sessionStorage","setItem","btn","selectedScene","shaderSelector","selectedShader","func","enabled3D","div2d","div3d","toggleShaderTab","addListener","listener","sceneObjects","particleSystem","object","geometry","particles","Camera","worldUp","up","front","yaw","pitch","fov","aspectRatio","deltaTime","lastTime","rotationSpeed","speed","sensitivity","setPosition","updateViewMatrix","setTarget","updateProjectionMatrix","direction","velocity","deltaX","deltaY","zoom","cosPitch","sinPitch","cosYaw","sinYaw","getRight","getUp","updateViewProjectionInvMatrix","getFront","ax","ay","az","bx","by","bz","out","m","getViewDistance","getViewDistanceXZ","currTime","Texture","lightSpaceMatrix","projection","view","generateCubeVertices","calcTangents","tangentsMap","id0","id1","id2","v0","v1","v2","uv0","uv1","uv2","edge1","edge2","deltaUV1","deltaUV2","tangent","f","j","currentIndex","texCoords","colors","create3DScene","storeData","newModel","Scene","modelType","customObj","customModel","meshData","positions","textureStride","vertexData","glVertexData","vertIndexMap","glIndices","addVertex","vert","split","objIndex","parseInt","vertIndex","triangulate","parts","numTriangles","tri","keywords","parseFloat","vn","vt","uvParts","keywordRE","lines","ln","line","trim","startsWith","exec","keyword","unparsedArgs","handler","warn","parseObj","CustomObject","transform","rotateDegree","rotateAxis","u_model","u_normalMatrix","maps","_createObject","addGeometry","Cube","texImg","lightShader","_createCube","ground","u_color","colorShader","_createGround","skyShader","u_noisemap","u_time","SimpleLight","setLight","initScene","renderer","sceneType","init","u_mouse","u_resolution","Cubemap","createFullScreenSquad","addImageLoaderPromises","Promise","resolve","reject","then","promiseList","Store","fetch","response","addModelLoaderPromise","ui","WebGLRenderer","UI","currShaders","animate","render","loadContent"],"mappings":"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","file":"main.bundle.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".tabs{border-radius:0px;overflow:hidden;box-shadow:0 4px 4px -2px rgba(0,0,0,.5)}.tab{width:100%;color:#fff;overflow:hidden}.tab-input{position:absolute;opacity:0;z-index:-1}.tab-label{display:flex;justify-content:space-between;padding:.5em;background:#161313;font-weight:bold;cursor:pointer}.tab-label:hover{background:#363945}.tab-label::after{content:\\\"❯\\\";width:1em;height:1em;text-align:center;transition:all .25s}.tab-content{max-height:0;padding:0 1em;color:#2c3e50;background:#161313;transition:all .35s}.tab-close{display:flex;justify-content:flex-end;padding:1em;font-size:.75em;background:#161313;cursor:pointer}.tab-close:hover{background:#363945}input:checked+.tab-label{background:#363945}input:checked+.tab-label::after{transform:rotate(90deg)}input:checked~.tab-content{display:block;max-height:100vh;padding:1em}.text-editor{margin:0px}.textbox{height:60vh;max-height:500px}html body{font-family:\\\"Roboto\\\",sans-serif;font-size:16px;line-height:1.15;background-color:#363945}.fullscreen{position:absolute;top:0;left:0;width:100vw;height:100vh;z-index:100;line-height:100vh;background-color:#363945;color:#fff}#webgl-canvas{width:100%;height:100%;position:absolute;top:0;left:0;z-index:0}.side-bar-right{position:absolute;right:0;top:0;width:25%;height:calc(100vh);overflow-y:auto;background-color:rgba(0,0,0,0)}.float-right{float:right}.bd-light-purple{border-color:#a463f2}select{border-width:0px}.divider{border-top:.1rem solid #555}.model-loader-wrapper{display:flex;flex-direction:column}textarea{color:#d3d3d3;background-color:#161313}.cursor-pointer{cursor:pointer}@media screen and (max-width: 600px){.side-bar-right{position:absolute;bottom:0;width:100%;max-height:40%;height:initial;right:inherit;top:inherit}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style/style.scss\",\"webpack://./src/style/accordion.scss\",\"webpack://./src/style/_variables.scss\",\"webpack://./src/style/textWidget.scss\"],\"names\":[],\"mappings\":\"AAAA,MCEA,iBACI,CAAA,eACA,CAAA,wCACA,CAAA,KAEJ,UACI,CAAA,UACA,CAAA,eACA,CAAA,WACA,iBACI,CAAA,SACA,CAAA,UACA,CAAA,WAEJ,YACI,CAAA,6BACA,CAAA,YACA,CAAA,kBCnBG,CAAA,gBDqBH,CAAA,cACA,CAAA,iBAEA,kBCvBE,CAAA,kBD0BF,WACI,CAAA,SACA,CAAA,UACA,CAAA,iBACA,CAAA,mBACA,CAAA,aAGR,YACI,CAAA,aACA,CAAA,aChCK,CAAA,kBALF,CAAA,mBDwCH,CAAA,WAEJ,YACI,CAAA,wBACA,CAAA,WACA,CAAA,eACA,CAAA,kBC9CG,CAAA,cDgDH,CAAA,iBACA,kBChDE,CAAA,yBDwDN,kBCxDM,CAAA,gCD0DF,uBACI,CAAA,2BAGR,aACI,CAAA,gBACA,CAAA,WACA,CAAA,aElER,UACI,CAAA,SAGJ,WACI,CAAA,gBACA,CAAA,UHFJ,+BACE,CAAA,cACA,CAAA,gBACA,CAAA,wBENQ,CAAA,YFUV,iBACE,CAAA,KACA,CAAA,MACA,CAAA,WACA,CAAA,YACA,CAAA,WACA,CAAA,iBACA,CAAA,wBEjBQ,CAAA,UFmBR,CAAA,cAEF,UACE,CAAA,WACA,CAAA,iBACA,CAAA,KACA,CAAA,MACA,CAAA,SACA,CAAA,gBAGF,iBACE,CAAA,OACA,CAAA,KACA,CAAA,SACA,CAAA,kBACA,CAAA,eACA,CAAA,8BElCe,CAAA,aFsCjB,WACE,CAAA,iBAGF,oBEtCe,CAAA,OF0Cf,gBACE,CAAA,SAGF,2BACE,CAAA,sBAGF,YACE,CAAA,qBACA,CAAA,SAGF,aExDkB,CAAA,wBANP,CAAA,gBFmEX,cACE,CAAA,qCAGF,gBACE,iBACE,CAAA,QACA,CAAA,UACA,CAAA,cACA,CAAA,cACA,CAAA,aACA,CAAA,WACA,CAAA\",\"sourcesContent\":[\"@import \\\"./variables\\\";\\n@import \\\"./accordion.scss\\\";\\n@import \\\"./textWidget.scss\\\";\\n\\nhtml body {\\n  font-family: 'Roboto', sans-serif;\\n  font-size: 16px;\\n  line-height: 1.15;\\n  background-color: $bg-grey;\\n}\\n\\n.fullscreen {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  z-index: 100;\\n  line-height: 100vh; // Vertically align text\\n  background-color: $bg-grey;\\n  color: white;\\n}\\n#webgl-canvas {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: 0;\\n}\\n\\n.side-bar-right {\\n  position:absolute;\\n  right: 0;\\n  top: 0;\\n  width: 25%;\\n  height: calc(100vh);\\n  overflow-y: auto;\\n  background-color: $bg-transparent;\\n}\\n\\n.float-right {\\n  float: right;\\n}\\n\\n.bd-light-purple {\\n  border-color: $light-purple;\\n}\\n\\nselect {\\n  border-width: 0px;\\n}\\n\\n.divider {\\n  border-top: 0.1rem solid $light-grey;\\n}\\n\\n.model-loader-wrapper {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\ntextarea {\\n  color: $font-light-gray;\\n  background-color: $bg-black;\\n}\\n\\n.cursor-pointer {\\n  cursor: pointer\\n}\\n\\n@media screen and (max-width: 600px) {\\n  .side-bar-right {\\n    position: absolute;\\n    bottom: 0;\\n    width: 100%;\\n    max-height: 40%;\\n    height: initial;\\n    right: inherit;\\n    top: inherit;\\n  }\\n}\\n\",\"\\n/* Accordion styles */\\n.tabs {\\n    border-radius: 0px;\\n    overflow: hidden;\\n    box-shadow: 0 4px 4px -2px rgba(0,0,0,0.5);\\n  }\\n.tab {\\n    width: 100%;\\n    color: white;\\n    overflow: hidden;\\n    &-input {\\n        position: absolute;\\n        opacity: 0;\\n        z-index: -1;\\n    }\\n    &-label {\\n        display: flex;\\n        justify-content: space-between;\\n        padding: 0.5em;\\n        background: $bg-black;\\n        font-weight: bold;\\n        cursor: pointer;\\n        /* Icon */\\n        &:hover {\\n            background: $bg-grey;\\n        }\\n        &::after {\\n            content: \\\"\\\\276F\\\";\\n            width: 1em;\\n            height: 1em;\\n            text-align: center;\\n            transition: all .25s;\\n        }\\n    }\\n    &-content {\\n        max-height: 0;\\n        padding: 0 1em;\\n        color: $font-black;\\n        background: $bg-black;\\n        transition: all .35s;\\n    }\\n    &-close {\\n        display: flex;\\n        justify-content: flex-end;\\n        padding: 1em;\\n        font-size: 0.75em;\\n        background: $bg-black;\\n        cursor: pointer;\\n        &:hover {\\n            background: $bg-grey;\\n        }\\n    }\\n}\\n  \\n// :checked\\ninput:checked {\\n    + .tab-label {\\n        background: $bg-grey;\\n        &::after {\\n            transform: rotate(90deg);\\n        }\\n    }\\n    ~ .tab-content {\\n        display:block;\\n        max-height: 100vh;\\n        padding: 1em;\\n    }\\n}\",\"$bg-black: #161313;\\n$bg-grey: #363945;\\n$bg-black-trasparent: rgba(54, 57, 69, 0.7);\\n$bg-transparent: rgba(0, 0, 0, 0);\\n$font-white: #FFFFFF;\\n$font-black: #2c3e50;\\n$font-light-gray: lightgray;\\n$light-purple: #a463f2;\\n$light-grey: #555;\\n\",\".text-editor {\\n    margin: 0px;\\n}\\n\\n.textbox {\\n    height: 60vh;\\n    max-height: 500px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (typeof btoa === 'function') {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n};","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","__webpack_require__.p = \"./\";","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","var vertex =\n`#version 300 es\n  precision mediump float;\n  in vec4 a_position;\n  in vec2 a_texCoord;\n  in vec3 a_normal;\n  out vec2 v_texCoord;\n  out vec3 v_normal;\n\n  void main(){\n    gl_Position = a_position;\n    v_texCoord = a_texCoord;\n    v_normal = a_normal;\n  }\n`;\n\nvar fragment =\n`#version 300 es\nprecision mediump float;\nuniform sampler2D u_sample;\nuniform sampler2D u_depth;\nuniform float u_near;\nuniform float u_far;\nuniform float u_fog;\nuniform vec3 u_fogColor;\nin vec2 v_texCoord;\nin vec3 v_normal;\nout vec4 outColor;\n\nfloat perspectiveDepth() {\n  vec4 texDepth = texture(u_depth, v_texCoord);\n  float depth = texDepth.r;\n  float z = depth * 2.0 - 1.0; // Back to NDC\n  float near = u_near;\n  float far = u_far;\n  depth = (2.0 * near * far) / (far + near - z * (far - near));\n  depth /= far;\n  return depth;\n}\n\nvoid main(){\n  vec2 uv = v_texCoord;\n  vec3 texColor = texture(u_sample, uv).rgb;\n  float depth = perspectiveDepth();\n  //float depth = texture(u_depth, uv).r;\n  //unfog skybox\n  // if (depth > 0.99) {\n  //   depth = 0.4;\n  // }\n  vec3 fogColor = u_fogColor / 255.0;\n  float b = u_fog;\n  float fogAmount = exp(-b*b*depth);\n  vec3 color = mix(fogColor, texColor, fogAmount);\n  outColor = vec4(color, 1.0);\n}\n`;\n\nexport default {\n  vertex,\n  fragment\n}","var vertex =\n`#version 300 es\n  precision mediump float;\n  in vec4 a_position;\n  in vec2 a_texCoord;\n  in vec3 a_normal;\n  out vec2 v_texCoord;\n  out vec3 v_normal;\n  out vec4 v_fragPos;\n\n  void main(){\n    gl_Position = a_position;\n    v_texCoord = a_texCoord;\n    v_normal = a_normal;\n    v_fragPos = a_position;\n  }\n`;\n\nexport default vertex;","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment =\n`#version 300 es\nprecision mediump float;\nuniform sampler2D u_sample;\nuniform vec2 u_mouse;\nuniform float u_time;\nuniform vec2 u_resolution;\nin vec2 v_texCoord;\nin vec3 v_normal;\nin vec4 v_fragPos;\nout vec4 outColor;\n\nvoid main(){\n  vec3 color = texture(u_sample, v_texCoord+u_mouse/u_resolution).rgb;\n  outColor = vec4(color * vec3(v_texCoord+0.5*sin(u_time), 0.0), 1.0);\n}\n`;\n\nexport default {\n  vertex,\n  fragment\n}","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\n    precision mediump float;\n\n    uniform vec2 u_mouse;\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    \n    in vec2 v_texCoord;\n    in vec3 v_normal;\n    in vec4 v_fragPos;\n    out vec4 fragColor;\n\n    const float TURBULENCE = 0.04;\n    //noise function from iq: https://www.shadertoy.com/view/Msf3WH\n    vec2 hash( vec2 p ) \n    {\n        p = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) );\n        return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n    }\n\n    float noise( in vec2 p )\n    {\n        const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n        const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n        vec2  i = floor( p + (p.x+p.y)*K1 );\n        vec2  a = p - i + (i.x+i.y)*K2;\n        float m = step(a.y,a.x); \n        vec2  o = vec2(m,1.0-m);\n        vec2  b = a - o + K2;\n        vec2  c = a - 1.0 + 2.0*K2;\n        vec3  h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n        vec3  n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n        return dot( n, vec3(70.0) );\n    }\n\n    const mat2 m2 = mat2(1.6,  1.2, -1.2,  1.6);\n\n    float fbm(vec2 p) {\n        float amp = 0.5;\n        float h = 0.0;\n        for (int i = 0; i < 8; i++) {\n            float n = noise(p);\n            h += amp * n;\n            amp *= 0.5;\n            p = m2 * p ;\n        }\n        \n        return  0.5 + 0.5*h;\n    }\n    vec3 smokeEffect(vec2 uv) {\n        vec3 col = vec3(0.0);\n        // time scale\n        float v = 0.0002;\n        vec3 smoke = vec3(1.0);\n        vec2 scale = uv * 0.5 ;\n        vec2 turbulence = TURBULENCE * vec2(noise(vec2(uv.x * 3.5, uv.y * 3.2)), noise(vec2(uv.x * 2.2, uv.y * 1.5)));\n        scale += turbulence;\n        float n1 = fbm(vec2(scale.x - abs(sin(u_time * v * 2.0)), scale.y - 50.0 * abs(sin(u_time * v))));\n        col =  mix( col, smoke, smoothstep(0.5, 0.9, n1));\n        col = clamp(col, vec3(0.0), vec3(1.0));\n        return col;\n    }\n\n    float circle(vec2 p, float r) {\n        float c = length(p) - r;\n        return smoothstep(r + 0.01, r, c);\n    }\n\n    float sinwave(vec2 p, float scale, float amp) {\n        float wave = cos(p.x * scale + 0.5) + 0.25 * cos(p.x * scale * scale);\n        float s = smoothstep(amp + 0.01, amp, amp * wave - p.y);\n        return s;\n    }\n\n    void main() {\n        vec2 uv = v_texCoord;\n        vec2 p = gl_FragCoord.xy/u_resolution;\n        p -= 0.5;\n        p.x *= u_resolution.x / u_resolution.y;\n\n        vec3 col = vec3(0.0);    \n        vec3 smoke = smokeEffect(p);\n        \n        vec3 background = 0.7 * vec3(238.0,232.0,170.0)/255.0;\n        vec3 mountCol = mix(vec3(102.0,153.0,153.0)/255.0, vec3(153.0,204.0,0.0)/255.0, p.y + 0.5);\n        vec3 sunCol = 0.85 * mix(vec3(1.0, 0.0, 0.0), vec3(1.0, 1.0, 0.0), p.y + 0.5);\n        vec3 cloudCol = vec3(0.9);\n        float t = u_time * 0.05;\n        vec2 sunPos = p - vec2(0.4 * cos(t), 0.4 * sin(t));\n        float sun = circle(sunPos, 0.1); \n        float mountain1 = sinwave(p - vec2(0.5, -0.1), 3.0, 0.1);\n        float mountain2 = sinwave(p, 3.0, 0.2);\n        float cloud = 1.0 - smoke.r;\n        col = mix(background, sunCol, sun);\n        col = mix(mountCol * 0.9, col, mountain1);\n        col = mix(cloudCol, col, cloud);\n        col = mix(mountCol, col, mountain2);\n        \n        col *= 0.2 + 0.8 * pow(32.0 * uv.x * uv.y * (1.0 - uv.x) * (1.0 - uv.y), 0.2);\n        fragColor = vec4(col ,1.0);\n    }\n`;\n  \nexport default {\n    vertex,\n    fragment\n}","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\nprecision mediump float;\n\nuniform sampler2D u_sample;\nuniform vec2 u_mouse;\nuniform float u_time;\nuniform vec2 u_resolution;\nin vec2 v_texCoord;\nin vec3 v_normal;\nin vec4 v_fragPos;\nout vec4 fragColor;\n\n//#define TIME mod(iTime,10000.0)\n#define PI 3.1416\n#define TERRAIN_PATTERN 4.0*sin(12.0*pos.x)+sin(20.0*pos.y)+sin(15.0*pos.z)\n#define SPEED aTime*0.3\n#define MAX_DIST 20.0\n#define MAX_STEP 80\n#define SUN_DIRECTION vec3(0.8,0.3,0.9)\n#define SUNLIGHT_INTENSITY vec3(6.0,5.5,4.0)\n#define SUNSET_COLOR vec3(0.7,0.2,0.1)\n#define SKY_COLOR vec3(0.25, 0.35, 0.6)\n#define TERRAIN_COLOR vec3(0.07,0.04,0.03)\n#define RIM_COLOR vec3(0.85,0.1,0.1)\n#define RIM_POWER 0.15\n#define AA_SIZE 0\n\n#define iTime u_time\n#define iMouse u_mouse\n#define iResolution u_resolution\n\nfloat hash1(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * 0.013);\n    p3 += dot(p3, p3.yzx + 19.31);\n    return -1.0 + 2.0 * fract((p3.x + p3.y) * p3.z);\n}\n\nfloat noise(in vec2 x) {\n    vec2 p = floor(x);\n    vec2 w = fract(x);\n    \n    vec2 u = w*w*w*(w*(w*6.0-15.0)+10.0);\n    \n    float a = hash1(p+vec2(0,0));\n    float b = hash1(p+vec2(1,0));\n    float c = hash1(p+vec2(0,1));\n    float d = hash1(p+vec2(1,1));\n\n    float k0 = a;\n    float k1 = b - a;\n    float k2 = c - a;\n    float k4 = a - b - c + d;\n\n    return k0 + k1*u.x + k2*u.y + k4*u.x*u.y;\n}\n\nfloat sdSphere(in vec3 pos, in float r)\n{\n    return length(pos)-r;\n}\n\n//http://iquilezles.org/www/articles/ellipsoids/ellipsoids.htm\nfloat sdElipsoid(in vec3 pos, in vec3 r)\n{\n    float k0 = length(pos/r);\n    float k1 = length(pos/r/r);\n    return k0*(k0-1.0)/k1;\n}\n\nfloat sdStick(vec3 p, vec3 a, vec3 b, float r1, float r2) // approximated\n{\n    vec3 pa = p-a, ba = b-a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    float r = mix(r1, r2, h);\n\treturn length( pa - ba*h ) - r;\n}\n\n//http://iquilezles.org/www/articles/smin/smin.htm\nfloat smin(in float a, in float b, in float k)\n{\n    float h = max( k - abs(a-b), 0.0);\n    return min(a,b) - h*h*0.25/k;\n}\n\nvec4 sdUnion(vec4 d1, vec4 d2)\n{\n    return (d1.x<d2.x)? d1:d2;\n}\n\nvec4 map(in vec3 pos, float aTime)\n{\n    vec4 res = vec4(0.0, 0.0, 0.0, 0.0);\n    float t = fract(aTime);\n    float y = 3.0*t*(1.0-t); \n    vec3 cen = vec3(0.0,0.25+0.01*y,SPEED);\n    float sy = 0.8 + 0.2*y;\n    float sz = 1.0/sy;\n    vec3 r = vec3(0.35,0.32+0.02*sy,0.25+0.05*sz);\n    vec3 q = pos-cen;\n    vec3 h = q;\n    \n    //body\n    float d = sdElipsoid(q-vec3(0.0, 0.03, -0.09), r);\n    \n  \n    {\n    \n    //head\n    float hr = sin(aTime);\n    hr = 0.5*sign(hr)*smoothstep(0.5,1.0,abs(hr));\n    h.xz = mat2(cos(hr),sin(hr),-sin(hr),cos(hr))*h.xz;\n    \n    float d1 = sdElipsoid(h - vec3(0.0, 0.32, 0.01), vec3(0.28, 0.2, 0.18));\n    float d2 = sdElipsoid(h - vec3(0.0, 0.30, -0.07), vec3(0.2));\n    d2 = smin(d1, d2, 0.08);\n    d = smin(d, d2, 0.08);\n    \n    \n    vec3 sh = vec3(abs(h.x), h.yz);//symmetric along x\n    \n    //legs\n    vec3 shh = vec3(abs(h.x), h.y, abs(h.z+0.1));//symmetric along x and z\n    //animation settings\n    float t1 = fract(aTime+4.71*sign(h.x));\n    float y1 = 3.0*t1*(1.0-t1); \n    float offset = y1;\n    \n    d1 = sdStick(shh - vec3(0.11,-0.24,0.22), vec3(0.0,0.18,-0.1), vec3(0.0,-0.1,-0.15*offset), 0.08, 0.05); \n    d = smin(d, d1, 0.04);\n        \n    //nose\n    d1 = sdStick(h, vec3(0.0,0.41,0.12), vec3(0.0,0.37,0.18), 0.05, 0.03);\n    d = smin(d,d1,0.01);\n    \n    //ears\n    d2 = sdElipsoid(sh - vec3(0.15, 0.47, -0.05), vec3(0.06, 0.09, 0.04));\n    d = smin(d, d2, 0.08);\n    res = vec4(d,2.0,0.0,0.0);\n    \n    //tail\n    d2 = sdStick(h, vec3(0.0,-0.3,-0.1), vec3(-0.1*y,0.2,-0.55), 0.03, 0.05);\n    d = smin(d, d2, 0.06);\n    res = vec4(d,2.0,0.0,0.0);\n    \n    \n    //eyelids\n    vec3 elPos = sh - vec3(0.04,0.33,0.09);\n    d2 = sdStick(elPos, vec3(0.0,0.12,0.02), vec3(0.05,0.1,-0.02), 0.02, 0.02);\n   \td = smin(d, d2, 0.03);\n    res = vec4(d,2.0,0.0,0.0);\n    \n     \n    //eyes\n    float d5 = sdSphere(sh - vec3(0.065,0.4,0.108), 0.07);\n    res = sdUnion(res, vec4(d5,3.0,0.0,0.0));\n    \n    float eyeOffsetY = 0.01*smoothstep(0.0, 0.8,sin(aTime));\n    \n    d5 = sdSphere(sh - vec3(0.066,0.40+eyeOffsetY,0.124), 0.056);\n    res = sdUnion(res, vec4(d5,4.0,0.0,0.0));\n         \n    //mouth\n    float d6 = sdElipsoid(h - vec3(0.0,0.29,0.16), vec3(0.06,0.03,0.04));\n    float d7 = sdElipsoid(sh - vec3(0.035,0.32,0.175), vec3(0.055,0.036,0.04));\n    d6 = smin(d6,d7,0.01);\n    res = sdUnion(res, vec4(d6,6.0,0.0,0.0));\n    \n    //terrain\n    float fh = -0.1+0.05*(sin(2.2*pos.x) + sin(1.5*pos.z));\n    d1 = pos.y - fh;\n    d1 -= .01*noise(vec2(pos.x*10.0,pos.z*10.0));\n    if (d1<res.x) res = vec4(d1,1.0,0.0,0.0);\n    \n    //watermelon\n    float b = 5.0;\n    vec3 rep = vec3(mod(abs(pos.x),b)-3.5, pos.y, mod(abs(pos.z+1.5), b)-2.5);\n    vec2 id = vec2(floor(abs(pos.x)/b),floor((pos.z+1.5)/b));\n    float fid = id.x*13.3 + id.y*31.7;\n    float wr = 1.4+0.5*sin(fid*1.312);\n    \n    d2 = sdSphere(rep, wr);\n    if (d2<res.x) res = vec4(d2,8.0,0.0,0.0);\n \n    }\n    return res;\n}\n\nfloat calcOcclusion( in vec3 pos, in vec3 nor, in float aTime)\n{\n\tfloat occ = 0.0;\n    float sca = 1.0;\n    for( int i=0; i<4; i++ )\n    {\n        float h = 0.01 + 0.16*float(i)/4.0;\n        vec3 opos = pos + h*nor;\n        float d = map( opos, aTime ).x;\n        occ += (h-d)*sca;\n        sca *= 0.95;\n        \n    }\n    return clamp( 1.0 - 2.0*occ, 0.0, 1.0 );\n}\n\nvec3 calcNormal(in vec3 pos, in float aTime)\n{\n    vec2 e = vec2(0.001,0.0);\n    return normalize( vec3(map(pos + e.xyy,aTime).x - map(pos - e.xyy,aTime).x,\n                          map(pos + e.yxy,aTime).x - map(pos - e.yxy,aTime).x,\n                          map(pos + e.yyx,aTime).x - map(pos - e.yyx,aTime).x) );\n}\n\nfloat castShadow(in vec3 ro, in vec3 rd, in float aTime)\n{\n    float res = 1.0;\n    float t = 0.01;\n    float tMax = MAX_DIST;\n\n    for (int i=0; i<MAX_STEP;++i)\n    {\n        vec3 pos = ro + t*rd;\n        float h = map(pos,aTime).x;\n        res = min( res, 18.0*h/t );\n        if (res<0.001) break;\n        t += h;\n        if (t>tMax) break;\n    }\n    return clamp(res, 0.0, 1.0);\n}\n\nvec4 castRay(in vec3 ro, in vec3 rd, in float aTime)\n{\n   float t = 0.01;\n   vec3 m = vec3(0.0);\n   float tMax = MAX_DIST;\n   /*\n   float hMax = 2.5;\n   float bt = (hMax-ro.y)/rd.y;\n   if ( bt>0.0 ) tMax = min(tMax, bt);\n   */\n   \n   for ( int i = 0; i < MAX_STEP; ++i )\n   {\n       vec3 pos = ro + t*rd;\n       vec4 h = map( pos,aTime );\n       m = h.yzw;\n       if ( abs(h.x)<(0.001*t) )\n       {\n           break;\n       }\n       t += h.x;\n       if ( t>tMax ) break;\n   } \n    \n   if ( t>tMax )\n   {\n       m = vec3(-1.0);\n   }\n   return vec4(t,m);\n}\n\nvec3 render(in vec2 fragCoord, in float aTime)\n{\n    vec2 p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    float angle = 10.0*iMouse.x/iResolution.x+1.0;\n    \n    vec3 ta = vec3(0.0,0.45,0.8+SPEED);\n    vec3 ro = ta+vec3( 1.0*cos(angle), mouse.y, 1.0*sin(angle) );;\n    \n    vec3 ww = normalize(ta - ro);\n    vec3 uu = normalize( cross( ww, vec3(0.0, 1.0, 0.0) ) );\n    vec3 vv = normalize( cross( uu, ww ) );\n    \n    \n    vec3 rd = normalize(p.x * uu + p.y * vv + 2.0*ww);\n    vec3 sunDir = SUN_DIRECTION;//normalize( vec3(0.8,0.4,0.9) );\n    \n    vec3 col = SKY_COLOR;\n    \n    vec2 uv = rd.xz/rd.y; //sky dome( intersect the top )\n    float sinV = 1.0*(sin(1.0*uv.x )+sin(1.0*uv.y))\n        \t\t+ 0.5*(sin(2.0*uv.x+aTime)+sin(2.0*uv.y+aTime));\n    col = mix( col, vec3(0.9,0.85,0.6),smoothstep(-0.3,0.3,-0.5+sinV) );\n    col = mix(col, SUNSET_COLOR, exp(-4.0*rd.y));\n   \n    vec4 tm = castRay(ro, rd, aTime);\n    if ( tm.y>-1.0 )\n    {\n        float t = tm.x;\n        vec3 pos = ro + t*rd;\n        vec3 nor = calcNormal(pos, aTime);\n        vec3 mate = vec3(0.18);\n        if (tm.y==8.0)\n        {\n            //watermelon\n            mate = vec3(0.03,0.1,0.07);\n            float f = 1.0-smoothstep(-0.2, 0.2, TERRAIN_PATTERN);\n            mate = mix(mate, vec3(0.0,0.05,0.03), f);\n        } \n        else if (tm.y==7.0)\n        {\n            mate = vec3(0.8,0.2,0.0);\n        }\n        else if (tm.y==6.0)\n        {\n            mate = vec3(0.2,0.2,0.2); //mouth\n        }\n        else if (tm.y==5.0)\n        {\n            mate = vec3(0.25)*pos.y; //tail\n        } \n        else if (tm.y==4.0)\n        {\n        \tmate = vec3(0.01, 0.01, 0.015); //eyes \n        }\n        else if (tm.y==3.0)\n        {\n            mate = vec3(0.5, 0.5, 0.5); //eyes\n        }\n        else if (tm.y==2.0)\n        {\n            mate = vec3(0.01,0.01,0.02);//body\n        } else\n        {\n            mate = TERRAIN_COLOR;//terrain\n        }\n        \n        float occ = calcOcclusion( pos, nor, aTime );\n        float fresnel = clamp(1.0+dot(nor,rd),0.0,1.0);\n        float sunDiff = clamp( dot(nor, sunDir),0.0,1.0 );\n        float sunShadow = castShadow(pos+nor*0.01, sunDir, aTime);//step( castRay(pos+nor*0.001, sunDir).y,0.0 );\n        float skyDiff = clamp( 0.5 + 0.5*dot(nor, vec3(0.0,1.0,0.0)),0.0,1.0 );\n        //Simulate how lights bounce off from the ground to the object surface.\n        float bounceDiff = clamp( 0.5 + 0.5*dot(nor, vec3(0.0,-1.0,0.0)),0.0,1.0 );\n        col = mate*SUNLIGHT_INTENSITY*sunDiff*sunShadow;\n        col += mate*SKY_COLOR*skyDiff;\n        col += mate*SUNSET_COLOR*bounceDiff;\n        col *= occ;\n        col += RIM_POWER*RIM_COLOR*fresnel;\n        \n        if (tm.y==4.0 || tm.y==8.0)\n        {\n            vec3 viewDir = normalize(ro-pos);\n            vec3 reflectDir = normalize(reflect(-sunDir, nor));\n            float spec = pow(max(dot(reflectDir, viewDir), 0.0), 64.0);\n            vec3 speCol = vec3(1.0) * spec;\n            col += speCol;\n        }\n        \n        // fog\n        col = mix( col, SUNSET_COLOR, 1.0-exp( -0.005*t*t ) );\n    } \n    return col;\n}\n\nvoid main()\n{\n    vec3 col = vec3(0.0);\n    vec2 off = vec2(0.0);\n    vec2 fragCoord = gl_FragCoord.xy;\n    float md = texture(u_sample, fragCoord).x;\n    \n#if AA_SIZE>1\n    //anti aliasing & motion blur\n    for (float aaY = 0.0; aaY < float(AA_SIZE); ++aaY)\n    {\n        for (float aaX = 0.0; aaX < float(AA_SIZE); ++aaX)\n        {\n            off = -0.5+vec2(aaY,aaX)/float(AA_SIZE);\n            float mb = (aaY*float(AA_SIZE)+aaX)/(float(AA_SIZE*AA_SIZE-1));\n            mb += (md-0.5)/float(AA_SIZE*AA_SIZE);\n            float aTime = iTime - mb*0.5*(1.0/24.0); //1 frame in 24fps for film\n#else\n            float aTime = iTime;\n#endif\n            \n            col += render(fragCoord+off, aTime);\n            \n#if AA_SIZE>1\n        }\n    }\n    col /= float(AA_SIZE*AA_SIZE);\n#endif\n    \n    //gamma\n    col = pow( col, vec3(0.4546));\n    // vignetting        \n    vec2 q = v_texCoord;\n    col *= 0.5 + 0.5*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.25);\n    fragColor = vec4(col, 1.0);\n}\n`;\n\nexport default {\n    vertex,\n    fragment\n}","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\n    precision mediump float;\n\n    uniform sampler2D u_sample;\n    uniform vec2 u_mouse;\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    \n    in vec2 v_texCoord;\n    in vec3 v_normal;\n    in vec4 v_fragPos;\n    out vec4 fragColor;\n\n    #define iTime u_time\n    #define iMouse u_mouse\n    #define iResolution u_resolution\n\n    /*\nhttp://www.iquilezles.org/www/articles/terrainmarching/terrainmarching.htm\nhttp://www.iquilezles.org/www/articles/morenoise/morenoise.htm\n*/\n\nconst vec3 PURPLE = vec3(1.0, 0.9, 1.0);//vec3(141.0, 0.0, 196.0)/255.0;\nconst vec3 PINK = vec3(0.5, 0.4, 0.4);//vec3(255.0,192.0,203.0)/255.0;\nconst vec3 WHITE = vec3(1.0);\nconst vec3 BLACK = vec3(0.0);\nconst vec3 SKY = vec3(0.0);\nconst vec3 MOON = vec3(1.0, 0.6, 0.0);\nconst vec3 BLUE = vec3(0.1,0.2,0.3);\nconst vec3 GREEN = vec3(0.1,0.2,0.3);\nconst vec3 EARTH = vec3(0.1);\nconst float PI = 3.1415926;\nconst float EPSILON = 0.0001;\nconst float SCALE = 0.01;\nconst float HEIGHT = 12.0;\nconst float MAX_DISTANCE = 400.0;\nconst int MAX_STEP = 40;\nconst int ITERATION = 8;\nconst float LUCUNARITY = 1.2;\n#define AA 1\n\nvec3 moonDir = normalize(vec3(7.0, 1.0, -5.0));\n\nfloat hash1(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * 0.013);\n    p3 += dot(p3, p3.yzx + 19.31);\n    return -1.0 + 2.0 * fract((p3.x + p3.y) * p3.z);\n}\n\nfloat noise(in vec2 x) {\n    vec2 p = floor(x);\n    vec2 w = fract(x);\n    \n    vec2 u = w*w*w*(w*(w*6.0-15.0)+10.0);\n    \n    float a = hash1(p+vec2(0,0));\n    float b = hash1(p+vec2(1,0));\n    float c = hash1(p+vec2(0,1));\n    float d = hash1(p+vec2(1,1));\n\n    float k0 = a;\n    float k1 = b - a;\n    float k2 = c - a;\n    float k4 = a - b - c + d;\n\n    return k0 + k1*u.x + k2*u.y + k4*u.x*u.y;\n}\n\nvec3 noised( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 w = fract(x);\n    \n    vec2 u = w*w*w*(w*(w*6.0-15.0)+10.0);\n    vec2 du = 30.0*w*w*(w*(w-2.0)+1.0);\n    \n    float a = hash1(p+vec2(0,0));\n    float b = hash1(p+vec2(1,0));\n    float c = hash1(p+vec2(0,1));\n    float d = hash1(p+vec2(1,1));\n\n    float k0 = a;\n    float k1 = b - a;\n    float k2 = c - a;\n    float k4 = a - b - c + d;\n\n    return vec3( -1.0 + 2.0 * (k0 + k1*u.x + k2*u.y + k4*u.x*u.y), \n                      2.0* du * vec2( k1 + k4*u.y,\n                                      k2 + k4*u.x ) );\n}\n\nconst mat2 m2 = mat2(1.2,  0.8, -0.8,  1.2);\nfloat fbm4(vec2 p) {\n    float amp = 1.0;\n    float h = 0.0;\n    for (int i = 0; i < ITERATION; i++) {\n        float n = noise(p);\n        h += amp * n;\n        amp *= 0.5;\n        p = m2 * p ;\n    }\n\treturn  h;\n}\n\n\nconst mat2 m = mat2(1.2, -0.6, 0.6, 1.2);\nvec4 fbmd4(vec2 v) {\n    \n    float amp = 1.0;\n    float f = 1.0 ;\n    float h = 0.0;\n    vec2 d = vec2(0.0);\n    for (int i = 0; i < ITERATION; i++) {\n        vec3 n = 1.0 - abs(noised(v * SCALE * f)); //noised(v * SCALE * f)\n        h += amp * n.x;\n        d += amp * n.yz * f;\n        amp *= 0.5;\n        f *= LUCUNARITY;\n        v = m * v;\n    }\n    h *= HEIGHT  ;\n\td *= HEIGHT * SCALE;\n\treturn vec4( h, normalize( vec3(-d.x,1.0,-d.y) ) );\n}\n\nvec4 terrainMap(vec3 v) {\n    vec4 terrain = fbmd4(v.xz - vec2(100.0, 0.0));\n    terrain.x += .02*noise(v.xz*0.8);\n    return terrain;\n}\n\n    \nvec4 sceneMap(vec3 v) {\n    return terrainMap(v);\n}\n\nvec3 getNormal(vec3 p )\n{\n    vec2 OFFSET = vec2(EPSILON, 0.0);\n    return normalize( vec3( sceneMap(p-OFFSET.xyy).x-sceneMap(p+OFFSET.xyy).x,\n                            1.0*EPSILON,\n                            sceneMap(p-OFFSET.yyx).x-sceneMap(p+OFFSET.yyx).x ) );\n}\nvec3 moon(vec3 ro, vec3 rd) {\n    float n1 = 0.3*noise(rd.xy * 20.0 - iTime);\n    float n2 = 0.3*noise(rd.xy * 10.0 - iTime);\n    float sdot = dot(rd, moonDir)*10.0;\n    float m1 = smoothstep(9.4, 9.75, sdot);\n    float col1 = pow(m1, 128.0);\n    float m2 = smoothstep(9.0+n1, 9.75, sdot);\n    float col2 = pow(m2, 64.0);\n    float m3 = smoothstep(8.2+n2, 9.7, sdot);\n    float col3 = pow(m3, 32.0);\n    float hole1 = (col2 -col1);\n    float hole2 = (col3 -col1);\n    vec3 rst = hole1*MOON*8.0 + hole2*BLUE*2.0;\n    return rst;\n}\n\n\nvec3 stars(vec2 p) {\n    float t = iTime * 0.1;\n    float n1 = hash1(p*0.1) ;\n    n1 *= pow(n1*n1, 680.0) ;\n    n1 *= sin(t*5.0 + p.x + sin(t*2.0 + p.y));\n    n1 = clamp(n1, 0.0, 1.0);\n    return n1 * vec3(1.0);\n}\n\nvec3 sky(vec3 ro, vec3 rd) {\n    vec3 col = vec3(0.0);\n    vec3 v = ro + rd*MAX_DISTANCE;\n    float n1 = noise(v.xy * 0.001);\n    float n2 = noise(v.yx * 0.001);\n    vec3 skyCol = GREEN * 0.01;\n    col += mix(skyCol, GREEN, exp(-16.0*v.y/MAX_DISTANCE));\n    col += stars(v.xy);\n    col += moon(ro, rd);\n    return col;\n}\n\nvec4 castRay(vec3 ro, vec3 rd) {\n    vec4 re = vec4(-1.0);\n    float t = 0.0;\n    for( int i=0; i<MAX_STEP; i++ ){\n        vec3 p = ro + rd * t;\n        vec4 n = sceneMap(p);\n        float h = p.y - n.x;\n    \tre = vec4(t, n.yzw);\n        t += h*n.z; \n        if ((abs(h) < EPSILON) || t > MAX_DISTANCE) {\n            break;\n        } \n    }\n    \n    if (t > MAX_DISTANCE) {\n        re = vec4(-1.0);\n    }\n    return re;\n}\n\nvec3 getShading(vec3 ro, vec3 rd, vec3 p, vec3 normal, vec3 color) {\n    vec3 col = vec3(0.0);\n    vec3 lightDir = moonDir;\n    float moonAmount = max(dot(rd, lightDir), 0.0);\n    vec3 lightCol = mix( GREEN, MOON, pow(moonAmount, 2.0));\n    \n    vec3 viewDir = normalize(ro - p); \n    vec3 refDir = reflect(-lightDir, normal);\n    \n    vec3 ambCol = lightCol * 0.1;\n    float diff = max(dot(lightDir, normal), 0.0);\n    vec3 diffCol = lightCol * diff;\n    \n    float spec = pow(max(dot(refDir, viewDir), 0.0), 8.0);\n    vec3 speCol = lightCol * spec * 0.7;\n    \n    \n    \n    col = (speCol + diffCol) * color ;\n    return col;\n}\n\nvec3 getMaterial(vec3 ro, vec3 rd, vec3 p, vec3 normal) {\n    //vec3 col = texture(iChannel1, p.xz * 0.0051, - 100.0).xyz * 0.5;\n    vec3 col = vec3(0.3, 0.1, 0.1);\n    vec3 lightDir = moonDir;\n    //a bit of sprinkling\n    if (hash1(p.xz) > 0.995) {\n    \tcol += clamp(sin(iTime + p.x*p.z), 0.5, 1.0) * vec3(1.2);\n  \t}\n    \n    return col;\n}\n\nvec3 terrainColor(vec3 ro, vec3 rd, vec3 p, vec3 nor) {\n    vec3 col = vec3(0.0);\n    col = getMaterial(ro, rd, p, nor);\n    col = getShading(ro, rd, p, nor, col) ;\n    \n    return col;\n}\n\nvec3 fog(vec3 ro, vec3 rd, vec3 p, vec3 pixCol, float dis)\n{\n    vec3 lightDir = moonDir;\n    //base color and moonlight\n    vec3 fogCol = vec3(0.0);\n    float b  = 0.000005;\n    float fogAmount = 1.0 - exp( -dis*dis*b );\n    \n    float moonAmount = max(dot(rd, lightDir), 0.0);\n    vec3 mixFog = mix(GREEN, MOON*0.5, pow(moonAmount, 16.0));\n\tfogCol = mix( pixCol, mixFog, fogAmount );\n   \n    //adding density\n    float c = 0.001;\n    float b1 = 0.15;\n    float t = iTime ;\n    float v = 1.0;\n    vec3  denCol  = GREEN; \n    float density =  c * exp(-ro.y*b1) * (1.0 - exp(-dis*rd.y*b1 ))/(rd.y);\n    \n    float turb = fbm4(vec2(p.x*0.02+t*v, p.z*0.02+t*v));\n    density += 0.05*turb;\n    fogCol += mix( pixCol, denCol, density);\n    return fogCol;\n}\n\nmat3 getCamera( in vec3 ro, in vec3 ta, float cr )\n{\n\tvec3 cw = normalize(ta-ro);\n\tvec3 cp = vec3(sin(cr), cos(cr),0.0);\n\tvec3 cu = normalize( cross(cw,cp) );\n\tvec3 cv =          ( cross(cu,cw) );\n    return mat3( cu, cv, cw );\n}\n\nvec3 render( in vec2 fragCoord)\n{\n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy ;\n    //uv -= 0.5; // translate to the center of the screen\n    uv.x *= iResolution.x / iResolution.y; // restore aspect ratio\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    //define camera\n    vec3 ro = vec3 (cos(mouse.x * 6.28) * 10.0, 0.0, sin(mouse.x * 6.28) * 10.0);\n    vec3 ta = vec3 (0.0, 1.0, -2.0);\n    mat3 cam = getCamera(ro, ta, 0.0);\n\n    vec3 rd = normalize(cam * vec3(uv, 1.0));\n    \n    //draw scene\n   \tvec3 color = vec3(0.0);\n    vec4 hnor = castRay(ro, rd);\n    vec3 p = ro + rd * hnor.x;\n    \n    if (hnor.x > EPSILON) {\n        //vec3 nor = hnor.yzw + 0.01*hash1(p.xz * 5.0);\n        vec3 nor= getNormal(p) ;\n        color += terrainColor(ro, rd, p, nor);  \n        color = fog(ro, rd, p, color, hnor.x);\n    } else {\n        color += sky(ro, rd);\n    }\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 pixCol = vec3(0.0);\n    vec2 offset = vec2(0.0);\n    \n#if AA>1\n    for (float y = 0.0; y < float(AA); ++y)\n    {\n        for (float x = 0.0; x < float(AA); ++x)\n        {\n            offset = -0.5 + vec2(x, y) / float(AA);\n\n        \tpixCol += render(fragCoord+offset);\n        }\n    }\n    pixCol /= float(AA*AA);\n#else\n    pixCol += render(fragCoord);\n#endif\n        \n    pixCol = pow( pixCol, vec3(1.0/2.2) );\n    \n    // Output to screen\n    fragColor = vec4(pixCol, 1.0);\n\t\n}\n\nvoid main() {\n    vec3 tex = texture(u_sample, v_texCoord).rgb;\n    mainImage(fragColor, gl_FragCoord.xy);\n}\n`;\n  \nexport default {\n    vertex,\n    fragment\n}","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\n    precision mediump float;\n\n    uniform sampler2D u_sample;\n    uniform sampler2D u_sample1;\n    uniform vec2 u_mouse;\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    \n    in vec2 v_texCoord;\n    in vec3 v_normal;\n    in vec4 v_fragPos;\n    out vec4 fragColor;\n    // Convert to shadertoy namings\n    #define iMouse u_mouse\n    #define iResolution u_resolution\n    #define iTime u_time\n\n    #define MAX_DISTANCE 80.0\n    #define MAX_STEP 120\n    #define EPSILON 0.0001\n    #define PI 3.1415\n    #define RIM_COLOR vec3(0.1,0.05,0.2)\n    #define LIGHT_COLOR vec3(0.15,0.1,0.3)\n    #define LIGHT_DIR vec3(cos(iTime),1.0,sin(iTime))\n    #define SPHERE_COLOR vec3(0.2, 0.6, 1.0)\n    #define GLOW vec3(0.1, 0.8, 1.0)\n    \n\n    //http://iquilezles.org/www/articles/smin/smin.htm\n    vec3 sdMin (vec3 d1, vec3 d2)\n    {\n        return d1.x < d2.x ? d1 : d2;\n    }\n\n    vec3 sdMax (vec3 d1, vec3 d2)\n    {\n        return d1.x > d2.x ? d1 : d2;\n    }\n\n    float sdSmoothMin( float d1, float d2, float k ) {\n        float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n        return mix( d2, d1, h ) - k*h*(1.0-h); \n    }\n\n\n    float smin(in float a, in float b, in float k)\n    {\n        float h = max( k - abs(a-b), 0.0);\n        return min(a,b) - h*h*0.25/k;\n    }\n\n    float smax(in float a, in float b, in float k)\n    {\n        float h = max( k - abs(a-b), 0.0);\n        return max(a,b) + h*h*0.25/k;\n    }\n\n    float sphereSDF(vec3 p, float r) \n    {\n        return length(p) - r;\n    }\n\n    float sdVerticalCapsule( vec3 p, float h, float r )\n    {\n    p.y -= clamp( p.y, 0.0, h );\n    return length( p ) - r;\n    }\n\n    float disp (vec3 p) \n    {\n        float n = texture(u_sample, p.xy+p.yz+p.xz).r;\n        return  (sin(p.z * 25.2 + 10.0*n) + sin(p.x * 28.9 + 10.0*n));\n    }\n\n    float disp1 (vec3 p)\n    {\n        //return (sin(p.x) + sin(p.z)) * sin(p.y);\n        return texture(u_sample1, p.xz*0.1).r;\n    }\n\n    float leg(vec3 p, float h, float r) \n    {\n        vec3 q = p-vec3(0.0,-1.0,0.0) ;\n        q.xz += 0.5*sin(q.y*0.3);\n        float scale = mix(1.0, 2.2, smoothstep(h-10.0,h, q.y));\n        r *= scale;\n        float d = sdVerticalCapsule(q, h, r);\n        d += 0.008*disp(q*0.5);\n        return d;\n    }\n\n    float shell(vec3 p, float r) \n    {\n        float t = iTime*0.1;\n        float scale = mix(0.6+0.2*sin(t), 2.2+0.8*sin(t), smoothstep(-1.2,2.5, -0.6*p.y));\n        r *= scale;\n        float s1 = sphereSDF(p , r);\n        s1 = abs(s1)-0.1;\n        \n        s1 += 0.18*disp1(p*2.3)*(0.5+0.5*sin(t)); // holes\n        s1 *= 0.5;\n        \n        float plane = dot(p, normalize(vec3(0.0,-1.0,0.0)))-3.65;\n        \n        //plane -= 0.08*disp1(p*8.0);;\n        float d = s1 > plane ? s1 : plane;\n        \n        return d;\n    }\n\n    mat3 getCamera( in vec3 ro, in vec3 ta) \n    {\n        vec3 cw = normalize(ta-ro);\n        vec3 cp = vec3(0.0, 1.0, 0.0);\n        vec3 cu = normalize( cross(cw,cp) );\n        vec3 cv =          ( cross(cu,cw) );\n        return mat3( cu, cv, cw );\n    }\n\n\n    float noise(in vec2 uv) {\n        return texture(u_sample1, uv/64.0).r;\n    }\n\n    float smoothNoise(in vec2 uv) {\n        vec2 luv = fract(uv); //range from 0.0 to 1.0\n        vec2 id = floor(uv); //the integer part of uv, 0, 1, 2\n        luv = luv*luv*(3.0 - 2.0*luv); //similar to smoothstep\n        \n        //get values from the cordinates of a square\n        float bl = noise(id);\n        float br = noise(id + vec2(1.0, 0.0));\n        float tl = noise(id + vec2(0.0, 1.0));\n        float tr = noise(id + vec2(1.0, 1.0));\n        \n        float b = mix(bl, br, luv.x); //interpolate between bl and br\n        float t = mix(tl, tr, luv.x); //interpolate between tl and tr\n        \n        return mix(b, t, luv.y);\n    }\n\n    float hash21(vec2 p) {\n        p = fract(p*vec2(133.7, 337.1));\n        p += dot(p, p+vec2(37.1,17.33));\n        return fract(p.x*p.y);\n    }\n\n    vec3 offset = vec3(0.0);\n    vec4 sceneSDF(vec3 p) \n    {\n        \n        vec3 q = p; // org pos\n        \n        //head\n        float d1 = shell(q, 3.5);\n        \n        //leg\n        float h = 15.0;\n        float r = 0.9;\n        vec3 q1 = q - vec3(0.0, -h, 0.0);\n        float d2 = leg(q1, h, r);\n        \n        //ground\n        float d3 = q1.y + 2.0*texture(u_sample1, q1.xz*0.01).r;\n        \n        float d = sdSmoothMin(d1, d2, 0.5);\n        d = sdSmoothMin(d, d3, 2.0);\n        vec3 rst = vec3(d, 1.0, 0.0);\n        \n        //glow\n        float v = 0.2;\n        vec3 npos = v*(p-vec3(0.0, -h-1.0, 0.0));\n        vec2 nid = floor(vec2(npos.x+0.5, npos.z+0.5));\n        vec3 fid = vec3(fract(npos.x+0.5)-0.5, npos.y, fract(npos.z+0.5)-0.5);\n        float nn = hash21(nid*3.0);\n        vec3 fpos = fid + 0.2*vec3(sin(nn*112.33), 0.0, cos(nn*171.3));\n        float rr = pow(nn,3.0);\n        fpos.y += 0.08*sin(nid.x * nid.y + iTime*5.0);\n        float s2 = sphereSDF(fpos, 0.02+0.2*rr)/v;\n        rst = sdMin(rst, vec3(s2, 2.0, 0.0));\n        return vec4(rst, s2);\n    }\n\n    vec4 marching( in vec3 ro, in vec3 rd )\n    {\n        vec4 rst = vec4(0.0);\n        float t = 0.01;\n        float minDist = MAX_DISTANCE;\n        for ( int i = 0; i < MAX_STEP; ++i )\n        {\n            vec3 p = ro + t * rd;\n            vec4 dist = sceneSDF(p);\n            minDist = min(minDist, dist.w/t);\n            rst = vec4(t, dist.y, minDist, dist.w);\n            if ( abs(dist.x)< EPSILON || t>MAX_DISTANCE) break;\n            t += dist.x; \n        }\n        \n        if ( t>MAX_DISTANCE )\n        {\n            rst = vec4(MAX_DISTANCE, -1.0, minDist, MAX_DISTANCE);\n        }\n        \n        return rst;\n    }\n\n    vec3 getNormal(vec3 p) \n    {\n        return normalize(\n                vec3(\n                    sceneSDF(vec3(p.x + EPSILON, p.y, p.z)).x - sceneSDF(vec3(p.x - EPSILON, p.y, p.z)).x,\n                    sceneSDF(vec3(p.x, p.y + EPSILON, p.z)).x - sceneSDF(vec3(p.x, p.y - EPSILON, p.z)).x,\n                    sceneSDF(vec3(p.x, p.y, p.z  + EPSILON)).x - sceneSDF(vec3(p.x, p.y, p.z - EPSILON)).x\n                )\n            );\n    }\n\n    vec3 testSurf(vec2 p)\n    {\n        float f0 = mod(floor(p.x*2.0) + floor(p.y*2.0), 4.0);\n        float f1 = mod(floor(p.x*4.0) + floor(p.y*4.0), 2.0);\n        vec3 col = mix(vec3(0.8, 0.5, 0.4), vec3(0.5, 0.3, 0.7), f0);\n        col = mix(col, vec3(0.2, 0.4, 0.3), f1);\n        \n        return col;\n    }\n\n    vec3 shading(vec4 hit, vec3 ro, vec3 rd) \n    {\n        vec3 p = ro + hit.x * rd;\n        vec3 nor = getNormal(p);\n        \n        vec3 col = vec3(0.0);\n        vec3 surfCol = vec3(0.0);\n        vec3 coeff = vec3(0.04, 1.0, 1.0); //ambient, diffuse, specular\n        vec3 p1 = p - offset;\n        float n = texture(u_sample, p.xz*0.2).r;\n        float nf = texture(u_sample, floor(p1.xz)).r;\n        vec2 polar = vec2(atan(p1.z, p1.x), 0.5+0.1*n);\n        float detail = texture(u_sample1,  polar).r;\n        vec3 w0 = nor * nor;\n        vec3 p2 = 0.2*p1;\n        vec3 noiseTex = w0.xxx * texture(u_sample, p2.yz).rgb \n                        + w0.yyy * texture(u_sample, p2.xz).rgb\n                        + w0.zzz * texture(u_sample, p2.xy).rgb;\n        float rimPow = 8.0;\n        float t = iTime;\n        if (hit.y < 1.5)\n        {\n            float h = 0.5+0.5*sin(p.y*0.5+1.3); \n            surfCol = mix(vec3(0.1,0.58,0.85), vec3(0.0), h);\n            surfCol *= detail;\n            float tk = 0.5+0.5*(sin(length(p)+t*3.0)*cos(length(p)+t*2.0));\n            surfCol += pow(n,64.0)*vec3(0.0, 100.0,100.0)*tk;\n            surfCol *= smoothstep(-10.0, 0.0, p1.y);   \n            \n            vec3 lightDir = normalize(LIGHT_DIR); \n            vec3 viewDir = normalize(-rd);\n            vec3 reflectDir = normalize(reflect(-viewDir, nor));\n            float spec = pow(max(dot(reflectDir, viewDir), 0.0), 32.0); \n            float diff = max( dot(nor, lightDir), 0.0);\n\n            float rim = 1.0-max(dot(nor, viewDir), 0.0);\n            float rimS = pow(rim, rimPow);\n            vec3 rimCol = RIM_COLOR*rimS;\n\n            surfCol = coeff.x*surfCol + (coeff.y*surfCol*diff + coeff.z*spec)*LIGHT_COLOR;\n            surfCol += rimCol;\n        } \n        else if (hit.y < 2.5)\n        {\n            surfCol = vec3(0.01);\n        }\n        return surfCol;\n    }\n\n    vec3 render(in vec2 fragCoord) \n    {\n        vec2 uv = v_texCoord * 2.0 - 1.0;\n        uv.x *= iResolution.x/iResolution.y; \n        vec2 mo = iMouse.xy/iResolution.xy;\n        \n        vec3 ro = vec3(25.0 * cos(mo.x * 2.0 * PI), 0.0, 25.0 * sin(mo.x * 2.0 * PI));\n        vec3 ta = vec3(0.0, -5.0, 0.0);\n        mat3 cam = getCamera(ro, ta);\n        vec3 rd = normalize(cam * vec3(uv, 1.0));\n        vec4 hit = marching(ro, rd);\n        vec3 col = vec3(0.0,0.001,0.003);\n        if (hit.x < MAX_DISTANCE) \n        {\n        col = shading(hit, ro, rd);\n        }\n    \n        //glow\n        vec3 p = ro + rd * hit.x;\n        hit.z = clamp(hit.z, 0.0, 3.0);\n        float glow0 = exp(-180.0*hit.z);\n        float glow1 = min(pow(0.0013/hit.z, 32.0), 1.0);\n        vec3 glowCol = vec3(0.0);\n        \n        float v = 0.2;\n        vec3 npos = v*p;\n        vec3 nid = floor(npos+0.5);\n        float vc = hash21(nid.xz);\n        vec3 vCol = vec3(0.0,1.0,4.0)*vec3(0.0,1.0,4.0);\n        vCol.r += 3.0*vc;\n        vCol.g += 1.0*fract(vc*111.77);\n        glowCol += 0.4*vCol*glow0;  \n        glowCol += vCol*glow1; \n        float t = sin(iTime+vc*5.0);\n        float y = 3.0*t*(1.0-t); \n        glowCol *= 0.5+0.5*y;\n        col += glowCol;\n        // fog\n        col = mix( col, vec3(0.0), 1.0-exp( -0.001*hit.x*hit.x ) );\n        return col;\n        \n    }\n\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\n    {\n        vec3 col = render(fragCoord);\n        \n        col = pow(col, vec3(1.0/2.2));  \n\n        // Output to screen\n        fragColor = vec4(col,1.0);\n    }\n\n    void main() {\n        mainImage(fragColor, gl_FragCoord.xy);\n    }\n`;\n  \nexport default {\n    vertex,\n    fragment\n}","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\n    precision mediump float;\n\n    uniform sampler2D u_sample;\n    uniform vec2 u_mouse;\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    \n    in vec2 v_texCoord;\n    in vec3 v_normal;\n    in vec4 v_fragPos;\n    out vec4 fragColor;\n\n    // Convert to shadertoy namings\n    #define iMouse u_mouse\n    #define iResolution u_resolution\n    #define iTime u_time\n\n    #define PI 3.1416\n    #define TERRAIN_PATTERN 4.0*sin(12.0*pos.x)+sin(20.0*pos.y)+sin(15.0*pos.z)\n    #define SPEED aTime*0.2\n    #define MAX_DIST 40.0\n    #define MAX_STEP 60\n    #define LIGHT_DIRECTION vec3(0.8,0.2,1.0)\n    #define LIGHT_INTENSITY vec3(0.5,1.0,2.0)*2.0\n    #define SKY_COLOR vec3(0.01, 0.01, 0.02)\n    #define TERRAIN_COLOR vec3(0.01,0.02,0.03)\n    #define GLOW_COLOR vec3(0.1,0.85,1.2)\n    #define RIM_POWER 0.25\n    #define AA_SIZE 1\n\n    vec3 rotateY(vec3 p, float rad) {\n        p.x = cos(rad)*p.x + sin(rad)*p.z;\n        p.z = -sin(rad)*p.x + cos(rad)*p.z;\n        return p;\n    }\n\n    vec3 rotateZ(vec3 p, float rad) {\n        p.x = cos(rad)*p.x - sin(rad)*p.y;\n        p.y = sin(rad)*p.x + cos(rad)*p.y;\n        return p;\n    }\n\n    float sdSphere(in vec3 pos, in float r)\n    {\n        return length(pos)-r;\n    }\n\n    //http://iquilezles.org/www/articles/ellipsoids/ellipsoids.htm\n    float sdElipsoid(in vec3 pos, in vec3 r)\n    {\n        float k0 = length(pos/r);\n        float k1 = length(pos/r/r);\n        return k0*(k0-1.0)/k1;\n    }\n\n    float sdRoundBox( vec3 p, vec3 b, float r )\n    {\n    vec3 q = abs(p) - b;\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n    }\n\n    float sdCylinder( vec3 p, vec3 c )\n    {\n    return length(p.xz-c.xy)-c.z;\n    }\n\n    float sdCappedCylinder( vec3 p, float h, float r )\n    {\n    vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(h,r);\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n    }\n\n    float sdCappedCone( in vec3 p, in float h, in float r1, in float r2 )\n    {\n        vec2 q = vec2( length(p.xz), p.y );\n        \n        vec2 k1 = vec2(r2,h);\n        vec2 k2 = vec2(r2-r1,2.0*h);\n        vec2 ca = vec2(q.x-min(q.x,(q.y<0.0)?r1:r2), abs(q.y)-h);\n        vec2 cb = q - k1 + k2*clamp( dot(k1-q,k2)/dot(k2,k2), 0.0, 1.0 );\n        float s = (cb.x<0.0 && ca.y<0.0) ? -1.0 : 1.0;\n        return s*sqrt( min(dot(ca,ca),dot(cb,cb)) );\n    }\n\n    //http://iquilezles.org/www/articles/smin/smin.htm\n    float smin(in float a, in float b, in float k)\n    {\n        float h = max( k - abs(a-b), 0.0);\n        return min(a,b) - h*h*0.25/k;\n    }\n\n    float smax(in float a, in float b, in float k)\n    {\n        float h = max( k - abs(a-b), 0.0);\n        return max(a,b) + h*h*0.25/k;\n    }\n\n    vec4 sdUnion(vec4 d1, vec4 d2)\n    {\n        return (d1.x<d2.x)? d1:d2;\n    }\n\n    vec3 opRepLim( in vec3 p, in float s, in vec3 lim )\n    {\n        return p-s*clamp(round(p/s),-lim,lim);\n    }\n\n    vec3 opRep( vec3 p, vec3 c )\n    {\n        return mod(p,c)-0.5*c;\n    }\n\n    float tombStone(vec3 p) {\n        float b = 4.0;\n        vec3 rep = vec3(mod(abs(p.x),b)-2.5, p.y, mod(abs(p.z+1.5), b)-2.5);\n        vec2 id = vec2(floor(abs(p.x)/b),floor((p.z+1.5)/b));\n        float fid = id.x*133.3 + id.y*311.7;\n        float wr = 0.5+0.3*sin(fid);\n            \n        vec3 newP = rotateY(rep, wr);\n        newP = rotateZ(newP, 0.2*wr);\n        float d = sdRoundBox( newP, vec3(wr*0.5, wr, 0.04), 0.03);\n        return d;\n    }\n    float streetlight(vec3 p) {\n        p -= vec3(0.0,0.5,-2.0);\n        \n        //vec3 rep = opRepLim(p, 8.0, vec3(2.0, 0.0, 2.0));\n        vec3 rep = opRep(p, vec3(12.0, 0.0, 12.0));  \n        float t = iTime*0.5;\n        float d = sdCappedCone(rep, 5.0+2.0*sin(p.x*0.2+p.z*0.5+t), 0.01, 1.8 ) + 0.1*sin(p.z*3.0+p.y*2.0+iTime);\n        d *= 0.6;\n        return d;\n    }\n\n    vec4 map(in vec3 pos, float aTime)\n    {\n        vec4 res = vec4(0.0, 0.0, 0.0, 0.0);\n        float t = fract(aTime);\n        float y = 3.0*t*(1.0-t); \n        float sinT = sin(aTime);\n        vec3 cen = vec3(0.0,0.55,SPEED);\n        float sy = 0.8 + 0.2*y;\n        float sz = 1.0/sy;\n        vec3 r = vec3(0.35,0.32+0.05*sy,0.25+0.05*sz);\n        vec3 q = pos-cen;\n        vec3 h = q;\n        \n        //body \n        float ta0 = step(fract(aTime*10.0),0.99);\n        h.z -= 3.0;\n        h.z += ta0*9.0;\n        float d = sdElipsoid(h-vec3(0.0, 0.03, -0.09), r);\n        {\n        \n        //head \n        float d1 = sdElipsoid(h - vec3(0.0, 0.32, 0.01), vec3(0.28, 0.2, 0.18));\n        float d2 = sdElipsoid(h - vec3(0.0, 0.30, -0.07), vec3(0.2));\n        d2 = smin(d1, d2, 0.08);\n        d = smin(d, d2, 0.08);\n        \n        vec3 sh = vec3(abs(h.x), h.yz);//symmetric along x\n        \n        //ears\n        d2 = sdElipsoid(sh - vec3(0.15, 0.47, -0.05), vec3(0.06, 0.09, 0.04));\n        d = smin(d, d2, 0.08);\n        res = vec4(d,2.0,0.0,0.0);  \n        \n        //eyes\n        float d3 = sdSphere(sh - vec3(0.068,0.4,0.108), 0.07);\n        res = sdUnion(res, vec4(d3,3.0,0.0,0.0));\n        \n        //terrain\n        float fh = -0.05+0.05*(sin(2.5*pos.x) + sin(1.5*pos.z));\n        float d4 = pos.y - fh;\n        d4 -= .01*texture(u_sample, pos.xz).x;\n        res = sdUnion(res, vec4(d4,0.0,0.0,0.0));\n        \n        //tombstone\n        float d5 = tombStone(pos);\n        res = sdUnion(res, vec4(d5,1.0,0.0,0.0));\n        \n        //light\n        float d6 = streetlight(pos);\n        res = sdUnion(res, vec4(d6,4.0,0.0,0.0));\n        \n        float glow = d6;\n        res.w = glow;\n            \n        float shadow = min(d4, d5); \n        res.z = shadow;\n        }\n        \n        return res;\n    }\n\n    float calcOcclusion( in vec3 pos, in vec3 nor, in float aTime)\n    {\n        float occ = 0.0;\n        float sca = 1.0;\n        for( int i=0; i<4; i++ )\n        {\n            float h = 0.01 + 0.32*float(i)/4.0;\n            vec3 opos = pos + h*nor;\n            float d = map( opos, aTime ).x;\n            occ += (h-d)*sca;\n            sca *= 0.85;\n            \n        }\n        return clamp( 1.0 - 2.0*occ, 0.0, 1.0 );\n    }\n\n    vec3 calcNormal(in vec3 pos, in float aTime)\n    {\n        vec2 e = vec2(0.001,0.0);\n        return normalize( vec3(map(pos + e.xyy,aTime).x - map(pos - e.xyy,aTime).x,\n                            map(pos + e.yxy,aTime).x - map(pos - e.yxy,aTime).x,\n                            map(pos + e.yyx,aTime).x - map(pos - e.yyx,aTime).x) );\n    }\n\n    float castShadow(in vec3 ro, in vec3 rd, in float aTime)\n    {\n        float res = 1.0;\n        float t = 0.01;\n        float tMax = MAX_DIST;\n        \n        for (int i=0; i<MAX_STEP;++i)\n        {\n            vec3 pos = ro + t*rd;\n            float h = map(pos,aTime).z;\n            res = min( res, 16.0*h/t );\n            if (res<0.01 || t > tMax) break;\n            t += h;\n        }\n        return clamp(res, 0.0, 1.0);\n    }\n\n    vec4 castRay(in vec3 ro, in vec3 rd, in float aTime)\n    {\n    float t = 0.01;\n    vec4 m = vec4(0.0);\n    float tMax = MAX_DIST;\n    float minDist = MAX_DIST;\n    for ( int i = 0; i < MAX_STEP; ++i )\n    {\n        vec3 pos = ro + t*rd;\n        vec4 h = map( pos,aTime );\n        minDist = min(minDist, h.w/t);\n        m.x = t;\n        m.y = h.y;\n        m.z = minDist;\n        m.w = h.w;\n        \n        if ( abs(h.x)<(0.001*t) || t>tMax ) break;\n        t += h.x;\n    } \n        \n    if ( t>tMax )\n    {\n        m.x = MAX_DIST;\n        m.y = -1.0;\n        m.w = MAX_DIST;\n    }\n    \n    return m;\n    }\n\n    vec3 render(in vec2 fragCoord, in float aTime)\n    {\n        vec2 p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n        vec2 mouse = 2.0*iMouse.xy/iResolution.xy-1.0;\n        float angle = 10.0*iMouse.x/iResolution.x;\n        \n        vec3 ta = vec3(0.0,0.85,3.0+SPEED);\n        vec3 ro = ta+vec3( 1.0*sin(angle), 0.0, 1.0*cos(angle) );;\n        \n        vec3 ww = normalize(ta - ro);\n        vec3 uu = normalize( cross( ww, vec3(0.0, 1.0, 0.0) ) );\n        vec3 vv = normalize( cross( uu, ww ) );\n        \n        \n        vec3 rd = normalize(p.x * uu + p.y * vv + 2.0*ww);\n        vec3 mDir = LIGHT_DIRECTION;\n        vec3 bg = SKY_COLOR;\n        vec3 col = bg;\n        \n        vec2 uv = rd.xz/rd.y; //sky dome( intersect the top )\n        \n        vec4 tm = castRay(ro, rd, aTime);\n        float t = tm.x;\n        vec3 pos = ro + t*rd;\n        vec3 nor = calcNormal(pos, aTime);\n        vec3 mate = vec3(0.0);\n        float occ = calcOcclusion( pos, nor, aTime );\n        float fresnel = clamp(1.0+dot(nor,rd),0.0,1.0);\n        float mDiff = clamp( dot(nor, mDir),0.0,1.0 );\n        float mShadow = castShadow(pos+nor*0.01, mDir, aTime);\n        if ( tm.x < MAX_DIST )\n        {  \n            if (tm.y == 0.0) {\n                mate = TERRAIN_COLOR;//terrain\n            } \n            else if (tm.y == 1.0){\n            mate = vec3(0.1);\n            mate += RIM_POWER*GLOW_COLOR*fresnel;    \n            }\n            else if (tm.y==2.0)\n            {\n                mate = vec3(0.5); //body\n                mDiff = 0.0;\n            } \n            else if (tm.y==3.0)\n            {\n                mate = vec3(1.0); //eyes\n                mDiff = 1.0;\n            }\n            else if (tm.y==4.0)\n            {\n                mate = vec3(0.0,0.5,0.5); //light\n                mate += step(fract(pos.y*3.0),0.25)*vec3(2.0,0.0,2.0);\n                mate += step(fract(pos.y*1.5),0.15)*vec3(0.0,2.0,2.0);\n                mDiff = 1.0;\n                mShadow = 1.0;\n                occ = 1.0;\n            }  \n        \n            col = mate*LIGHT_INTENSITY*mDiff*mShadow;\n            col *= occ*occ; \n            \n        } \n        \n        // fog\n        col = mix( col, vec3(0.0,0.05,0.05), 1.0-exp( -0.003*t*t ) );\n        \n        float glow = 0.1*exp(-64.0*tm.z); \n        col += GLOW_COLOR*glow;\n        return col;\n    }\n\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\n    {\n        vec3 col = vec3(0.0);\n        vec2 off = vec2(0.0);\n        \n    #if AA_SIZE>1\n        //anti aliasing & motion blur\n        for (float aaY = 0.0; aaY < float(AA_SIZE); ++aaY)\n        {\n            for (float aaX = 0.0; aaX < float(AA_SIZE); ++aaX)\n            {\n                off = -0.5+vec2(aaY,aaX)/float(AA_SIZE);\n                \n                float md = texelFetch(u_sample, ivec2(fragCoord)&255, 0).x;\n                float mb = (aaY*float(AA_SIZE)+aaX)/(float(AA_SIZE*AA_SIZE-1));\n                mb += (md-0.5)/float(AA_SIZE*AA_SIZE);\n                float aTime = iTime - mb*0.5*(1.0/24.0); //1 frame in 24fps for film\n    #else\n                float aTime = iTime;\n    #endif\n                col += render(fragCoord+off, aTime);\n                \n                \n    #if AA_SIZE>1\n            }\n        }\n        col /= float(AA_SIZE*AA_SIZE);\n    #endif\n        \n        //gamma\n        col = pow( col, vec3(0.4546));\n    \n        // vignetting        \n        vec2 q = v_texCoord;\n        col *= 0.5 + 0.5*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.25);\n        fragColor = vec4(col, 1.0);\n    }\n\n    void main() {\n        mainImage(fragColor, gl_FragCoord.xy);\n    }\n`;\n  \nexport default {\n    vertex,\n    fragment\n}","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\n    precision mediump float;\n\n    uniform vec2 u_mouse;\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    \n    in vec2 v_texCoord;\n    in vec3 v_normal;\n    in vec4 v_fragPos;\n    out vec4 fragColor;\n\n    // Convert to shadertoy namings\n    #define iMouse u_mouse\n    #define iResolution u_resolution\n    #define iTime u_time\n\n    #define PI 3.1415926\n    #define EPSILON 0.001\n    #define MAX_STEPS 100\n    #define MAX_DISTANCE 80.0\n    #define AA 1\n\n    struct Light {\n        vec3 position;\n        vec3 color;\n    };\n\n    struct Material {\n        vec3 albedo;\n        float metallic;\n        float roughness;\n        vec3 reflection;\n        vec3 refraction;\n    };\n        \n    struct Hit {\n        float dist;\n        int matIndex; //material info at the intersection point\n    };\n\n    float sdPlane( vec3 p, vec4 n )\n    {\n    // n must be normalized\n    return dot(p, n.xyz) + n.w;\n    }\n\n    float sdBox( vec3 p, vec3 b )\n    {\n    vec3 d = abs(p) - b;\n    return length(max(d,0.0))\n            + min(max(d.x,max(d.y,d.z)),0.0); // remove this line for an only partially signed sdf \n    }\n\n\n    float sphereSDF(vec3 p, float r) {\n        return length(p) - r;\n    }\n\n    Hit unionSDF(Hit d1, Hit d2) \n    {\n        if (d1.dist < d2.dist) {\n            return d1;\n        } else {\n            return d2;\n        }  \n    }\n\n    vec3 doTranslate(vec3 p, vec3 offset) \n    {\n        return p - offset;\n    }\n\n    Hit sceneSDF(vec3 p) {\n        Hit rst;\n        \n        vec3 p1 = doTranslate(p, vec3(10.0*cos(iTime), 1.0, 10.0*sin(iTime)));\n        Hit is0 = Hit(sphereSDF(p1, 1.0), 1);\n        p1 = doTranslate(p, vec3(1.0, 1.5, -2.0));\n        Hit is1 = Hit(sphereSDF(p1, 1.5 ), 2);\n        \n        /*\n        Hit is2 = Hit(sdPlane(p, vec4(0.0, 1.0, 0.0, 0.0)), 3);\n        Hit is3 = Hit(sdPlane( p, vec4(0.0, 0.0, 1.0, 20.0)), 3);\n        Hit is4 = Hit(sdPlane( p, vec4(1.0, 0.0, 0.0, 20.0)), 3);\n        Hit is5 = Hit(sdPlane( p, vec4(-1.0, 0.0, 0.0, 20.0)), 3);\n        Hit is6 = Hit(sdPlane( p, vec4(0.0, 0.0, -1.0, 20.0)), 3);\n        Hit is7 = Hit(sdPlane( p, vec4(0.0, -1.0, 0.0, 30.0)), 3);\n        */\n        \n        Hit outerBox = Hit(sdBox(p-vec3(0.0,25.0,0.0), vec3(25.0,25.0,25.0)), 3); \n        outerBox.dist = -outerBox.dist-0.1;\n        \n        rst = unionSDF(is0, is1);\n        rst = unionSDF(rst, outerBox);\n        \n        /*\n        rst = unionSDF(rst, is2);\n        rst = unionSDF(rst, is3);\n        rst = unionSDF(rst, is4);\n        rst = unionSDF(rst, is5);\n        rst = unionSDF(rst, is6);\n        rst = unionSDF(rst, is7);\n        */\n        return rst;\n    }\n\n    vec3 getNormal(vec3 p) {\n        return normalize(vec3(\n            sceneSDF(vec3(p.x + EPSILON, p.y, p.z)).dist - sceneSDF(vec3(p.x - EPSILON, p.y, p.z)).dist,\n            sceneSDF(vec3(p.x, p.y + EPSILON, p.z)).dist - sceneSDF(vec3(p.x, p.y - EPSILON, p.z)).dist,\n            sceneSDF(vec3(p.x, p.y, p.z  + EPSILON)).dist - sceneSDF(vec3(p.x, p.y, p.z - EPSILON)).dist\n        ));\n    }\n\n    Hit marching(vec3 ro, vec3 rd) \n    {\n        float tmax = MAX_DISTANCE;\n        float t = 0.001;\n        Hit result = Hit(-1.0, -1);\n        \n        for (int i = 0; i < MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * t;\n            Hit res = sceneSDF(p);\n            if (res.dist < EPSILON)\n            {\n                return result;\n            }\n            else if (t > tmax)\n            {\n                result.matIndex = -1;\n                result.dist = tmax;\n                break;\n            }\n            t += res.dist;\n            result.dist = t;\n            result.matIndex = res.matIndex;\n        }\n        \n        return result;\n    }\n\n    float calcShadow(in vec3 ro, in vec3 rd) {\n        float mint = 0.1;\n        float t = mint;\n        float res = 1.0;\n        float k = 4.0;\n        for (int i = 0; i < 40; i++)\n        {\n            float h = sceneSDF(ro + rd * t).dist;\n            \n            res = min( res, k * h / t );\n            t += clamp( h, 0.02, 0.20 );\n        \n            if ( h < EPSILON ) \n            {\n                res = min(res, 0.0);\n                break;\n            } \n        }\n        return clamp( res, 0.0, 1.0 );\n    }\n\n\n    float calcAO( in vec3 pos, in vec3 nor )\n    {\n        float occ = 0.0;\n        float sca = 1.0;\n        float h = 0.001;\n        for( float i = 0.0; i < 5.0; i++ )\n        {\n            float d = sceneSDF( pos + h * nor ).dist;\n            occ += ( h - d ) * sca;\n            sca *= 0.85;\n            h += 0.45 * i / 5.0;\n        }\n        return clamp( 1.0 - occ, 0.0, 1.0 );    \n    }\n\n    //Fresnel/reflectivity\n    vec3 Fs(vec3 h, vec3 v, vec3 f0)\n    {\n        float dothv = max(dot(h, v), 0.0);\n        return max(f0 + (1.0 - f0) * pow((1.0 - dothv), 5.0), 0.0);\n    }\n\n    //Distribution/concentration\n    float D_GGX(float dotnh, float roughness) \n    {\n        float a = roughness * roughness;\n        float a2 = a * a;\n        float dotnh2 = dotnh * dotnh;\n        float denom =  max(dotnh2 * (a2 - 1.0) + 1.0, EPSILON);\n        return a2 /(PI * denom * denom);\n    }\n\n    float G_SGGX(float dotnv, float roughness)\n    {\n        float r = roughness + 1.0; \n        float k = (r * r) / 8.0;\n        return dotnv / (dotnv * (1.0 - k) + k);\n    }\n\n    //Geometry/shadowing masking\n    float G_Smith(float dotnv, float dotnl, float roughness)\n    {\n        \n        float ggx1 = G_SGGX(dotnv, roughness);\n        float ggx2 = G_SGGX(dotnl, roughness);\n        return ggx1 * ggx2;\n    }\n\n    //Fresnel/reflectivity\n    vec3 Fs(float dothv, vec3 f0)\n    {\n        vec3 F = f0 + (1.0 - f0) * pow((1.0 - dothv), 5.0);\n        return max(F, 0.0);\n    }\n\n    vec3 shading(vec3 ro, vec3 p, vec3 normal, Light lightInfo, inout Material mat) \n    {\n        vec3 Lo = vec3(0.0);\n        \n        //material and light\n        vec3 albedo = mat.albedo; //vec3(0.2, 0.87, 0.6);\n        float roughness = mat.roughness;\n        float metallic = mat.metallic;\n        vec3 lightDir = lightInfo.position - p;\n        vec3 lightColor = lightInfo.color; \n        \n        //calculating vectors\n        vec3 viewDir = ro - p;\n        vec3 V = normalize(viewDir);\n        vec3 N = normal;\n        vec3 L = normalize(lightDir);\n        vec3 H = normalize(V + L);\n        \n        float dist = length(lightDir);\n\n        float sd = calcShadow(p, L);\n        float att = 1.0 / ( dist);\n        vec3 radiance = lightColor * att * sd;\n\n        float dothv = max(dot(H, V), 0.0);\n        float dotnh = max(dot(N, H), 0.0);\n        float dotnv = max(dot(N, V), 0.0);\n        float dotnl = max(dot(N, L), 0.0);\n        \n        //fresnel\n        vec3 f0 = vec3(0.04); \n        f0 = mix(f0, albedo, metallic);\n        vec3 F = Fs(dothv, f0);\n        \n        //cook-torrance specualr term\n        float D = D_GGX(dotnh, roughness);\n        float GS = G_Smith(dotnv, dotnl, roughness);\n        vec3 nom = D * GS * F;\n        float denom = 4.0 * dotnv * dotnl;\n        vec3 Fct = nom / max(denom, EPSILON); //avoid zero denom\n\n        vec3 Ks = F; //reflect\n        vec3 Kd = 1.0 - Ks; \n        Kd *= 1.0 - metallic; //diffuse\n        vec3 Fl = albedo/PI; //lambert\n        \n        mat.reflection = Ks;\n        \n        Lo += (Kd * Fl + Fct) * radiance * dotnl; \n        \n        float ao = calcAO(p, N);\n        vec3 ambient = vec3(0.01) * albedo * ao;\n        return ambient + Lo;\n    }\n\n    mat3 getCamera( in vec3 ro, in vec3 ta) {\n        vec3 cw = normalize(ta-ro);\n        vec3 cp = vec3(0.0, 1.0, 0.0);\n        vec3 cu = normalize( cross(cw,cp) );\n        vec3 cv =          ( cross(cu,cw) );\n        return mat3( cu, cv, cw );\n    }\n\n    //hacks for non-constant index expression\n    Material getMaterial(int index) {\n        Material mat[4];\n        mat[0] = Material(vec3(1.0), 0.5, 0.1, vec3(0.0), vec3(0.0)); //white\n        mat[1] = Material(vec3(0.5, 0.8, 0.5), 0.9, 0.2, vec3(0.0), vec3(0.0)); //green\n        mat[2] = Material(vec3(0.9, 0.9, 0.2), 0.9, 0.2, vec3(0.0), vec3(0.0)); //yellow\n        mat[3] = Material(vec3(0.8, 0.5, 0.5), 0.5, 0.3, vec3(0.0), vec3(0.0)); //pink\n        if (index == 0) {\n            return mat[0];\n        } else if (index == 1) {\n            return mat[1];\n        } else if (index == 2) {\n            return mat[2];\n        } else if (index == 3) {\n            return mat[3];\n        }\n    }\n\n    vec3 render(in vec2 fragCoord)\n    {\n        vec2 uv = v_texCoord;\n        uv.x *= iResolution.x/iResolution.y; \n        uv = 2.0 * uv - 1.0; \n        vec3 col = vec3(0.0);\n        vec2 mouse = vec2(0.01) + iMouse.xy/iResolution.xy;\n        \n        vec3 ro = vec3(10.0 * cos(mouse.x * 2.0 * PI), 6.0 + 5.0 * mouse.y, 10.0 * sin(mouse.x * 2.0 * PI));\n        vec3 ta = vec3(0.0, 4.0, 0.0);\n        mat3 cam = getCamera(ro, ta);\n        vec3 rd = normalize(cam * vec3(uv, 1.0));\n        \n        Light lightInfo = Light(vec3(5.0 * sin(iTime), 10.0, 2.0), vec3(200.0));\n        \n        Hit icp;\n        vec3 nor = vec3(0.0);  \n        vec3 ori = ro;\n        vec3 dir = rd;\n        vec3 interP = vec3(0.0);\n        vec3 mask = vec3(1.0);\n        float travelDist = 0.0; //calculate how far a ray travels\n        \n        for (float i = 0.0; i < 3.0; i++) {\n            icp = marching(ori, dir);\n            interP = ori + (icp.dist) * dir; //interception point\n            travelDist += length(ori - interP);\n            nor = getNormal(interP);\n            if (icp.dist >= MAX_DISTANCE) {\n                col += vec3(0.0);\n            } else {\n                Material mat = getMaterial(icp.matIndex);\n                col += mask * shading(ori, interP, nor, lightInfo, mat);\n                \n                vec3 ref = reflect(dir, nor);\n                ori = interP + EPSILON*ref;\n                dir = ref;\n                mask *= mat.reflection * 0.8;\n            }\n        }\n        return col;\n    }\n\n    void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n        \n        vec3 col = vec3(0.0);\n        vec2 offset = vec2(0.0);\n    #if AA>1\n        for (int y = 0; y < AA; ++y)\n        {\n            for (int x = 0; x < AA; ++x)\n            {\n                offset = -0.5+vec2(float(x), float(y))/float(AA);\n\n                col += render(fragCoord+offset);\n            }\n        }\n        col /= float(AA*AA);\n    #else\n        col += render(fragCoord);\n    #endif\n        \n        //col = col/(col + vec3(1.0)); //Reinhard tone mapping\n        col = vec3(1.0) - exp(-col * 0.5);//exposure\n        col = pow(col, vec3(1.0/2.2)); \n        fragColor = vec4(col,1.0);\n    }\n\n    void main() {\n        mainImage(fragColor, gl_FragCoord.xy);\n    }\n`;\n  \nexport default {\n    vertex,\n    fragment\n}","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\n    precision mediump float;\n\n    uniform vec2 u_mouse;\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    uniform sampler2D u_sample;\n    uniform sampler2D u_sample1;\n    \n    in vec2 v_texCoord;\n    in vec3 v_normal;\n    in vec4 v_fragPos;\n    out vec4 fragColor;\n\n    // Convert to shadertoy namings\n    #define iMouse u_mouse\n    #define iResolution u_resolution\n    #define iTime u_time\n\n    #define EPSILON 0.0001\n    #define SUN_COLOR vec3(1.2, 1.1, 0.8) \n    #define SUN_POS vec3(500.0, 160.0, 400.0)\n    #define SUN_DIR vec3(0.0,0.8,0.0)\n    #define SUN_GLOW vec3(1.2,0.6,0.3)\n    #define SKY_COLOR vec3(0.5,0.7,1.0)\n    #define OCEAN_COLOR vec3(0.04, 0.2, 0.6)\n    #define CLOUD_COLOR vec3(1.0)\n    #define MAX_STEP 60\n    #define MAX_DIST 30.0\n    #define AA 1\n\n    float noise(in vec2 uv) {\n        return texture(u_sample, uv/64.0).r;\n    }\n\n    float smoothNoise(in vec2 uv) {\n        vec2 luv = fract(uv); //range from 0.0 to 1.0\n        vec2 id = floor(uv); //the integer part of uv, 0, 1, 2\n        luv = luv*luv*(3.0 - 2.0*luv); //similar to smoothstep\n        \n        //get values from the cordinates of a square\n        float bl = noise(id);\n        float br = noise(id + vec2(1.0, 0.0));\n        float tl = noise(id + vec2(0.0, 1.0));\n        float tr = noise(id + vec2(1.0, 1.0));\n        \n        float b = mix(bl, br, luv.x); //interpolate between bl and br\n        float t = mix(tl, tr, luv.x); //interpolate between tl and tr\n        \n        return mix(b, t, luv.y);\n    }\n\n    float fbm4(in vec2 uv) {\n        float amp = 0.5;\n        float f = 2.0;\n        float h = 0.0;\n        float a = 0.0;\n        for (int i = 0; i < 4; i++){\n            h += amp * smoothNoise(uv*f);\n            a += amp;\n            amp *= 0.5;\n            f *= 2.0;\n        }\n        \n        h /= a;\n        return h;\n    }\n\n    float smoothUnion( float d1, float d2, float k ) \n    {\n        float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n        return mix( d2, d1, h ) - k*h*(1.0-h); \n    }\n\n    float displacement (vec3 p) \n    {\n        return sin(-p.y*0.8);\n    }\n\n    float sphereSDF(vec3 p, float r) {\n        return length(p) - r;\n    }\n\n    const vec3 SCALE = vec3(18.0, 12.0, 15.0);\n    vec4 stuff(vec3 p) {\n        float t = sin(iTime*0.5 + p.x * 0.22 + p.z * 0.13 + p.y * 0.15);\n        p = p - vec3(6.0, 0.8+t*t, 6.0);\n        //vec3 q = p - SCALE * clamp(round(p/SCALE), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\n        //vec2 id = vec2(floor(q.x/5.0 - 2.5),floor(q.z/5.0 - 2.5));\n        //float fid = id.x*13.3 + id.y*5.7;\n        //float wr = 1.2+0.5*sin(fid);\n        \n        float wr = 1.2;\n        float d = sphereSDF(p, wr) + displacement(p);\n        d *= 0.5;\n        return vec4(d, 3.0, 0.0, 1.0);\n    }\n\n    vec4 sdUnion(vec4 d1, vec4 d2)\n    {\n        return (d1.x<d2.x)? d1:d2;\n    }\n\n    float wave(in vec3 p) \n    {\n        float t = iTime * 0.5;\n        float hi = 0.0;\n        hi += 0.15*smoothNoise(vec2(p.x*3.0 + t, p.z*2.5 + t));\n        hi += 0.13*smoothNoise(vec2(p.x*2.2 - 1.5*t, 0.0));\n        hi += 0.11*smoothNoise(vec2(p.x*2.2 - t, p.z*3.2 - t));\n        return hi;\n    }\n\n    vec4 water(in vec3 p, float h) {\n        \n        float hi = wave(p);\n        h += 0.15*hi;\n        float d = p.y - h;\n        return vec4(d, 1.0, 1.0, 0.0);\n    }\n\n    vec2 rot2D(in vec2 xy, float d)\n    {\n        float c = cos(d);\n        float s = sin(d);\n        return vec2(xy.x * c - xy.y * s, xy.x * s + xy.y * c);\n    }\n\n    vec4 land(in vec3 p, float h) {\n        float hi = 0.0;\n        float wave = 0.8*sin(-p.x*0.1) + 0.8*sin(-p.z*0.17);\n        \n        vec2 xy = rot2D(p.xz, -0.8); \n        //hi += 0.005*smoothNoise(vec2(xy.x*17.37, xy.y*5.5)); //a bit of a sand pattern\n        \n        h += wave ;\n        h += hi;\n        h -= 0.008*texture(u_sample1, p.xz*0.7).r; \n        float d = p.y - h;\n        return vec4(d, 2.0, 0.0, 0.0);\n    }\n\n    vec4 map(in vec3 p) {\n        vec4 res = vec4(0.0); //distance, material, reflect, refract\n        //p.z -= 1.5;\n        vec4 d0 = land(p, -0.5);\n        vec4 d1 = stuff(p);\n        vec4 d2 = water(p, -0.4);\n        res = sdUnion(d0, d1);\n        res = sdUnion(res, d2); \n        \n        return res;\n    }\n\n    float castRayB(in vec3 ro, in vec3 rd) {\n    float t = 0.01;\n    for ( int i = 0; i < 30; ++i )\n    {\n        vec3 pos = ro + t * rd;\n        vec4 h = stuff( pos );\n        if ( h.x < EPSILON) return t;\n        t += h.x;\n        if (t > MAX_DIST) return MAX_DIST;\n    } \n    return MAX_DIST;\n    }\n\n    vec4 castRay(in vec3 ro, in vec3 rd)\n    {\n    float t = 0.01;\n    vec3 m = vec3(0.0);\n    float tMax = MAX_DIST;\n\n    for ( int i = 0; i < MAX_STEP; ++i )\n    {\n        vec3 pos = ro + t * rd;\n        vec4 h = map( pos );\n        m = h.yzw;\n        if ( h.x < EPSILON * t ||  t > tMax)\n        {\n            break;\n        }\n        t += h.x;\n    } \n        \n    if ( t>tMax )\n    {\n        m = vec3(-1.0);\n    }\n    return vec4(t,m);\n    }\n\n    vec3 getNormal(vec3 p) {\n        return normalize(vec3(\n            map(vec3(p.x + EPSILON, p.y, p.z)).x - map(vec3(p.x - EPSILON, p.y, p.z)).x,\n            map(vec3(p.x, p.y + EPSILON, p.z)).x - map(vec3(p.x, p.y - EPSILON, p.z)).x,\n            map(vec3(p.x, p.y, p.z + EPSILON)).x - map(vec3(p.x, p.y, p.z - EPSILON)).x\n        ));\n    }\n\n\n    vec3 sky2D(vec3 skyColor, vec3 cloudColor, vec2 uv) {\n        vec3 col = vec3(0.0);\n        float t = iTime * 0.1;\n        float n1 = fbm4(vec2(uv.x + t, uv.y - t));\n        col = mix( skyColor, cloudColor, smoothstep(0.2, 0.8, n1));\n        return col;\n    }\n\n    float calcOcclusion( in vec3 pos, in vec3 nor)\n    {\n        float occ = 0.0;\n        float sca = 1.0;\n        for( int i=0; i<4; i++ )\n        {\n            float h = 0.01 + 0.16*float(i)/4.0;\n            vec3 opos = pos + h*nor;\n            float d = map( opos ).x;\n            occ += (h-d)*sca;\n            sca *= 0.8;\n        }\n        return clamp( 1.0 - 2.0*occ, 0.0, 1.0 );\n    }\n\n    vec3 calcSky(vec3 ro, vec3 rd) {\n        //from IQ.\n        const float SC = 1e5;\n        //Trace out to a distant XZ plane.\n        float dist = (SC - ro.y)/rd.y; \n        vec2 p = (ro + dist*rd).xz;\n        \n        vec3 sunDir = normalize(SUN_POS - ro);\n        float sun = max(dot(sunDir, rd), 0.0);\n        float core = smoothstep(0.98, 1.0, sun);\n        \n        vec3 skyCol = vec3(0.0);\n        vec3 cloudCol = CLOUD_COLOR;\n        \n        \n        skyCol += 0.5*SUN_COLOR*pow(core, 64.0);\n        skyCol += 0.8*SUN_GLOW*pow(sun, 32.0);\n        skyCol += mix(SUN_GLOW, SKY_COLOR, 2.0*abs(rd.y));//horizontal brightness\n        \n        skyCol = sky2D(skyCol, cloudCol, p*1.2/SC);\n        float grad = smoothstep(0.0, 0.1, rd.y);\n        skyCol = mix(SUN_GLOW, skyCol, grad);\n        return skyCol;\n    }\n\n    vec3 calcLighting(in vec3 ro, in vec3 rd, in vec4 hit) {\n        vec3 outCol = vec3(0.0);\n        vec3 hitPoint = ro + hit.x * rd;\n        vec3 sunDir = normalize(SUN_POS - ro);\n        vec3 nor = getNormal(hitPoint);\n        \n        // draw water color \n        vec3 waterCol = vec3(0.0);\n        \n        // water reflection\n        vec3 refDir = normalize(reflect(rd, nor));\n        vec3 reflectCol = calcSky(hitPoint, refDir);\n        \n        // water specular\n        vec3 H = normalize(sunDir - rd);\n        float RN = max(dot(H, nor), 0.0);\n        float spec = 0.8*pow(RN, 32.0);\n        vec3 specCol = (SUN_COLOR + SUN_GLOW) * spec; \n        \n        // water flare \n        float rnd = 2.0*noise(vec2(hitPoint.x * 3.4738, hitPoint.z * 7.7319));\n        rnd *= 1.0-exp(-0.2*hit.x);\n        specCol +=  rnd * spec;\n        \n        // water diffuse \n        float diff = max(dot(sunDir, nor), 0.0); \n        vec3 diffCol = SUN_COLOR  * OCEAN_COLOR;\n        \n        // fresnel\n        float fresnel = 1.0 - max(dot(nor,-rd),0.0);\n        fresnel = pow(fresnel,3.0);\n        waterCol = mix(diffCol, specCol + reflectCol, fresnel); \n        \n        // land\n        vec3 landDiff = SUN_GLOW * diff;\n        \n        //refract \n        float refractRatio = 0.75;\n        vec3 refractDir = normalize(refract(rd, nor, refractRatio));\n        vec3 refractCol = calcSky(hitPoint, refractDir);\n        \n        //reflect\n        float t = castRayB(hitPoint, refDir);\n        if (t < MAX_DIST) {\n            waterCol *= vec3(1.0, 0.92, 0.92); //fake reflection\n        }\n        \n        \n        if (hit.y == 1.0) {\n            outCol = waterCol;\n        } else {\n            // wet area\n            float w0 = smoothstep(-0.3, -0.15-0.1*rnd, hitPoint.y);\n            outCol = mix(landDiff*0.5, landDiff, w0);\n\n            float w1 = smoothstep(-0.4, -0.2, hitPoint.y);\n            outCol = mix(waterCol, outCol, w1);\n        }  \n        \n        outCol = mix(outCol, refractCol , hit.w);\n        return outCol;\n    }\n\n    mat3 getCamera( in vec3 ro, in vec3 ta, float cr )\n    {\n        vec3 cw = normalize(ta-ro);\n        vec3 cp = vec3(sin(cr), cos(cr), 0.0);\n        vec3 cu = normalize( cross(cw,cp) );\n        vec3 cv =          ( cross(cu,cw) );\n        return mat3( cu, cv, cw );\n    }\n\n    vec3 render(in vec2 fragCoord) {\n        vec2 uv = fragCoord.xy/iResolution.xy;\n        uv -= 0.5; // translate to the center of the screen\n        uv.x *= iResolution.x / iResolution.y; // restore aspect ratio\n        vec2 mouse = iMouse.xy/iResolution.xy;\n        mouse.y -= 0.5;\n        \n        //define camera\n        float t = iTime * 0.1;\n        vec3 ro = vec3(0.0, 0.0, 0.0);\n        vec3 ta = vec3(cos(mouse.x * 6.28 + t), mouse.y*3.0, sin(mouse.x * 6.28 + t));\n        mat3 cam = getCamera(ro, ta, 0.0);\n        vec3 rd = normalize(cam * vec3(uv, 1.0));\n        rd = normalize(rd);\n        vec3 bgCol = calcSky(ro, rd);\n        vec3 outCol = vec3(0.0);\n        outCol = bgCol;\n        \n        vec4 hit = castRay(ro, rd);\n        vec3 pos = ro + hit.x * rd;\n        vec3 nor = getNormal(pos);\n        \n        if (hit.x < MAX_DIST) {\n            outCol = calcLighting(ro, rd, hit);\n            // fog\n            outCol = mix( outCol, SUN_GLOW, 1.0 - exp( -0.008 * hit.x * hit.x ) );\n        }\n        return outCol;\n    }\n\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\n    {\n        vec3 pixCol = vec3(0.0);\n        vec2 offset = vec2(0.0);\n        \n    #if AA>1\n        for (float y = 0.0; y < float(AA); ++y)\n        {\n            for (float x = 0.0; x < float(AA); ++x)\n            {\n                offset = -0.5 + vec2(x, y) / float(AA);\n\n                pixCol += render(fragCoord+offset);\n            }\n        }\n        pixCol /= float(AA*AA);\n    #else\n        pixCol += render(fragCoord);\n    #endif\n        \n        // tone mapping\n        //float exposure = 1.0;\n        //pixCol = 1.0 - exp(-pixCol * exposure);\n        \n        // gamma\n        pixCol = pow( pixCol, vec3(0.4546));\n        \n        // vignetting        \n        vec2 q = v_texCoord;\n        pixCol *= 0.5 + 0.5*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.3);\n        fragColor = vec4(pixCol, 1.0);\n        \n    }\n\n    void main() {\n        mainImage(fragColor, gl_FragCoord.xy);\n    }\n`;\n  \nexport default {\n    vertex,\n    fragment\n}","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\n    precision mediump float;\n\n    uniform vec2 u_mouse;\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    uniform sampler2D u_sample;\n    \n    in vec2 v_texCoord;\n    in vec3 v_normal;\n    in vec4 v_fragPos;\n    out vec4 fragColor;\n\n    // Convert to shadertoy namings\n    #define iMouse u_mouse\n    #define iResolution u_resolution\n    #define iTime u_time\n\n    #define PI 3.1416\n    #define MAX_STEP 80\n    #define EPSILON 0.01\n    #define SUN_DIR vec3(-1.0,0.0,-2.0)\n    #define SUN_COLOR vec3(0.7,0.4,0.3)\n    #define SUN_GLOW vec3(0.7,0.5,0.5)\n    #define SKY_COLOR vec3(0.7,0.8,0.9)\n    #define CLOUD_SHADOW vec3(0.5,0.2,0.2)\n    #define CLOUD_COLOR vec3(1.0)\n\n    float hash1(in vec2 uv) {\n        return 2.0*texture(u_sample, uv/64.0).r - 1.0;\n    }\n\n    float smoothNoise(in vec3 p) {\n        vec2 luv = fract(p.xz); //range from 0.0 to 1.0\n        vec2 id = floor(p.xz); //the integer part of uv, 0, 1, 2\n        luv = luv*luv*(3.0 - 2.0*luv); //similar to smoothstep\n        \n        //get values from the cordinates of a square\n        float bl = hash1(id);\n        float br = hash1(id + vec2(1.0, 0.0));\n        float tl = hash1(id + vec2(0.0, 1.0));\n        float tr = hash1(id + vec2(1.0, 1.0));\n        \n        float b = mix(bl, br, luv.x); //interpolate between bl and br\n        float t = mix(tl, tr, luv.x); //interpolate between tl and tr\n        \n        return mix(b, t, luv.y);\n    }\n\n    vec3 rotZ(in float rad, in vec3 pos)\n    {\n        mat2 rot = mat2(cos(rad), -sin(rad), sin(rad), cos(rad));\n        pos.xy = rot*pos.xy;\n        return pos;\n    }\n\n    vec3 path(in vec3 pos)\n    {\n        float a = sin(iTime*0.2)*0.12*PI;\n        pos = rotZ(a, pos);\n        return pos;\n    }\n\n    mat3 getCamera( in vec3 ta, in vec3 ro )\n    {\n        vec3 ww = normalize(ta-ro);\n        vec3 up = vec3(0.0,1.0,0.0);\n        up = path(up);\n        vec3 uu = normalize(cross(ww, up));\n        vec3 vv = normalize(cross(uu,ww));\n        return mat3(uu,vv,ww);\n    }\n\n    mat2 m2 = mat2(0.8, 0.6, -0.6, 0.8);\n    float map4(in vec3 p)\n    {\n        float scale = 0.8;\n        p *= scale;\n        vec3 q = p - vec3(0.0,0.1,1.0)*iTime;\n        float f = 0.0;\n        float amp = 0.5;\n        for (int i = 0; i < 4; i++)\n        {\n            f += amp*smoothNoise( q );\n            q.xz = m2*q.xz;\n            q *= 2.02;\n            amp *= 0.5;\n        }\n        return 2.2 * f;\n    }\n\n    float cloudIntersect(in vec3 p) {\n        float f = map4(p);\n        return f - p.y;\n    }\n\n    vec4 raymarch( in vec3 ro, in vec3 rd, in vec3 bgcol )\n    {\n        vec4 sum = vec4(0.0);\n        float t = 0.0;\n        \n        /*from iq's clouds: https://www.shadertoy.com/view/XslGRr*/\n        for(int i=0; i<MAX_STEP; i++) \n        { \n            vec3  pos = ro + t*rd; \n            float den = cloudIntersect( pos ); \n            \n            //early quit for better performance, some treaks on pos.y range\n            if ( pos.y < -2.0 || pos.y > 3.5 || sum.a > 0.99) break; \n            \n            if (den > EPSILON)\n            {\n                //base color\n                vec4 col = vec4( mix( CLOUD_COLOR, CLOUD_SHADOW, den ), den );\n                \n                //brighter towards the sun\n                float dif =  clamp((den - cloudIntersect(pos+0.5*normalize(SUN_DIR))), 0.0, 1.0 ); \n                vec3 lin = SUN_COLOR*dif;   \n                col.xyz += lin;\n                \n                //mix with background according to distance\n                col.xyz = mix( bgcol, col.xyz, exp(-0.01*t*t) );\n                \n                // front to back blending    \n                col.a *= 0.5;\n                col.rgb *= col.a;\n                sum += col*(1.0-sum.a); \n            }\n            t += max(0.08,0.03*t); \n        } \n        return sum;\n    }\n\n    vec3 render( in vec2 fragCoord )\n    {\n        vec3 col = vec3(0.0);\n        vec2 uv = v_texCoord;\n        uv.x *= iResolution.x/iResolution.y;\n        uv = 2.0 * uv - 1.0;\n        \n        vec2 mouse = iMouse.xy/iResolution.xy;\n        \n        //vec3 ro = vec3(2.0*sin(mouse.x*6.28),mouse.y+0.1,2.0*cos(mouse.x*6.28));\n        //vec3 ta = vec3(0.0,0.2,0.0);\n        \n        vec3 ro = vec3(0.0, 0.4, 0.0);\n        vec3 ta = ro + vec3(0.0, -0.1, -1.0);\n        \n        mat3 cam = getCamera(ta,ro);\n        vec3 rd = normalize(cam*(vec3(uv,1.0)));\n        \n        vec3 sunDir = normalize(SUN_DIR);\n        float sun = max(dot(sunDir, rd),0.0);\n        vec3 skyCol = vec3(0.0);\n        \n        skyCol += mix(SUN_GLOW, SKY_COLOR, 2.0*abs(rd.y));//horizontal brightness\n        skyCol += 0.3*SUN_COLOR*pow(sun, 64.0);\n        skyCol += 0.5*SUN_GLOW*pow(sun, 16.0);\n        \n        vec4 cloudCol = raymarch(ro, rd, skyCol);\n        col = skyCol*(1.0-cloudCol.a) + cloudCol.xyz; \n        \n        col += 0.7*SUN_GLOW*pow(sun, 8.0); //adding extra sun glow\n        return col;\n    }\n\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\n    {\n        vec3 col = render(fragCoord);\n        col = pow( col, vec3(1.0/2.2));\n        // vignetting        \n        vec2 q = v_texCoord;\n        col *= 0.5 + 0.5*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.65);\n        \n        fragColor = vec4(col,1.0);\n    }\n\n    void main() {\n        mainImage(fragColor, gl_FragCoord.xy);\n    }\n`;\n  \nexport default {\n    vertex,\n    fragment\n}","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\n    precision mediump float;\n\n    uniform vec2 u_mouse;\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    \n    in vec2 v_texCoord;\n    in vec3 v_normal;\n    in vec4 v_fragPos;\n    out vec4 fragColor;\n\n    // Convert to shadertoy namings\n    #define iMouse u_mouse\n    #define iResolution u_resolution\n    #define iTime u_time\n\n    #define PI 3.1415926\n    #define EPSILON 0.001\n    const int MAX_STEPS = 60;\n    const float MAX_DISTANCE = 80.0;\n\n    struct Ray {\n        vec3 ro;\n        vec3 rd;\n    };\n\n    struct Light {\n        vec3 position;\n        vec3 color;\n    };\n        \n    Light lightInfo = Light(vec3(3.0, 10.0, 0.0), vec3(10.0));\n\n    struct Material {\n        vec3 albedo;\n        float diffuse;\n        float specular;\n        float reflection;\n        float refraction;\n    };\n        \n    struct Hit {\n        float dist;\n        int matIndex; //material info at the intersection point\n    };\n\n    float planeSDF(vec3 p) {\n        return p.y;\n    }\n\n    float sdPlane( vec3 p, vec4 n )\n    {\n    // n must be normalized\n    return dot(p, n.xyz) + n.w;\n    }\n\n    float sphereSDF(vec3 p, float r) {\n        return length(p) - r;\n    }\n\n    float sdBox( vec3 p, vec3 b )\n    {\n    vec3 d = abs(p) - b;\n    return length(max(d,0.0))\n            + min(max(d.x,max(d.y,d.z)),0.0); // remove this line for an only partially signed sdf \n    }\n\n    Hit unionSDF(Hit d1, Hit d2) \n    {\n        if (d1.dist < d2.dist) {\n            return d1;\n        } else {\n            return d2;\n        }  \n    }\n\n    vec3 doTranslate(vec3 p, vec3 offset) \n    {\n        return p - offset;\n    }\n\n    vec3 rotX(vec3 p, float d) \n    {\n        mat4 rotM= mat4(1.0, 0.0, 0.0, 0.0, \n                        0.0, cos(d), -sin(d), 0.0, \n                        0.0, sin(d), cos(d), 0.0, \n                        0.0, 0.0, 0.0, 1.0);\n        return vec3(rotM * vec4(p, 1.0));\n    }\n\n    Hit sceneSDF(vec3 p) {\n        Hit rst;\n        vec3 p1 = doTranslate(p, vec3(6.0, 3.1, -3.0));\n        Hit is0 = Hit(sphereSDF(p1, 3.0), 2);\n        p1 = doTranslate(p, vec3(-2.0, 2.1, 8.0));\n        Hit is1 = Hit(sphereSDF(p1, 2.0 ), 2);\n        p1 = doTranslate(p, vec3(3.0, 1.5 + 10.0 * abs(sin(2.0*iTime)), 1.0));\n        Hit is2 = Hit(sphereSDF(p1, 1.5 ), 1);\n        \n        /*\n        Hit is3 = Hit(sdPlane(p, vec4(0.0, 1.0, 0.0, 0.0)), 0);\n        Hit is4 = Hit(sdPlane( p, vec4(0.0, 0.0, 1.0, 20.0)), 0);\n        Hit is5 = Hit(sdPlane( p, vec4(1.0, 0.0, 0.0, 20.0)), 0);\n        Hit is6 = Hit(sdPlane( p, vec4(-1.0, 0.0, 0.0, 20.0)), 0);\n        Hit is7 = Hit(sdPlane( p, vec4(0.0, 0.0, -1.0, 20.0)), 0);\n        Hit is8 = Hit(sdPlane( p, vec4(0.0, -1.0, 0.0, 30.0)), 0);\n        */\n        \n        Hit outerBox = Hit(sdBox(p-vec3(0.0,25.0,0.0), vec3(25.0,25.0,25.0)), 0); \n        outerBox.dist = -outerBox.dist;\n        \n        p1 = doTranslate(p, vec3(0.0, 3.5, -1.0));\n        Hit is9 = Hit(sdBox( p1, vec3(1.0, 3.0, 4.0)), 3);\n        \n        rst = unionSDF(is0, is1);\n        rst = unionSDF(rst, is2);\n        rst = unionSDF(rst, outerBox);\n        /*\n        rst = unionSDF(rst, is3);\n        rst = unionSDF(rst, is4);\n        rst = unionSDF(rst, is5);\n        rst = unionSDF(rst, is6);\n        rst = unionSDF(rst, is7);\n        rst = unionSDF(rst, is8);\n        */\n        rst = unionSDF(rst, is9);\n        return rst;\n    }\n\n    vec3 getNormal(vec3 p) {\n        return normalize(vec3(\n            sceneSDF(vec3(p.x + EPSILON, p.y, p.z)).dist - sceneSDF(vec3(p.x - EPSILON, p.y, p.z)).dist,\n            sceneSDF(vec3(p.x, p.y + EPSILON, p.z)).dist - sceneSDF(vec3(p.x, p.y - EPSILON, p.z)).dist,\n            sceneSDF(vec3(p.x, p.y, p.z  + EPSILON)).dist - sceneSDF(vec3(p.x, p.y, p.z - EPSILON)).dist\n        ));\n    }\n\n    Hit marching(vec3 ro, vec3 rd, float signInd) \n    {\n        float tmax = MAX_DISTANCE;\n        float t = EPSILON;\n        Hit result = Hit(-1.0, -1);\n        \n        for (int i = 0; i < MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * t;\n            Hit res = sceneSDF(p); \n            float dist = res.dist * signInd;\n            \n            if (dist < 0.0 )\n            {\n                return result;\n            }\n            else if (t > tmax)\n            {\n                result.matIndex = -1;\n                result.dist = tmax;\n                break;\n            }\n            \n            t += max(dist, EPSILON); //faster than abs()\n            result.dist = t;\n            result.matIndex = res.matIndex;\n        }\n        \n        return result;\n    }\n\n    vec3 background(vec2 p) \n    {\n        return vec3(0.0);//mix(vec3(0.2, 0.5, 0.5), vec3(0.4, 0.3, 0.3), pow(0.8, (p.y + 0.5) * 0.1));\n    }\n\n    vec3 getColor(vec3 ro, vec3 p, vec3 nor, int matIdx, in Material mat) {\n        vec3 col = vec3(0.0);\n        vec3 N = nor;\n        vec3 V = normalize(ro - p);\n        vec3 L = normalize(lightInfo.position - p);\n        vec3 R = reflect(-L, N);\n        float spec = pow(max(dot(V, R), 0.0), mat.specular);\n        \n        // floor\n        if (matIdx < 1 && N.y > 0.5) {\n            mat.albedo = mix(vec3(0.0), vec3(0.95), mod(floor(p.x * 0.3) + floor(p.z * 0.3), 2.0));\n        } \n        vec3 ambient = vec3(0.1) * mat.albedo;\n        col += ambient;\n        \n        col += float(matIdx) * spec * lightInfo.color; \n        \n        return col;\n    }\n\n    mat3 getCamera( in vec3 ro, in vec3 ta) {\n        vec3 cw = normalize(ta-ro);\n        vec3 cp = vec3(0.0, 1.0, 0.0);\n        vec3 cu = normalize( cross(cw,cp) );\n        vec3 cv =          ( cross(cu,cw) );\n        return mat3( cu, cv, cw );\n    }\n\n    //hacks for non-constant index expression\n    Material getMaterial(int index) {\n        Material mat[4];\n        mat[0] = Material(vec3(0.6, 0.75, 0.8), 0.5, 16.0, 0.8, 0.0); \n        mat[1] = Material(vec3(1.0, 0.5, 0.5), 0.1, 128.0, 0.4, 0.9); \n        mat[2] = Material(vec3(0.1,0.1,0.2), 0.1, 128.0, 0.4, 0.9); \n        mat[3] = Material(vec3(0.2, 0.6, 0.6), 0.1, 128.0, 0.4, 0.9); \n        if (index == 0) {\n            return mat[0];\n        } else if (index == 1) {\n            return mat[1];\n        } else if (index == 2) {\n            return mat[2];\n        } else if (index == 3) {\n            return mat[3];\n        }\n    }\n\n    vec3 reflectionRay(in vec3 ori, in vec3 dir, in vec3 backColor, in vec3 pixColor, inout vec3 att) {\n        for (float i = 0.0; i < 2.0; i++) {\n            Hit icp = marching(ori, dir, 1.0);\n            vec3 interP = ori + icp.dist * dir; \n            vec3 nor = getNormal(interP);\n            Material mat = getMaterial(icp.matIndex);\n            if (icp.matIndex < 0) {\n                pixColor += vec3(0.0);//mix(pixColor, backColor, att);\n            } else {\n                vec3 localColor = getColor(ori, interP, nor, icp.matIndex, mat); \n                pixColor = mix(pixColor, localColor, att);\n                dir = reflect(dir, nor);\n                ori = interP + dir * EPSILON;\n                att *= mat.reflection;\n            }\n        }\n        return pixColor;\n    }\n    vec3 refractionRay(in vec3 ori, in vec3 dir, in vec3 backColor, in vec3 pixColor, in float refractionRatio, inout float signInd, inout vec3 att) {\n        for (float i = 0.0; i < 4.0; i++) {\n            Hit icp = marching(ori, dir, signInd);\n            vec3 interP = ori + icp.dist * dir; \n            vec3 nor = signInd * getNormal(interP);\n            Material mat = getMaterial(icp.matIndex);\n            if (icp.matIndex < 0) {\n                pixColor += vec3(0.0); //mix(pixColor, backColor, att);\n            } else {\n                if (signInd > 0.0) { \n                    vec3 localColor = getColor(ori, interP, nor, icp.matIndex, mat); \n                    pixColor = mix(pixColor, localColor, att);\n                }\n                \n                vec3 refractDir = refract(dir, nor, refractionRatio);\n                vec3 reflectDir = reflect(dir, nor);\n                \n                if (dot(refractDir, refractDir) < EPSILON ) {\n                    //total internal reflection\n                    dir = reflectDir;\n                    ori = interP + dir * EPSILON;\n                    att *= mat.reflection;\n                } else {\n                    //flip normal direction and refractionRatio for the next ray\n                    dir = refractDir;\n                    ori = interP + dir * EPSILON;\n                    signInd = -signInd;\n                    refractionRatio = 1.0/ refractionRatio;\n                    att *= mat.refraction; \n                } \n            }\n        }\n        return pixColor;\n    }\n\n    void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n        vec2 uv = v_texCoord;\n        uv -= 0.5; \n        uv.x *= iResolution.x/iResolution.y;  \n    \n        vec3 col = vec3(0.0);\n        vec2 mouse = vec2(0.01) + iMouse.xy/iResolution.xy;\n        mouse.x -= 0.5;\n        float rot = mouse.x + iTime*0.05;\n        vec3 ro = vec3(-20.0 * cos(rot * 2.0 * PI), 2.0+8.0 * mouse.y, -20.0 * sin(rot * 2.0 * PI));\n        vec3 ta = vec3(0.0, 2.0, -2.0);\n        mat3 cam = getCamera(ro, ta);\n        vec3 rd = normalize(cam * vec3(uv, 1.0));\n        \n        vec3 nor = vec3(0.0);  \n        vec3 ori = ro;\n        vec3 dir = rd;\n        vec3 interP = vec3(0.0);\n        float signInd = 1.0;\n        vec3 reflectDir = vec3(0.0);\n        vec3 refractDir = vec3(0.0);\n        float refractionRatio = 1.0/1.4;\n        vec3 localColor = vec3(0.0);\n        vec3 f0 = vec3(0.03);\n        vec3 refractAtt = vec3(1.0);\n        vec3 reflectAtt = vec3(1.0);\n        vec3 refractCol = vec3(0.0);\n        vec3 reflectCol = vec3(0.0);\n        \n        //initial ray\n        Hit icp = marching(ori, dir, 1.0); //reserved for future use\n        Hit initRay = icp;\n        interP = ori + icp.dist * dir; \n        nor = signInd * getNormal(interP);\n        Material mat = getMaterial(icp.matIndex);\n        vec3 backColor = background((ori + MAX_DISTANCE * dir).xy);\n        if (icp.matIndex < 0) {\n            col += vec3(0.0);\n        } else {\n            col += getColor(ori, interP, nor, icp.matIndex, mat);\n        }\n        \n        refractDir = refract(dir, nor, refractionRatio);\n        reflectDir = reflect(dir, nor);\n        \n        //reflection ray\n        dir = reflectDir;\n        ori = interP + dir * EPSILON;\n        reflectAtt *= mat.reflection;\n        reflectCol = reflectionRay(ori, dir, backColor, col, reflectAtt);\n        \n        //refraction ray\n        if (dot(refractDir, refractDir) < EPSILON ) {\n            //total internal reflection\n            dir = reflectDir;\n            ori = interP + dir * EPSILON;\n        } else {\n            //flip normal direction and refractionRatio for the next ray\n            dir = refractDir;\n            ori = interP + dir * EPSILON;\n            signInd = -signInd;\n            refractionRatio = 1.0/refractionRatio;\n        }\n        refractAtt *= mat.refraction;\n        refractCol = refractionRay(ori, dir, backColor, col, refractionRatio, signInd,refractAtt);\n        \n        col = reflectCol + refractCol;\n        \n        col = pow(col, vec3(1.0/2.2)); \n        fragColor = vec4(col,1.0);\n    }\n\n    void main() {\n        mainImage(fragColor, gl_FragCoord.xy);\n    }\n`;\n  \nexport default {\n    vertex,\n    fragment\n}","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\n    precision mediump float;\n\n    uniform vec2 u_mouse;\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    \n    in vec2 v_texCoord;\n    in vec3 v_normal;\n    in vec4 v_fragPos;\n    out vec4 fragColor;\n\n    // Convert to shadertoy namings\n    #define iMouse u_mouse\n    #define iResolution u_resolution\n    #define iTime u_time\n\n    \n    //noise function from iq: https://www.shadertoy.com/view/Msf3WH\n    vec2 hash( vec2 p ) \n    {\n        p = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) );\n        return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n    }\n\n    float noise( in vec2 p )\n    {\n        const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n        const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n        vec2  i = floor( p + (p.x+p.y)*K1 );\n        vec2  a = p - i + (i.x+i.y)*K2;\n        float m = step(a.y,a.x); \n        vec2  o = vec2(m,1.0-m);\n        vec2  b = a - o + K2;\n        vec2  c = a - 1.0 + 2.0*K2;\n        vec3  h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n        vec3  n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n        return dot( n, vec3(70.0) );\n    }\n\n    const mat2 m2 = mat2(1.6,  1.2, -1.2,  1.6);\n\n    float fbm4(vec2 p) {\n        float amp = 0.5;\n        float h = 0.0;\n        for (int i = 0; i < 4; i++) {\n            float n = noise(p);\n            h += amp * n;\n            amp *= 0.5;\n            p = m2 * p ;\n        }\n        \n        return  0.5 + 0.5*h;\n    }\n\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\n    {\n        // Normalized pixel coordinates (from 0 to 1)\n        vec2 uv = fragCoord/iResolution.xy;\n        uv -= 0.5;\n        uv.x *= iResolution.x/iResolution.y;\n        vec2 mo = iMouse.xy/iResolution.xy;\n        vec3 sky = vec3(0.5, 0.7, 0.8);\n        vec3 col = vec3(0.0);\n        \n        // speed\n        float v = 0.001;\n\n        // layer1\n        vec3 cloudCol = vec3(1.0);\n        uv += mo * 10.0;\n    \n        vec2 scale = uv * 2.0;\n        vec2 turbulence = 0.008 * vec2(noise(vec2(uv.x * 10.0, uv.y *10.0)), noise(vec2(uv.x * 10.0, uv.y * 10.0)));\n        scale += turbulence;\n        float n1 = fbm4(vec2(scale.x - 20.0 * sin(iTime * v * 2.0), scale.y - 50.0 * sin(iTime * v)));\n        col = mix( sky, cloudCol, smoothstep(0.5, 0.8, n1));\n        \n        //layer2\n        scale = uv * 0.5;\n        turbulence = 0.05 * vec2(noise(vec2(uv.x * 2.0, uv.y * 2.1)), noise(vec2(uv.x * 1.5, uv.y * 1.2)));\n        scale += turbulence;\n        float n2 = fbm4(scale + 20.0 * sin(iTime * v ));\n        col =  mix( col, cloudCol, smoothstep(0.2, 0.9, n2));\n        col = min(col, vec3(1.0));\n        \n        \n        // Output to screen\n        fragColor = vec4(col, 1.0);\n    }\n    void main() {\n        mainImage(fragColor, gl_FragCoord.xy);\n    }\n`;\n  \nexport default {\n    vertex,\n    fragment\n}","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\n    precision mediump float;\n\n    uniform vec2 u_mouse;\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    uniform samplerCube u_cubemap;\n    in vec2 v_texCoord;\n    in vec3 v_normal;\n    in vec4 v_fragPos;\n    out vec4 fragColor;\n\n    // Convert to shadertoy namings\n    #define iMouse u_mouse\n    #define iResolution u_resolution\n    #define iTime u_time\n\n    const float EPSILON = 0.0001;\n    const float PI = 3.1415926;\n    const float MAX_DIST = 100.0;\n    const int MAX_STEPS = 60;\n    const vec3 LIGHTBLUE = vec3(154.0, 247.0, 247.0)/255.0;\n    const vec3 GREEN = vec3(125.0, 245.0, 217.0)/255.0;\n    const vec3 YELLOW = vec3(0.2, 0.2, 0.0);\n    const vec3 PINK = vec3(255.0, 94.0, 186.0)/255.0;\n\n    struct Material {\n        vec3 ambient;\n        vec3 diffuse;\n        vec3 specular;\n        float shiness;\n    };\n\n    #define BLINN 1\n    #define AA 0\n\n    float sphereSDF(vec3 p, float r) {\n        return length(p) - r;\n    }\n\n    float sdTorus( vec3 p, vec2 t )\n    {\n        return length( vec2(length(p.xz)-t.x,p.y) )-t.y;\n    }\n\n    vec2 intersectSDF(vec2 dist0, vec2 dist1) {\n        return dist0.x > dist1.x? dist0 : dist1;\n    }\n\n    vec2 unionSDF(vec2 dist0, vec2 dist1) {\n        return dist0.x < dist1.x? dist0 : dist1;\n    }\n\n    vec2 diffSDF(vec2 dist0, vec2 dist1) {\n        return dist0.x > -dist1.x? dist0 : vec2(-dist1.x, dist1.y);\n    }\n\n    vec3 rotX(vec3 p, float d) {\n        mat4 rotM= mat4(1.0, 0.0, 0.0, 0.0, \n                        0.0, cos(d), -sin(d), 0.0, \n                        0.0, sin(d), cos(d), 0.0, \n                        0.0, 0.0, 0.0, 1.0);\n        return vec3(rotM * vec4(p, 1.0));\n    }\n    vec3 rotY(vec3 p, float d) {\n        mat4 rotM= mat4(cos(d), 0.0, sin(d), 0.0, \n                        0.0, 1.0, 0.0, 0.0,\n                        -sin(d), 0.0, cos(d), 0.0, \n                        0.0, 0.0, 0.0, 1.0);\n        return vec3(rotM * vec4(p, 1.0));\n    }\n\n    vec3 rotZ(vec3 p, float d) {\n        mat4 rotM= mat4(cos(d), -sin(d), 0.0, 0.0, \n                        sin(d), cos(d), 0.0, 0.0, \n                        0.0, 0.0, 1.0, 0.0, \n                        0.0, 0.0, 0.0, 1.0);\n        return vec3(rotM * vec4(p, 1.0));\n    }\n\n    vec3 doTranslate(vec3 p, vec3 t) {\n        return p - t;\n    }\n\n    vec2 sceneSDF(vec3 p) {\n        float deg = 90.0;\n        float sr = 2.0;\n        float lr = 2.0;\n        float SR = 1.8;\n        float LR = 1.5;\n        float spheres[12];\n        float vTime = iTime;\n        \n        float id = 1.0;\n        for (int i = 0; i < 4; i ++) {\n            float dx = SR * cos(90.0 * id * PI / 180.0);\n            float dz = SR * sin(90.0 * id * PI / 180.0);\n            vec3 v = vec3(p.x + dx, p.y, p.z + dz);\n            spheres[i] = sphereSDF(v, sr);\n            id += 1.0;\n        }\n        spheres[4] = sphereSDF(vec3(p.x, p.y + LR, p.z), lr);\n        spheres[5] = sphereSDF(vec3(p.x, p.y - LR, p.z), lr);\n        \n        \n        \n        float torus[3];\n        float t_ry = 0.1;\n        float t_rxl = 16.0;\n        float t_rxs = 12.0;\n        float alpha0 = vTime;\n        float alpha1 = vTime + 90.0 * PI / 180.0;\n        torus[0] = sdTorus( rotX(p, alpha0), vec2(t_rxl, t_ry) );\n        torus[1] = sdTorus( rotZ(p, alpha0), vec2(t_rxs, t_ry) );\n        torus[2] = sdTorus( rotZ(p, alpha1), vec2(t_rxs, t_ry) );\n        \n        float ssr = 0.3;\n        spheres[6] = sphereSDF(vec3(p.x, p.y - t_rxl * sin(alpha0), p.z + t_rxl * cos(alpha0)), ssr);\n        spheres[7] = sphereSDF(vec3(p.x, p.y + t_rxl * sin(alpha0), p.z - t_rxl * cos(alpha0)), ssr);\n        spheres[8] = sphereSDF(vec3(p.x - t_rxl, p.y, p.z), ssr);\n        spheres[9] = sphereSDF(vec3(p.x + t_rxl, p.y, p.z), ssr);\n        \n        spheres[10] = sphereSDF(vec3(p.x - t_rxs * cos(alpha0), p.y - t_rxs* sin(alpha0), p.z), ssr);\n        spheres[11] = sphereSDF(vec3(p.x - t_rxs * cos(alpha1), p.y - t_rxs* sin(alpha1), p.z), ssr);\n        \n        float objId = 0.0;\n        //horizontal spheres\n        vec2 combined = unionSDF(vec2(spheres[0], objId), vec2(spheres[1], objId));\n        combined = unionSDF(combined, vec2(spheres[2], objId));\n        combined = unionSDF(combined, vec2(spheres[3], objId));\n        \n        //lower sphere\n        objId++;\n        combined = unionSDF(combined, vec2(spheres[4], objId));\n        \n        //upper sphere\n        objId++;\n        combined = unionSDF(combined, vec2(spheres[5], objId));\n        \n        //small spheres\n        objId++;\n        combined = unionSDF(combined, vec2(spheres[6], objId));\n        combined = unionSDF(combined, vec2(spheres[7], objId));\n        combined = unionSDF(combined, vec2(spheres[8], objId));\n        combined = unionSDF(combined, vec2(spheres[9], objId));\n        combined = unionSDF(combined, vec2(spheres[10], objId));\n        combined = unionSDF(combined, vec2(spheres[11], objId));\n        \n        //large tortus\n        objId++;\n        combined = unionSDF(combined, vec2(torus[0], objId));\n        \n        //small tortus\n        objId++;\n        combined = unionSDF(combined, vec2(torus[1], objId));\n        combined = unionSDF(combined, vec2(torus[2], objId));\n        \n    \n        \n    return combined;\n    }\n\n    vec2 rayMarching(vec3 ro, vec3 rd) {\n        float tmax = MAX_DIST;\n        float t = 0.0;\n        vec2 result = vec2(-1.0);\n        \n        for (int i = 0; i < MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * t;\n            vec2 res = sceneSDF(p);\n            if (res.x < EPSILON || t > tmax) break;\n            result.x = t;\n            result.y = res.y;\n            t += res.x;\n        }\n        if (t > tmax) {\n            result.x = tmax;\n            result.y = -1.0;\n        }\n        return result;\n    }\n\n    const vec3 AMBIENT_COLOR = vec3(0.1);\n    const vec3 DIFFUSE_COLOR = vec3(0.6);\n    const vec3 SPEC_COLOR = vec3(0.5);\n    const vec3 LIGHT_COLOR = vec3(1.0, 1.0, 0.0);\n\n    vec3 shading(vec3 normal, vec3 viewDir, vec3 lightDir, Material mat) {\n        \n        vec3 ambCol = AMBIENT_COLOR * mat.ambient;\n        vec3 V = normalize(viewDir);\n        vec3 L = normalize(lightDir);\n        vec3 N = normalize(normal);\n        float diff = max(dot(N, L), 0.0);\n        vec3 diffCol = DIFFUSE_COLOR * diff * mat.diffuse;\n        \n        vec3 R = normalize(reflect(-L, N));  \n        vec3 VR = normalize(reflect(-V, N)); \n        \n    #if BLINN == 1\n        vec3 H = normalize(L + V);\n        float spec = pow(max(dot(N, H), 0.0), mat.shiness);\n    #else    \n        \n        float spec = pow(max(dot(V, R), 0.0), mat.shiness);\n    #endif   \n        \n        vec3 speCol = SPEC_COLOR * spec * mat.specular;\n        \n        vec3 refl = texture(u_cubemap, VR).rgb;\n        \n        return refl * mat.diffuse + speCol;\n    }\n\n    mat3 getCamera( in vec3 ro, in vec3 ta, float cr )\n    {\n        vec3 cw = normalize(ta-ro);\n        vec3 cp = vec3(sin(cr), cos(cr),0.0);\n        vec3 cu = normalize( cross(cw,cp) );\n        vec3 cv =          ( cross(cu,cw) );\n        return mat3( cu, cv, cw );\n    }\n\n    vec3 getNormals(vec3 p) {\n        float x = sceneSDF(vec3(p.x + EPSILON, p.y, p.z)).x - sceneSDF(vec3(p.x - EPSILON, p.y, p.z)).x;\n        float y = sceneSDF(vec3(p.x, p.y + EPSILON, p.z)).x - sceneSDF(vec3(p.x, p.y - EPSILON, p.z)).x;\n        float z = sceneSDF(vec3(p.x, p.y, p.z + EPSILON)).x - sceneSDF(vec3(p.x, p.y, p.z - EPSILON)).x;\n        return normalize(vec3(x, y, z));\n    }\n\n    vec3 background(vec2 p) {\n        return mix(YELLOW, GREEN, p.y + 0.5);\n    }\n\n    vec3 render(in vec2 fragCoord) {\n    vec2 uv = v_texCoord;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3 (cos(iTime) * 10.0 + 10.0, 3.0, sin(iTime) * 10.0 + 20.0);\n    //vec3 ro = vec3 (0.0, 5.0, 25.0);\n    vec3 ta = vec3 (0.0, 0.0, -1.0);\n    mat3 cam = getCamera(ro, ta, 0.0);\n    \n    vec3 rd = normalize(cam * vec3(uv, 1.0));\n    vec2 h = rayMarching(ro, rd);\n    \n    vec3 col = vec3(0.0);\n    \n    if (h.x < MAX_DIST) {\n        \n        vec3 p = ro + rd * h.x;\n        vec3 nor = getNormals(p);\n        vec3 lightPos = vec3(20.0 * sin(iTime), 10.0, -20.0);\n        vec3 lightDir = lightPos - p;\n        vec3 viewDir = ro - p;\n            \n        Material mat;\n        //chrome\n        mat.ambient = vec3(0.25);\n        mat.diffuse = vec3(0.5);\n        mat.specular = vec3(0.674597);\n        mat.shiness = 1.2;\n        \n        if (h.y == 1.0 || h.y == 2.0) {\n            //pink\n            mat.ambient = PINK;\n            mat.diffuse = PINK;\n            mat.specular = PINK;\n        } else if (h.y == 0.0) {\n            //gold\n            mat.ambient = vec3(0.24725, 0.1995, 0.0745);\n            mat.diffuse = vec3(0.75164, 0.60648, 0.12648);\n            mat.specular = vec3(0.628281, 0.555802, 0.366065);\n            mat.shiness = 1.2;\n        } \n        col += shading(nor, viewDir, lightDir, mat) ;\n    } else {\n        col = background(uv);\n    }\n        return col;\n    }\n\n    void mainImage (out vec4 fragColor, in vec2 fragCoord)\n    {\n        vec3 col = vec3(0.0);\n    #if AA > 1\n        float count = 0.0;\n        for (float aaY = 0.0; aaY < float(AA); aaY++)\n        {\n            for (float aaX = 0.0; aaX < float(AA); aaX++)\n            {\n                col += render(fragCoord + vec2(aaX, aaY) / float(AA));\n                count += 1.0;\n            }\n        }\n        col /= count;\n    #else\n        col += render(fragCoord);\n    #endif\n        \n        col = pow( col, vec3(1.0/2.2) );\n        \n        \n        vec2 p = v_texCoord;\n        col *= 0.2 + 0.8 * pow(32.0 * p.x * p.y * (1.0 - p.x) * (1.0 - p.y), 0.2);\n        \n        fragColor = vec4 (col, 1.);\n    }\n\n    void main() {\n        mainImage(fragColor, gl_FragCoord.xy);\n    }\n`;\n  \nexport default {\n    vertex,\n    fragment\n}","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\nprecision mediump float;\n\nuniform vec2 u_mouse;\nuniform float u_time;\nuniform vec2 u_resolution;\n\nin vec2 v_texCoord;\nin vec3 v_normal;\nin vec4 v_fragPos;\nout vec4 fragColor;\n\n// Convert to shadertoy namings\n#define iMouse u_mouse\n#define iResolution u_resolution\n#define iTime u_time\n\n#define ITERATION 12\n#define PI 3.1416\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0*v_texCoord - 1.0;\n    uv.x *= iResolution.x/iResolution.y; \n    vec2 mo = iMouse.xy/iResolution.xy;\n    \n    float ti = iTime * 0.2;\n    ivec2 txy = ivec2(fragCoord.xy/iResolution.xy);\n    vec2 c = vec2(0.45*cos(PI*mo.x + ti*0.5), 0.45*sin(PI*mo.y + ti*0.5));\n    c += 0.5;\n    \n    vec2 p = uv;  \n    float len = length(p);\n    float r = 0.0, g = 0.0, b = 0.0;\n    \n \tvec3 col = vec3(0.0);\n    for (int i = 0; i < ITERATION; ++i) {\n        p = abs(p)/dot(p,p) - c;\n        float l = len;\n        len = length(p);\n        l = len - l;\n        \n        col +=  l * len * vec3(sin(1.2*ti + 10.0), cos(1.8*ti + 12.0), sin(-1.2*ti));\n    \tcol = 1.0 - exp(-0.04*col);\n    }\n    \n    col = pow(col, vec3(1.0/2.2));\n    // Output to screen\n    fragColor = vec4(col ,1.0);\n}\n\nvoid main() {\n    mainImage(fragColor, gl_FragCoord.xy);\n}\n\n`;\n\nexport default {\n    vertex,\n    fragment\n}\n","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\nprecision mediump float;\n\nuniform vec2 u_mouse;\nuniform float u_time;\nuniform vec2 u_resolution;\nuniform samplerCube u_cubemap;\nuniform sampler2D u_sample;\n\nin vec2 v_texCoord;\nin vec3 v_normal;\nin vec4 v_fragPos;\nout vec4 fragColor;\n\n// Convert to shadertoy namings\n#define iMouse u_mouse\n#define iResolution u_resolution\n#define iTime u_time\n\n#define PI 3.1415926\n#define EPSILON 0.001\nconst int MAX_STEPS = 120;\nconst float MAX_DISTANCE = 100.0;\nconst float AA_SIZE = 2.0;\nconst vec3 LIGHT_COLOR = vec3(1.0, 1.0, 1.0);\n\nvec3 light_position;\n\nfloat plane(vec3 p) \n{\n    return p.y;\n}\n\nfloat displacement (vec3 p) \n{\n    return sin(p.y) * 1.5;\n}\n\nfloat sphereSDF(vec3 p, float r) \n{\n    return length(p) - r;\n}\n\nfloat dot2(in vec2 v) {\n    return dot(v, v);\n}\nfloat sdCappedCone( in vec3 p, in float h, in float r1, in float r2 )\n{\n    vec2 q = vec2( length(p.xz), p.y );\n    \n    vec2 k1 = vec2(r2,h);\n    vec2 k2 = vec2(r2-r1,2.0*h);\n    vec2 ca = vec2(q.x-min(q.x,(q.y < 0.0)?r1:r2), abs(q.y)-h);\n    vec2 cb = q - k1 + k2*clamp( dot(k1-q,k2)/dot2(k2), 0.0, 1.0 );\n    float s = (cb.x < 0.0 && ca.y < 0.0) ? -1.0 : 1.0;\n    return s*sqrt( min(dot2(ca),dot2(cb)) );\n}\n\nvec2 unionSDF(vec2 d1, vec2 d2) \n{\n    return d1.x < d2.x? d1 : d2;\n}\n\nvec3 doTranslate(vec3 p, vec3 offset) \n{\n    return p - offset;\n}\n\nvec2 sceneSDF(vec3 p) \n{\n    vec2 result0 = vec2(plane(p), -1.0);\n    \n    vec3 p1= doTranslate(p,vec3(0.0, 3.0 , 0.0));\n    vec2 result1 = vec2(sphereSDF( p1 , 2.5) + displacement(p1), 2.0);\n    result1.x *= 0.5;\n    \n    vec3 p2= doTranslate(p,vec3(3.0, 3.5 , 0.0));\n    vec2 result2 = vec2(sphereSDF( p2 , 2.5), 2.0);\n    \n    vec3 p3 = doTranslate(p,vec3(0.0, 0.0 , 0.0));\n    vec2 result3 = vec2(sdCappedCone(p3, 1.5, 3.0, 2.2), 3.0);  \n    \n    \n    vec2 result = unionSDF(result0, result1);\n    //result = unionSDF(result, result2);\n    //result = unionSDF(result, result3);\n    return result;\n}\n\nvec2 marching(vec3 ro, vec3 rd) \n{\n    float tmax = MAX_DISTANCE;\n    float t = 0.001;\n    vec2 result = vec2(-1.0);\n    \n    for (int i = 0; i < MAX_STEPS; i++)\n    {\n        vec3 p = ro + rd * t;\n        vec2 res = sceneSDF(p);\n        if (res.x < EPSILON)\n        {\n            return result;\n        }\n        else if (t > tmax)\n        {\n            result.y = -1.0;\n            result.x = tmax;\n            break;\n        }\n        t += res.x;\n        result.x = t;\n        result.y = res.y;\n    }\n    \n    return result;\n}\n\nfloat calcShadow(in vec3 ro, in vec3 rd) {\n    float mint = 0.1;\n    float t = mint;\n    float res = 1.0;\n    float k = 4.0;\n    for (int i = 0; i < 40; i++)\n    {\n        float h = sceneSDF(ro + rd * t).x;\n        \n\t\tres = min( res, k * h / t );\n        t += clamp( h, 0.02, 0.20 );\n     \n        if ( h < EPSILON ) \n        {\n            res = min(res, 0.0);\n            break;\n        } \n    }\n    return clamp( res, 0.0, 1.0 );\n}\n\nfloat calcAO( in vec3 pos, in vec3 nor )\n{\n\tfloat occ = 0.0;\n    float sca = 1.0;\n    //float k = 5.0; \n    float h = 0.001;\n    for( float i = 0.0; i < 5.0; i++ )\n    {\n        float d = sceneSDF( pos + h * nor ).x;\n        occ += ( h - d ) * sca;\n        sca *= 0.9;\n        h += 0.45 * i / 5.0;\n    }\n    return clamp( 1.0 - occ, 0.0, 1.0 );    \n}\n\nvec2 OFFSET = vec2(EPSILON, 0.0);\nvec3 getNormal(vec3 p) {\n    return normalize(vec3(\n        sceneSDF(p + OFFSET.xyy).x - sceneSDF(p - OFFSET.xyy).x,\n        sceneSDF(p + OFFSET.yxy).x - sceneSDF(p - OFFSET.yxy).x,\n        sceneSDF(p + OFFSET.yyx).x - sceneSDF(p - OFFSET.yyx).x\n    ));\n}\n\nvec3 shading(vec3 ro, vec3 p, float objId) \n{\n    vec3 outCol = vec3(0.0);\n    vec3 lightPos = light_position; \n    vec3 viewDir = ro - p;\n    vec3 lightDir = lightPos - p;\n    float dist = length(lightDir);\n    \n    vec3 nor = vec3(0.0);\n    nor = getNormal(p);\n    vec3 diffCol = LIGHT_COLOR;\n    if (objId == -1.0) \n    {//floor\n        vec2 offset = vec2(0.002, 0.0);\n        vec2 floorUV = p.xz * 5.0/MAX_DISTANCE;\n        diffCol = texture(u_sample, floorUV).rgb; \n        float dx = texture(u_sample, floorUV + offset.xy).r \n            \t - texture(u_sample, floorUV - offset.xy).r ;\n        float dz = texture(u_sample, floorUV + offset.yx).r \n            \t - texture(u_sample, floorUV - offset.yx).r ;\n        nor = normalize(vec3(dx, 1.0, dz ));\n    } \n    vec3 N = nor;\n    vec3 I = normalize(viewDir);\n    vec3 L = normalize(lightDir);\n    vec3 R = normalize(reflect(-L, N));\n    vec3 RV = normalize(reflect(-I, N));\n\n    float ao = calcAO(p, N) ;\n    vec3 ambient = LIGHT_COLOR * ao * 0.3;\n    float diff = max(dot(L, N), 0.0);\n    float sd = calcShadow(p, normalize(lightPos));\n     \n    vec3 diffuse = diffCol * diff * sd * 0.5 ;\n    float spec = pow(max(dot(I, R), 0.0), 16.0);\n    vec3 specular = LIGHT_COLOR * spec * 0.8;\n    outCol = LIGHT_COLOR * (ambient + diffuse + specular);\n    \n    //reflection + refraction\n    vec3 refl = texture(u_cubemap, RV).rgb;\n    \n    float refractRatio = 0.95;\n    float fresnelBias = 0.0;\n    float fresnelPow = 0.2;\n    float fresnelScale = 1.0;\n    float reflectionFactor = clamp(fresnelBias + fresnelScale * pow( 1.0 + dot( -I, N ), fresnelPow ), 0.0, 1.0);\n        \n    vec3 refractR = normalize(refract(-I, N, refractRatio));\n    vec3 refractG = normalize(refract(-I, N, refractRatio * 0.98));\n    vec3 refractB = normalize(refract(-I, N, refractRatio * 0.96));\n    \n    float level = smoothstep(0.8, 1.2, p.y); //adding a bit blur\n    //if (p.y > 1.0)\n    //{\n        vec3 refractCol = vec3(1.0);\n        refractCol.r = texture(u_cubemap, refractR).r;\n        refractCol.g = texture(u_cubemap, refractG).g;\n        refractCol.b = texture(u_cubemap, refractB).b;\n        vec3 fr = mix(refl, refractCol, reflectionFactor);\n        outCol = mix(outCol, fr, level);\n    //}\n    \n    return outCol;\n}\n\nmat3 getCamera( in vec3 ro, in vec3 ta)\n{\n\tvec3 cw = normalize(ta-ro);\n\tvec3 cp = vec3(0.0, 1.0, 0.0);\n\tvec3 cu = normalize( cross(cw,cp) );\n\tvec3 cv =          ( cross(cu,cw) );\n    return mat3( cu, cv, cw );\n}\n\nvec3 render(in vec2 fragCoord) \n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5; // translate to the center of the screen\n    uv.x *= iResolution.x/iResolution.y; // restore aspect ratio\n    \n    vec3 col = vec3(0.0);\n    vec2 mouse = vec2(0.01) + iMouse.xy  / iResolution.xy ;\n    mouse -= 0.5;\n    float t = iTime * 0.1;\n    \n    vec3 ro = vec3(10.0 * cos(mouse.x * 2.0 * PI + t), 2.0 + mouse.y * 4.0, 10.0 * sin(mouse.x * 2.0 * PI + t));\n    //vec3 ro = vec3(0.0, 5.0, 10.0);\n    vec3 ta = vec3(0.0, 2.0, 0.0);\n    mat3 cam = getCamera(ro, ta);\n    vec3 rd = normalize(cam * vec3(uv, 1.0));\n    \n    vec2 h = marching(ro, rd);\n    vec3 p = ro + rd * h.x;\n    if (h.x < MAX_DISTANCE) \n    {\n        col += shading(ro, p, h.y);\n    } else \n    {\n        col += texture(u_cubemap, rd).rgb;\n    }\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.0);\n    float count = 0.0;\n    light_position = vec3(0.0, 10.0, 4.0);\n    for (float aay = 0.0; aay < AA_SIZE; aay++) \n    {\n        for (float aax = 0.0; aax < AA_SIZE; aax++) \n        {\n            col += render(fragCoord + vec2(aax, aay)/AA_SIZE);\n            count++;\n        }\n    }\n    \n    col /= count;\n    fragColor = vec4(col, 1.0);\n}\nvoid main() {\n    mainImage(fragColor, gl_FragCoord.xy);\n}\n\n`;\n\nexport default {\n    vertex,\n    fragment\n}","import vertex from \"src/WebGL/shaders/shadertoy_vertex.js\";\n\nvar fragment = `#version 300 es\nprecision mediump float;\n\nuniform vec2 u_mouse;\nuniform float u_time;\nuniform vec2 u_resolution;\nuniform samplerCube u_cubemap;\n\nin vec2 v_texCoord;\nin vec3 v_normal;\nin vec4 v_fragPos;\nout vec4 fragColor;\n\n// Convert to shadertoy namings\n#define iMouse u_mouse\n#define iResolution u_resolution\n#define iTime u_time\n\n#define PI 3.1415926\n#define MAX_STEP 60\n#define MAX_DIST 40.0\n#define EPSILON 0.0001\n#define GLOW_COLOR0 vec3(1.0,0.0,0.3)\n#define GLOW_COLOR1 vec3(0.0,0.3,1.0)\n#define SURFACE_COLOR vec3(0.0,1.0,1.0)\n#define AA 2\nfloat sdSphere( in vec3 pos, in float r )\n{\n    return length(pos) - r;\n}\n\nfloat sdOctahedron( in vec3 p, in float s)\n{\n    p = abs(p);\n    float m = p.x+p.y+p.z-s;\n    vec3 q;\n         if( 3.0*p.x < m ) q = p.xyz;\n    else if( 3.0*p.y < m ) q = p.yzx;\n    else if( 3.0*p.z < m ) q = p.zxy;\n    else return m*0.57735027;\n    \n    float k = clamp(0.5*(q.z-q.y+s),0.0,s); \n    return length(vec3(q.x,q.y-s+k,q.z-k)); \n}\n\nvec2 opUnion( vec2 d1, vec2 d2 ) \n{  \n    return d1.x<d2.x? d1:d2; \n}\n\nvec3 map( in vec3 pos )\n{\n    vec3 p = pos;\n    \n    vec2 d0 = vec2(sdOctahedron(p,3.0), 1.0);\n    \n    vec2 d1 = vec2(sdSphere( p-vec3(0.0,1.2,0.0),2.0 ), 2.5);\n    d1 += 0.2*sin(2.0*p.x+iTime);\n    d1 *= 0.8;\n    \n    \n    d0 = opUnion(d0, d1);\n    \n    \n    vec3 rst = vec3(d0, 0.0);\n    \n    return rst;\n}\n\nvec3 raymarch( in vec3 ro, in vec3 rd )\n{\n    vec3 rst = vec3(0.0, -1.0, MAX_DIST);\n    float t = 0.01;\n    float minDist = MAX_DIST;\n    for ( int i = 0; i < MAX_STEP; ++i )\n    {\n        vec3 p = ro + t * rd;\n        vec3 dist = map(p);\n        minDist = min(minDist, dist.x/t);\n        if ( abs(dist.x)<EPSILON || t>MAX_DIST) break;\n        \n        t += dist.x; \n        rst = vec3(t, dist.y, minDist);\n    }\n    \n    if ( t>MAX_DIST )\n    {\n        rst= vec3(MAX_DIST, -1.0, minDist);\n    }\n    \n    return rst;\n}\n\nvec3 getNormal( in vec3 pos )\n{\n    vec2 offset = vec2(EPSILON, 0.0);\n    return normalize( vec3(map(pos+offset.xyy).x - map(pos-offset.xyy).x,\n                           map(pos+offset.yxy).x - map(pos-offset.yxy).x,\n                           map(pos+offset.yyx).x - map(pos-offset.yyx).x) );\n}\n\nvec3 shading( in vec3 ro, in vec3 rd, in vec3 hit, in vec3 pixCol )\n{\n    vec3 outCol = vec3(0.0);\n    vec3 pos = ro+hit.x*rd;\n    vec3 nor = getNormal(pos);\n    vec3 lightDir = normalize(vec3(0.5, 0.5, 0.5));\n    float diff = max(dot(lightDir, nor), 0.0);\n    if (hit.y == 1.0)\n    {\n        outCol += SURFACE_COLOR*diff;\n    } else\n    {\n        outCol += pixCol*SURFACE_COLOR;//sphere\n    }\n    return outCol;\n}\n\nmat3 getCamera( in vec3 ta, in vec3 ro )\n{\n    vec3 ww = normalize(ta-ro);\n    vec3 uu = normalize(cross(ww, vec3(0.0,1.0,0.0)));\n    vec3 vv = normalize(cross(uu,ww));\n    return mat3(uu,vv,ww);\n}\n\nvec3 render( in vec2 fragCoord )\n{\n    vec3 col = vec3(0.0);\n    vec2 uv = u_texCoord;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 mouse = iMouse.xy/iResolution.xy;\n    float aTime = iTime*0.4;\n    vec3 ro = vec3(8.0*cos(aTime+mouse.x*6.28),mouse.y*2.0,8.0*sin(aTime+mouse.x*6.28));\n    vec3 ta = vec3(0.0,0.0,0.0);\n    mat3 cam = getCamera(ta,ro);\n    vec3 rd = cam*(vec3(uv,0.9));\n    \n    vec3 tex = texture(u_cubemap,rd).rgb;\n    vec3 backCol = vec3(tex.r*tex.g*tex.b);\n    col += backCol*backCol*backCol;\n    vec3 hit = raymarch(ro,rd);\n       \n    if ( hit.y>0.0 )\n    {\n        col = shading( ro, rd, hit, col )*2.0;\n    }\n    float glow0 = exp(-24.0*hit.z);\n    float glow1 = exp(-16.0*hit.z);\n    vec3 glowCol = vec3(0.0);\n    float t = fract(iTime*0.5);\n    float y = 3.0*t*(1.0-t); \n    \n    glowCol += 0.5*GLOW_COLOR1*glow0*y;  \n    glowCol += 0.5*GLOW_COLOR1*glow1; \n    glowCol += 0.2*GLOW_COLOR0*exp(-8.0*hit.z); \n    \n    glowCol *= 0.5+0.5*y;\n    return col+glowCol*0.8;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec3 col = vec3(0.0);\n    for ( float j = 0.0; j < float(AA); ++j )\n    {\n        for ( float i = 0.0; i < float(AA); ++i )\n        {\n            vec2 off = -0.5+vec2(j,i)/float(AA);\n            col += render(fragCoord+off);\n        }\n    }\n    \n    col /= float(AA*AA);\n    \n    col = pow( col, vec3(0.4546));\n    // vignetting        \n    vec2 q = v_texCoord;\n    col *= 0.5 + 0.5*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.25);\n    \n    fragColor = vec4(col,1.0);\n}\n\nvoid main() {\n    mainImage(fragColor, gl_FragCoord.xy);\n}\n\n`;\n\nexport default {\n    vertex,\n    fragment\n}","//import basicLightShader from 'src/WebGL/shaders/basicLight.js';\nimport finalPassShader from \"src/WebGL/shaders/finalPass.js\";\nimport skyShader from 'src/WebGL/shaders/sky.js';\nimport simpleShader from \"src/WebGL/shaders/simpleColor.js\";\nimport pbrShader from \"src/WebGL/shaders/pbr.js\";\nimport blankShader from \"src/WebGL/shaders/blank.js\";\nimport zenTimeShader from \"src/WebGL/shaders/shadertoy_zentime.js\";\nimport thatCatShader from \"src/WebGL/shaders/shadertoy_thatcat.js\";\nimport nowhereShader from \"src/WebGL/shaders/shadertoy_nowhere.js\";\nimport mushroomShader from \"src/WebGL/shaders/shadertoy_mushroom.js\";\nimport hallomeowyShader from \"src/WebGL/shaders/shadertoy_hallomeowy.js\";\nimport getoutShader from \"src/WebGL/shaders/shadertoy_getout.js\";\nimport waterShader from \"src/WebGL/shaders/shadertoy_water.js\";\nimport cloudShader from \"src/WebGL/shaders/shadertoy_cloud.js\";\nimport transparentShader from \"src/WebGL/shaders/shadertoy_transparent.js\";\nimport cloud2dShader from \"src/WebGL/shaders/shadertoy_cloud2D.js\";\nimport bigbangShader from \"src/WebGL/shaders/shadertoy_bigbang.js\";\nimport setShader from \"src/WebGL/shaders/shadertoy_set.js\";\nimport glassyShader from \"src/WebGL/shaders/shadertoy_glassy.js\";\nimport glowShader from \"src/WebGL/shaders/shadertoy_glow.js\";\nimport noise64 from \"src/external/textures/noise64.png\";\nimport noise256 from \"src/external/textures/noise256.png\";\nimport stone from \"src/external/textures/cobble.png\";\nimport wood from \"src/external/textures/wood.png\";\nimport caseModel from \"src/external/models/chemodan/suitcase.obj\";\nimport caseAO from \"src/external/models/chemodan/textures/ao.jpg\";\nimport caseColor from \"src/external/models/chemodan/textures/color.jpg\";\nimport caseMetal from \"src/external/models/chemodan/textures/metallic.jpg\";\nimport caseRough from \"src/external/models/chemodan/textures/roughness.jpg\";\nimport caseNormal from \"src/external/models/chemodan/textures/normal.jpg\";\nimport cupModel from \"src/external/models/coffee_cup/coffee_cup_obj.obj\";\nimport cupColor from \"src/external/models/coffee_cup/textures/Base_color.png\";\nimport cupNormal from \"src/external/models/coffee_cup/textures/normal.png\";\nimport cupRough from \"src/external/models/coffee_cup/textures/roughness.png\";\nimport cupMetal from \"src/external/models/coffee_cup/textures/metallic.png\";\nimport cube from \"src/external/models/cube.obj\";\nimport wallColor from \"src/external/textures/brickwall.jpg\";\nimport wallNormal from \"src/external/textures/brickwall_normal.jpg\";\nimport buildingFace0 from \"src/external/cubemap_building/face0.png\";\nimport buildingFace1 from \"src/external/cubemap_building/face1.png\";\nimport buildingFace2 from \"src/external/cubemap_building/face2.png\";\nimport buildingFace3 from \"src/external/cubemap_building/face3.png\";\nimport buildingFace4 from \"src/external/cubemap_building/face4.png\";\nimport buildingFace5 from \"src/external/cubemap_building/face5.png\";\nimport forestFace0 from \"src/external/cubemap_forest/face0.png\";\nimport forestFace1 from \"src/external/cubemap_forest/face1.png\";\nimport forestFace2 from \"src/external/cubemap_forest/face2.png\";\nimport forestFace3 from \"src/external/cubemap_forest/face3.png\";\nimport forestFace4 from \"src/external/cubemap_forest/face4.png\";\nimport forestFace5 from \"src/external/cubemap_forest/face5.png\";\n\nconst appData = {\n    // Shaders\n    shaders: {\n      \"3D\": {\n        //\"BasicLight\": basicLightShader,\n        \"FinalPass\":  finalPassShader,\n        \"SimpleColor\": simpleShader,\n        \"Sky\": skyShader,\n        \"PBR\": pbrShader\n      },\n      \"2D\": {\n        \"Blank\": blankShader,\n        \"ZenTime\": zenTimeShader,\n        \"ThatCat\": thatCatShader,\n        \"Nowhere\": nowhereShader,\n        \"Mushroom\": mushroomShader,\n        \"Halloween\": hallomeowyShader,\n        \"GetOut\": getoutShader,\n        \"Water\": waterShader,\n        \"Cloud\": cloudShader,\n        \"Cloud2D\": cloud2dShader,\n        \"Transparency\": transparentShader,\n        \"BigBang\": bigbangShader,\n        \"Set\": setShader,\n        \"Glassy\": glassyShader,\n        \"Glow\": glowShader\n      }\n    },\n    textures: {\n      \"Blank\": [\"stone\"],\n      \"ThatCat\": [\"noise64\"],\n      \"Nowhere\": [\"noise64\"],\n      \"Mushroom\": [\"noise64\", \"stone\"],\n      \"Halloween\": [\"noise64\"],\n      \"Water\": [\"noise64\", \"stone\"],\n      \"Cloud\": [\"noise64\"],\n      \"Glassy\": [\"stone\"]\n    },\n    cubemapTextures: {\n      \"BigBang\": [\"building\"],\n      \"Glassy\": [\"forest\"],\n      \"Glow\": [\"forest\"]\n    },\n    currentShader: {\n      \"2D\": \"ZenTime\",\n      \"3D\": \"PBR\"\n    },\n    lightInfo: {\n      position: [-10.0, 10.0, 5.0],\n      color: [1.0, 1.0, 0.97]\n    },\n    cameraInfo: {\n      position: [0.0, 0.0, 10.0],\n      target: [0.0, 0.0, 0.0]\n    },\n    currentScene: \"3D\",\n    currentModel: \"case\",\n    model: {\n      \"case\": {\n        \"modelType\": \"custom\",\n        \"path\": caseModel, \n        \"model\": null,\n        \"text\": \"\",\n        \"transform\": {\n          \"translate\": [0.0, -2.0, -5.0],\n          \"rotateAxis\": [0, 1, 0],\n          \"rotateDegree\": 0,\n          \"autoRotate\": false,\n          \"scale\": [0.1, 0.1, 0.1]\n        },\n        \"textures\": {\n          \"normal\": {\n            path: caseNormal,\n            img: null,\n            desc: \"Normal Map\"\n          },\n          \"color\": {\n            path: caseColor,\n            img: null,\n            desc: \"Color\"\n          },\n          \"metallic\": {\n            path: caseMetal,\n            img: null,\n            desc: \"Metallic\"\n          },\n          \"roughness\": {\n            path: caseRough,\n            img: null,\n            desc: \"Roughness\"\n          },\n          \"ao\": {\n            path: caseAO,\n            img: null,\n            desc: \"AmbientOcclusion\"\n          },\n          \"emission\": {\n            path: null,\n            img: null,\n            desc: \"Emission\"\n          }\n        },\n      },\n      \"cup\": {\n        \"modelType\": \"custom\",\n        \"path\": cupModel,\n        \"model\": null,\n        \"text\": \"\",\n        \"transform\": {\n          \"translate\": [0.0, -1.0, -2.0],\n          \"rotateAxis\": [0, 1, 0],\n          \"rotateDegree\": 0,\n          \"autoRotate\": false,\n        },\n        \"textures\": {\n          \"normal\": {\n            path: cupNormal,\n            img: null,\n            desc: \"Normal Map\"\n          },\n          \"color\": {\n            path: cupColor,\n            img: null,\n            desc: \"Color\"\n          },\n          \"metallic\": {\n            path: cupMetal,\n            img: null,\n            desc: \"Metallic\"\n          },\n          \"roughness\": {\n            path: cupRough,\n            img: null,\n            desc: \"Roughness\"\n          }\n        }\n      },\n      \"cube\": {\n        \"modelType\": \"custom\",\n        \"path\": cube, \n        \"model\": cube,\n        \"text\": \"\",\n        \"transform\": {\n          \"translate\": [0.0, -2.0, -5.0],\n          \"rotateAxis\": [0, 1, 0],\n          \"rotateDegree\": 0,\n          \"autoRotate\": false,\n          \"scale\": [1.0, 1.0, 1.0]\n        },\n        \"textures\": {\n          \"normal\": {\n            path: wallNormal,\n            img: null,\n            desc: \"Normal Map\"\n          },\n          \"color\": {\n            path: wallColor,\n            img: null,\n            desc: \"Color\"\n          },\n          \"metallic\": {\n            path: cupMetal,\n            img: null,\n            desc: \"Metallic\"\n          },\n          \"roughness\": {\n            path: cupRough,\n            img: null,\n            desc: \"Roughness\"\n          },\n          \"ao\": {\n            path: null,\n            img: null,\n            desc: \"AmbientOcclusion\"\n          },\n          \"emission\": {\n            path: null,\n            img: null,\n            desc: \"Emission\"\n          }\n        },\n      }\n    },\n    images: {\n      \"noise64\": {\n        path: noise64,\n        img: null\n      },\n      \"noise256\": {\n        path: noise256,\n        img: null\n      },\n      \"wood\": {\n        path: wood,\n        img: null\n      },\n      \"stone\": {\n        path: stone,\n        img: null\n      }\n    },\n    cubemaps: {\n      \"building\": {\n        \"right\": {\n          path: buildingFace0,\n          img: null\n        },\n        \"left\": {\n          path: buildingFace1,\n          img: null\n        },\n        \"top\": { \n          path: buildingFace2,\n          img: null\n        },\n        \"bottom\": {\n          path: buildingFace3,\n          img: null\n        },\n        \"front\": {\n          path: buildingFace4,\n          img: null\n        },\n        \"back\": {\n          path: buildingFace5,\n          img: null\n        }\n      },\n      \"forest\": {\n        \"right\": {\n          path: forestFace0,\n          img: null\n        },\n        \"left\": {\n          path: forestFace1,\n          img: null\n        },\n        \"top\": { \n          path: forestFace2,\n          img: null\n        },\n        \"bottom\": {\n          path: forestFace3,\n          img: null\n        },\n        \"front\": {\n          path: forestFace4,\n          img: null\n        },\n        \"back\": {\n          path: forestFace5,\n          img: null\n        }\n      }\n    },\n}\n\n/**\n * An object to return appStore data. \n * Note that since only shallow copy is used, there is no guarantee of the returned value being immutable.\n */\nconst appStore = {\n  get: () => Object.assign({}, appData),\n  getById: id => {\n    if (Array.isArray(appData[id])) {\n      //Shallow copy\n      return [...appData[id]];\n    } else if (typeof appData[id] === \"object\") {\n      //Shallow copy\n      return Object.assign({}, appData[id]);\n    } else {\n      return appData[id];\n    }\n  },\n  setDataById: (id, newData) => {\n    appData[id] = Object.assign({}, {...appData[id], ...newData});\n  }\n}\n// No further modifications allowed for this object.\nObject.freeze(appStore);\n\nexport default appStore;\n\n  \n","var vertex =`#version 300 es\n  precision mediump float;\n  uniform mat4 u_model;\n  uniform mat4 u_view;\n  uniform mat4 u_projection;\n  uniform mat4 u_normalMatrix;\n\n  in vec4 a_position;\n  in vec3 a_normal;\n  in vec2 a_texCoord;\n\n  out vec2 v_texCoord;\n  out vec3 v_normal;\n  out vec3 v_fragPos;\n\n  void main(){\n    gl_Position = u_projection * u_view * u_model * a_position;\n    v_normal = mat3(u_normalMatrix) * a_normal; //Transform to world space\n    v_fragPos = vec3(u_model * a_position); //Transform to world space\n    v_texCoord = a_texCoord;\n  }\n  `;\n\nvar fragment = `#version 300 es\n  precision mediump float;\n  uniform vec3 u_lightPos;\n  uniform vec3 u_cameraPos;\n  uniform vec3 u_lightColor;\n  uniform vec3 u_color;\n  uniform sampler2D u_sample;\n\n  in vec3 v_normal;\n  in vec3 v_fragPos;\n  in vec2 v_texCoord;\n  out vec4 outColor;\n  void main(){\n    vec3 normal = normalize(v_normal);\n    //calculate ambient light\n    vec3 ambientColor = 0.05 * u_lightColor * u_color;\n    vec3 diffColor = u_color;\n    //calculate diffuse light\n    vec3 lightDir = normalize(u_lightPos - v_fragPos);\n    float nDotL = max(dot(lightDir, normal), 0.0);\n    vec3 diffuseColor = diffColor * nDotL;\n    //calculate specular light\n    vec3 viewDir = normalize(u_cameraPos-v_fragPos);\n    vec3 reflectDir = reflect(-lightDir, normal);\n    float spec = pow(max(dot(reflectDir, viewDir), 0.0), 64.0);\n    vec3 specularColor = u_lightColor * spec;\n    outColor = vec4(ambientColor + diffuseColor + specularColor , 1.0);\n  }\n  `;\n  \nexport default {\n  vertex,\n  fragment\n}\n","var vertex =\n    `#version 300 es\n    precision mediump float;\n\n    in vec4 a_position;\n    in vec2 a_texCoord;\n    in vec3 a_normal;\n\n    out vec2 v_texCoord;\n    out vec3 v_normal;\n    out vec4 v_fragPos;\n\n    void main(){\n      v_fragPos = a_position;\n      v_fragPos.z = 1.0; // force z to be 1.0 for later transformation\n      v_normal = a_normal;\n      v_texCoord = a_texCoord;\n      gl_Position = a_position;\n      gl_Position.z = gl_Position.w;\n    }\n    `;\n\nvar fragment =\n    `#version 300 es\n    #define SUN_COLOR vec3(0.6,0.5,0.2)\n    #define SUN_GLOW vec3(0.7,0.4,0.4)\n    #define SKY_COLOR vec3(0.5,0.6,0.9)\n    #define SUN_DIR vec3(0.0, 0.5, -1.0)\n\n    precision mediump float;\n    uniform sampler2D u_noisemap;\n    uniform float u_time;\n    uniform mat4 u_viewProjectInvMatrix;\n    in vec4 v_fragPos;\n    out vec4 outColor;\n\n    float noise(in vec2 uv) {\n        return texture(u_noisemap, uv/64.0).r;\n    }\n\n    float smoothNoise(in vec2 uv) {\n        vec2 luv = fract(uv); //range from 0.0 to 1.0\n        vec2 id = floor(uv); //the integer part of uv, 0, 1, 2\n        luv = luv*luv*(3.0 - 2.0*luv); //similar to smoothstep\n\n        //get values from the cordinates of a square\n        float bl = noise(id);\n        float br = noise(id + vec2(1.0, 0.0));\n        float tl = noise(id + vec2(0.0, 1.0));\n        float tr = noise(id + vec2(1.0, 1.0));\n\n        float b = mix(bl, br, luv.x); //interpolate between bl and br\n        float t = mix(tl, tr, luv.x); //interpolate between tl and tr\n\n        return mix(b, t, luv.y);\n    }\n\n    float fbm4(in vec2 uv) {\n        float amp = 0.5;\n        float f = 2.0;\n        float h = 0.0;\n        float a = 0.0;\n        for (int i = 0; i < 4; i++){\n            h += amp * smoothNoise(uv*f);\n            a += amp;\n            amp *= 0.5;\n            f *= 2.0;\n        }\n\n        h /= a;\n        return h;\n    }\n\n    vec3 calcSky(vec3 skyColor, vec3 cloudColor, vec2 uv) {\n        vec3 col = vec3(0.0);\n        // speed\n        float v = 0.001;\n        // layer1\n        vec2 scale = uv * 2.0;\n        vec2 turbulence = 0.008 * vec2(noise(vec2(uv.x * 10.0, uv.y *10.0)), noise(vec2(uv.x * 10.0, uv.y * 10.0)));\n        scale += turbulence;\n    \t  float n1 = fbm4(uv);\n\n        col = mix( skyColor, cloudColor, smoothstep(0.2, 0.8, n1));\n        col = min(col, vec3(1.0));\n        return col;\n    }\n\n    vec3 skybox() {\n      vec4 t = u_viewProjectInvMatrix * v_fragPos;\n      vec3 rd = normalize(t.xyz / t.w);\n      // A simple way to place some clouds on a distant plane above the terrain -- Based on something IQ uses.\n      const float SC = 1e5;\n      // Trace out to a distant XZ plane.\n      float dist = (SC - 0.0)/rd.y;\n      vec2 p = (dist*rd).xz;\n\n      vec3 sunDir = normalize(SUN_DIR);\n      float sun = max(dot(sunDir, rd),0.0);\n      vec3 skyCol = vec3(0.0);\n      vec3 cloudCol = vec3(1.0);\n\n      skyCol += mix(SUN_GLOW, SKY_COLOR, 2.0*abs(rd.y));//horizontal brightness\n      skyCol += 0.5*SUN_COLOR*pow(sun, 64.0);\n      skyCol += 0.4*SUN_GLOW*pow(sun, 32.0);\n\n      skyCol = calcSky(skyCol, cloudCol, p/SC);\n      float grad = smoothstep(0.0, 0.3, rd.y);\n      skyCol = mix(SUN_GLOW*vec3(0.4,0.6,0.6), skyCol, grad);\n\n      return skyCol;\n    }\n\n    void main(){\n      outColor = vec4(skybox(), 1.0);\n    }\n    `;\n\nexport default {\n    vertex,\n    fragment\n}\n","var vertex = `#version 300 es\n#pragma vscode_glsllint_stage : vert\nprecision mediump float;\nuniform mat4 u_model;\nuniform mat4 u_view;\nuniform mat4 u_projection;\nuniform mat4 u_normalMatrix;\nuniform vec3 u_lightPos;\nuniform vec3 u_cameraPos;\nuniform sampler2D u_normal;\n\nin vec4 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec3 a_tangent;\n\nout vec2 v_texCoord; \nout vec3 v_normal; \nout vec3 v_fragPos;\nout vec3 v_tangentLightPos;\nout vec3 v_tangentCameraPos;\nout vec3 v_tangentFragPos; \n\nvoid main(){\n  gl_Position = u_projection * u_view * u_model * a_position;\n  vec3 T = normalize(vec3(u_model * vec4(a_tangent, 0.0)));\n  vec3 N = normalize(vec3(u_model * vec4(a_normal, 0.0)));\n  vec3 B = cross(N, T);\n  v_normal = mat3(u_normalMatrix) * a_normal; //Transform to world space\n  v_fragPos = vec3(u_model * a_position); //Transform to world space\n  v_texCoord = a_texCoord;\n  mat3 TBN = transpose(mat3(T, B, N));\n  v_tangentLightPos = TBN * u_lightPos;\n  v_tangentCameraPos = TBN * u_cameraPos;\n  v_tangentFragPos = TBN * v_fragPos;\n}\n`;\n\nvar fragment = `#version 300 es\n#pragma vscode_glsllint_stage : frag\nprecision mediump float;\nuniform vec3 u_lightPos;\nuniform vec3 u_cameraPos;\nuniform vec3 u_lightColor;\nuniform vec3 u_specularColor;\nuniform sampler2D u_color;\nuniform sampler2D u_metallic;\nuniform sampler2D u_roughness;\nuniform sampler2D u_ao;\nuniform sampler2D u_emission;\nuniform sampler2D u_normal;\n\nin vec3 v_normal;\nin vec3 v_fragPos;\nin vec2 v_texCoord;\nin vec3 v_tangentLightPos;\nin vec3 v_tangentCameraPos;\nin vec3 v_tangentFragPos; \n\nout vec4 outColor;\n\n#define PI 3.1415926\n\nvec3 fresnelSchlick(float cosTheta, vec3 F0) {\n    return F0 + (1.0 - F0) * pow(max(1.0 - cosTheta, 0.0), 5.0);\n}\n\nfloat distributionGGX(vec3 N, vec3 H, float roughness) {\n    float a = roughness * roughness;\n    float a2 = a * a;\n    float NdotH = max(dot(N, H), 0.0);\n    float NdotH2 = NdotH * NdotH;\n    \n    float num = a2;\n    float denom = (NdotH2 * (a2 - 1.0) + 1.0);\n    denom = PI * denom * denom;\n    return num / denom;\n}\n\nfloat geometrySchlickGGX(float NdotV, float roughness) {\n    float r = (roughness + 1.0);\n    float k = r * r / 8.0;\n    float num = NdotV;\n    float denom = NdotV * (1.0 - k) + k;\n    return num / denom;\n}\n\nfloat geometrySmith(float NdotV, float NdotL, float roughness) {\n    float ggx2 = geometrySchlickGGX(NdotV, roughness);\n    float ggx1 = geometrySchlickGGX(NdotL, roughness);\n    return ggx1 * ggx2;\n}\n\n// v, l are not normalized\nvec3 calcLight(vec3 N, vec3 v, vec3 l, vec3 albedo) {\n    vec3 Lo = vec3(0.0);\n    vec3 F0 = vec3(0.04);\n    \n    float metallic = texture(u_metallic, v_texCoord).r;\n    float roughness = texture(u_roughness, v_texCoord).r;\n    F0 = mix(F0, albedo, metallic);\n    vec3 light = vec3(150.0, 150.0, 120.0);\n    //for (int i = 0; i < 4; ++i) \n    {   \n        vec3 V = normalize(v);\n        vec3 L = normalize(l);\n        vec3 H = normalize(V + L);\n        float cosTheta = max(dot(H, V), 0.0);\n        float NdotV = max(dot(N, V), 0.0);\n        float NdotL = max(dot(N, L), 0.0);\n        float dist = length(l);\n        float atten = 1.0 / (dist * dist);\n        vec3 radiance = light * atten;\n        vec3 F = fresnelSchlick(cosTheta, F0);\n        float NDF = distributionGGX(N, H, roughness);\n        float G = geometrySmith(NdotV, NdotL, roughness);\n        vec3 num = NDF * G * F;\n        float denom = 4.0 * NdotV * NdotL;\n        vec3 specular = num / max(denom, 0.001);\n\n        vec3 ks = F;\n        vec3 kd = 1.0 - ks;\n        kd *= 1.0 - metallic;\n\n        Lo += (kd * albedo / PI + specular) * radiance * NdotL;\n    }\n    return Lo;\n}\n\nvoid main(){\n    vec3 N = 2.0 * texture(u_normal, v_texCoord).rgb - 1.0;\n    vec3 viewPos = v_tangentCameraPos;\n    vec3 fragPos = v_tangentFragPos;\n    vec3 lightPos = v_tangentLightPos;\n    vec3 viewDir = viewPos - fragPos;\n    vec3 lightDir = lightPos - fragPos;\n\n    vec3 albedo = pow(texture(u_color, v_texCoord).rgb, vec3(2.2));\n    vec3 emission = texture(u_emission, v_texCoord).rgb;\n    vec3 ao = texture(u_ao, v_texCoord).rgb;\n    vec3 Lo = calcLight(N, viewDir, lightDir, albedo);\n    vec3 ambient = vec3(0.03) * albedo * ao;\n    vec3 col = Lo + ambient;\n    // HDR tonemapping\n    col = col / (col + vec3(1.0));\n    // gamma correct\n    col = pow(col, vec3(1.0/2.2)); \n    outColor = vec4(col, 1.0);\n}`;\n\nexport default {\n    vertex,\n    fragment\n}","/*\r\n * Copyright 2010, Google Inc.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *     * Redistributions of source code must retain the above copyright\r\n * notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above\r\n * copyright notice, this list of conditions and the following disclaimer\r\n * in the documentation and/or other materials provided with the\r\n * distribution.\r\n *     * Neither the name of Google Inc. nor the names of its\r\n * contributors may be used to endorse or promote products derived from\r\n * this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n\r\n/**\r\n * @fileoverview This file contains functions every webgl program will need\r\n * a version of one way or another.\r\n *\r\n * Instead of setting up a context manually it is recommended to\r\n * use. This will check for success or failure. On failure it\r\n * will attempt to present an approriate message to the user.\r\n *\r\n *       gl = WebGLUtils.setupWebGL(canvas);\r\n *\r\n * For animated WebGL apps use of setTimeout or setInterval are\r\n * discouraged. It is recommended you structure your rendering\r\n * loop like this.\r\n *\r\n *       function render() {\r\n *         window.requestAnimationFrame(render, canvas);\r\n *\r\n *         // do rendering\r\n *         ...\r\n *       }\r\n *       render();\r\n *\r\n * This will call your rendering function up to the refresh rate\r\n * of your display but will stop rendering if your app is not\r\n * visible.\r\n */\r\n\r\n/**\r\n * Creates the HTLM for a failure message\r\n * @param {string} canvasContainerId id of container of th\r\n *        canvas.\r\n * @return {string} The html.\r\n */\r\nconst makeFailHTML = (msg) => `${''\r\n      + '<div style=\"margin: auto; width:500px;z-index:10000;margin-top:20em;text-align:center;\">'}${msg}</div>`;\r\n\r\n/**\r\n* Mesasge for getting a webgl browser\r\n* @type {string}\r\n*/\r\nconst GET_A_WEBGL_BROWSER = ''\r\n  + 'This page requires a browser that supports WebGL.<br/>'\r\n  + '<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>';\r\n\r\n/**\r\n* Mesasge for need better hardware\r\n* @type {string}\r\n*/\r\nconst OTHER_PROBLEM = ''\r\n  + \"It doesn't appear your computer can support WebGL.<br/>\"\r\n  + '<a href=\"http://get.webgl.org\">Click here for more information.</a>';\r\n\r\n/**\r\n * Creates a webgl context.\r\n * @param {!Canvas} canvas The canvas tag to get context\r\n *     from. If one is not passed in one will be created.\r\n * @return {!WebGLContext} The created context.\r\n */\r\nconst create3DContext = (canvas, optAttribs) => {\r\n  const names = ['webgl2', 'experimental-webgl', 'webkit-3d', 'moz-webgl'];\r\n  let context = null;\r\n  for (let ii = 0; ii < names.length; ii += 1) {\r\n    try {\r\n      context = canvas.getContext(names[ii], optAttribs);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    if (context) {\r\n      break;\r\n    }\r\n  }\r\n  return context;\r\n};\r\n\r\n/**\r\n * Creates a webgl context. If creation fails it will\r\n * change the contents of the container of the <canvas>\r\n * tag to an error message with the correct links for WebGL.\r\n * @param {Element} canvas. The canvas element to create a\r\n *     context from.\r\n * @param {WebGLContextCreationAttirbutes} optAttribs Any\r\n *     creation attributes you want to pass in.\r\n * @param {function:(msg)} optOnError An function to call\r\n *     if there is an error during creation.\r\n * @return {WebGLRenderingContext} The created context.\r\n */\r\nfunction handleCreationError(msg) {\r\n  const container = document.getElementsByTagName('body')[0];\r\n  // var container = canvas.parentNode;\r\n  if (container) {\r\n    let str = window.WebGLRenderingContext\r\n      ? OTHER_PROBLEM\r\n      : GET_A_WEBGL_BROWSER;\r\n    if (msg) {\r\n      str += `<br/><br/>Status: ${msg}`;\r\n    }\r\n    container.innerHTML = makeFailHTML(str);\r\n  }\r\n}\r\n\r\nconst setupWebGL = (canvas, optAttribs, optOnError) => {\r\n  const errorHandler = optOnError || handleCreationError;\r\n\r\n  if (canvas.addEventListener) {\r\n    canvas.addEventListener('webglcontextcreationerror', (event) => {\r\n      errorHandler(event.statusMessage);\r\n    }, false);\r\n  }\r\n  const context = create3DContext(canvas, optAttribs);\r\n  if (!context) {\r\n    if (!window.WebGLRenderingContext) {\r\n      errorHandler('');\r\n    } else {\r\n      errorHandler('');\r\n    }\r\n  }\r\n  return context;\r\n};\r\n\r\n/**\r\n * Provides requestAnimationFrame in a cross browser\r\n * way.\r\n */\r\nif (!window.requestAnimationFrame) {\r\n  window.requestAnimationFrame = (function () {\r\n    return window.requestAnimationFrame\r\n           || window.webkitRequestAnimationFrame\r\n           || window.mozRequestAnimationFrame\r\n           || window.oRequestAnimationFrame\r\n           || window.msRequestAnimationFrame\r\n           || function (/* function FrameRequestCallback */ callback) {\r\n             window.setTimeout(callback, 1000 / 60);\r\n           };\r\n  }());\r\n}\r\n\r\n/** * ERRATA: 'cancelRequestAnimationFrame' renamed to 'cancelAnimationFrame'\r\n *  to reflect an update to the W3C Animation-Timing Spec.\r\n *\r\n * Cancels an animation frame request.\r\n * Checks for cross-browser support, falls back to clearTimeout.\r\n * @param {number}  Animation frame request. */\r\nif (!window.cancelAnimationFrame) {\r\n  window.cancelAnimationFrame = (window.cancelRequestAnimationFrame\r\n                                 || window.webkitCancelAnimationFrame\r\n                                 || window.webkitCancelRequestAnimationFrame\r\n                                 || window.mozCancelAnimationFrame\r\n                                 || window.mozCancelRequestAnimationFrame\r\n                                 || window.msCancelAnimationFrame\r\n                                 || window.msCancelRequestAnimationFrame\r\n                                 || window.oCancelAnimationFrame\r\n                                 || window.oCancelRequestAnimationFrame\r\n                                 || window.clearTimeout);\r\n}\r\n\r\n// cuon-utils.js (c) 2012 kanda and matsuda\r\n/**\r\n * Create a program object and store it in programs\r\n * @param gl GL context\r\n * @param vshader a vertex shader program (string)\r\n * @param fshader a fragment shader program (string)\r\n * @return a WebGL shader program\r\n */\r\nconst createShader = (gl, vshader, fshader, transformFeedbackProperties = null) => {\r\n  const program = createProgram(gl, vshader, fshader, transformFeedbackProperties);\r\n  if (!program) {\r\n    console.log('Failed to create program');\r\n    return null;\r\n  }\r\n\r\n  return program;\r\n};\r\n\r\n/**\r\n * Sets the current shading program used when drawing\r\n * @param gl GL context\r\n * @param program A WebGl shading program\r\n */\r\nconst useShader = (gl, program) => {\r\n  gl.useProgram(program);\r\n  gl.program = program;\r\n};\r\n\r\n/**\r\n * Create the linked program object\r\n * @param gl GL context\r\n * @param vshader a vertex shader program (string)\r\n * @param fshader a fragment shader program (string)\r\n * @return created program object, or null if the creation has failed\r\n */\r\nconst createProgram = (gl, vshader, fshader, transformFeedbackProperties = null) => {\r\n  // Create shader object\r\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vshader);\r\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fshader);\r\n  if (!vertexShader || !fragmentShader) {\r\n    return null;\r\n  }\r\n\r\n  // Create a program object\r\n  const program = gl.createProgram();\r\n  if (!program) {\r\n    return null;\r\n  }\r\n\r\n  // Attach the shader objects\r\n  gl.attachShader(program, vertexShader);\r\n  gl.attachShader(program, fragmentShader);\r\n\r\n  // transform feedback\r\n  if (transformFeedbackProperties != null) {\r\n    gl.transformFeedbackVaryings(\r\n      program,\r\n      transformFeedbackProperties,\r\n      gl.INTERLEAVED_ATTRIBS,\r\n    );\r\n  }\r\n  // Link the program object\r\n  gl.linkProgram(program);\r\n\r\n  // Check the result of linking\r\n  const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n  if (!linked) {\r\n    const error = gl.getProgramInfoLog(program);\r\n    console.log(`Failed to link program: ${error}`);\r\n    gl.deleteProgram(program);\r\n    gl.deleteShader(fragmentShader);\r\n    gl.deleteShader(vertexShader);\r\n    return null;\r\n  }\r\n  return program;\r\n};\r\n\r\n/**\r\n * Create a shader object\r\n * @param gl GL context\r\n * @param type the type of the shader object to be created\r\n * @param source shader program (string)\r\n * @return created shader object, or null if the creation has failed.\r\n */\r\nconst loadShader = (gl, type, source) => {\r\n  // Create shader object\r\n  const shader = gl.createShader(type);\r\n  if (shader == null) {\r\n    console.log('unable to create shader');\r\n    return null;\r\n  }\r\n\r\n  // Set the shader program\r\n  gl.shaderSource(shader, source);\r\n\r\n  // Compile the shader\r\n  gl.compileShader(shader);\r\n\r\n  // Check the result of compilation\r\n  const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n  if (!compiled) {\r\n    const error = gl.getShaderInfoLog(shader);\r\n    console.log(`Failed to compile shader: ${error}`);\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n\r\n  return shader;\r\n};\r\n\r\n/**\r\n * Initialize and get the rendering for WebGL\r\n * @param canvas <cavnas> element\r\n * @param opt_debug flag to initialize the context for debugging\r\n * @return the rendering context for WebGL\r\n */\r\nconst getWebGLContext = (canvas, opt_debug = false) => {\r\n  // Get the rendering context for WebGL\r\n  let gl = setupWebGL(canvas);\r\n  if (!gl) return null;\r\n\r\n  return gl;\r\n};\r\n\r\nexport {\r\n  getWebGLContext,\r\n  setupWebGL,\r\n  create3DContext,\r\n  loadShader,\r\n  useShader,\r\n  createProgram,\r\n  createShader,\r\n}\r\n","/**\n * Sends a WebGL 2D texture object (created by load2DTexture) and sends it to\n * the shaders.\n *\n * @param gl The WebGl context\n * @param val The WebGL 2D texture object being passed\n * @param {Number} textureUnit The texture unit (0 - 7) where the texture will reside\n * @param {String} uniformName The name of the uniform variable where the texture's\n * textureUnit location (0 - 7) will reside\n */\nexport function send2DTextureToGLSL(gl, val, textureUnit, uniformName) {\n  // Recomendations: Within this funciton, you should:\n  //    1. Gather your uniform location\n  //    2. Determine the exture unit you will be using (gl.TEXTURE\"N\")\n  //    3. Activate your texture unit using gl.activeTexture\n  //    4. Bind your texture using gl.bindTexture\n  //    5. Send the texture unit (textureUnit not the one you found) to your\n  //       uniform location.\n\n  let loc = gl.getUniformLocation(gl.program, uniformName);\n  if (!loc) {\n    console.log('Failed to get the storage location of ' + uniformName);\n    return false;\n  }\n\n  // Set the texture unit to the sampler\n  gl.uniform1i(loc, textureUnit);\n\n  // Enable texture unit\n  gl.activeTexture(gl.TEXTURE0 + textureUnit);\n\n  // Bind the texture object to the target\n  gl.bindTexture(gl.TEXTURE_2D, val);\n}\n\n/**\n * Sends a WebGL 2D texture object (created by load2DTexture) and sends it to\n * the shaders.\n *\n * @param gl The WebGl context\n * @param val The WebGL 2D texture object being passed\n * @param {Number} textureUnit The texture unit (0 - 7) where the texture will reside\n * @param {String} uniformName The name of the uniform variable where the texture's\n * textureUnit location (0 - 7) will reside\n */\nexport function sendCubemapToGLSL(gl, val, textureUnit, uniformName) {\n  let loc = gl.getUniformLocation(gl.program, uniformName);\n  if (!loc) {\n    console.log('Failed to get the storage location of' + uniformName);\n    return false;\n  }\n\n  // Set the texture unit to the sampler\n  gl.uniform1i(loc, textureUnit);\n\n  // Enable texture unit\n  gl.activeTexture(gl.TEXTURE0 + textureUnit);\n\n  // Bind the texture object to the target\n  gl.bindTexture(gl.TEXTURE_CUBE_MAP, val);\n}\n\n/**\n * Creates a WebGl 2D texture object.\n *\n * @param gl The WebGl context\n * @param imgPath A file path/data url containing the location of the texture image\n * @param magParam texParameteri for gl.TEXTURE_MAG_FILTER. Can be gl.NEAREST,\n * gl.LINEAR, etc.\n * @param minParam texParameteri for gl.TEXTURE_MIN_FILTER. Can be gl.NEAREST,\n * gl.LINEAR, etc.\n * @param wrapSParam texParameteri for gl.TEXTURE_WRAP_S. Can be gl.REPEAT,\n * gl. MIRRORED_REPEAT, or gl.CLAMP_TO_EDGE.\n * @param wrapTParam texParameteri for gl.TEXTURE_WRAP_S. Can be gl.REPEAT,\n * gl. MIRRORED_REPEAT, or gl.CLAMP_TO_EDGE.\n * @param callback A callback function which executes with the completed texture\n * object passed as a parameter.\n */\nexport function create2DTexture(gl, image, magParam, minParam, wrapSParam, wrapTParam) {\n  // Recomendations: This function should see you creating an Image object,\n  // setting that image object's \".onload\" to an anonymous function containing\n  // the rest of your code, and setting that image object's \".src\" to imgPath.\n  //\n  // Within the anonymous function:\n  //  1. create a texture object by saving the result of gl.createTexture()\n  //  2. Flip your image's y-axis and bind your texture object to gl.TEXTURE_2D\n  //  3. Using multiple calls to gl.texParameteri, pass magParam, minParam,\n  //     wrapSParam, and wrapTParam.\n  //  4. Set the texture's image to the loaded image using gl.texImage2D\n  //  5. Pass your completed texture object to your callback function\n  //\n  // NOTE: This function should not return anything.\n  \n  if (!image) {\n    console.log('Failed to create the image object');\n    return null;\n  }\n  let texture = gl.createTexture();   // Create a texture object\n  if (!texture) {\n    console.log('Failed to create the texture object');\n    return null;\n  }\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minParam || gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magParam || gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapSParam || gl.REPEAT);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapTParam || gl.REPEAT);\n  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, image.width, image.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  \n  return texture;\n}\n\n/**\n * Creates a WebGl cubemap texture object.\n *\n * @param gl The WebGl context\n * @param images An object containing 6 faces and their corresponding Image objects\n * @param magParam texParameteri for gl.TEXTURE_MAG_FILTER. Can be gl.NEAREST,\n * gl.LINEAR, etc.\n * @param minParam texParameteri for gl.TEXTURE_MIN_FILTER. Can be gl.NEAREST,\n * gl.LINEAR, etc.\n * @param wrapSParam texParameteri for gl.TEXTURE_WRAP_S. Can be gl.REPEAT,\n * gl. MIRRORED_REPEAT, or gl.CLAMP_TO_EDGE.\n * @param wrapTParam texParameteri for gl.TEXTURE_WRAP_S. Can be gl.REPEAT,\n * gl. MIRRORED_REPEAT, or gl.CLAMP_TO_EDGE.\n * @returns texture \n */\n export function createCubemapTexture(gl, images, magParam, minParam, wrapSParam, wrapTParam, wrapRParam) {\n  if (!images || images.length < 6) return null;\n  // Define faces\n  const faces = [\n    [\"right\", gl.TEXTURE_CUBE_MAP_POSITIVE_X],\n    [\"left\", gl.TEXTURE_CUBE_MAP_NEGATIVE_X],\n    [\"top\", gl.TEXTURE_CUBE_MAP_POSITIVE_Y],\n    [\"bottom\", gl.TEXTURE_CUBE_MAP_NEGATIVE_Y],\n    [\"front\", gl.TEXTURE_CUBE_MAP_POSITIVE_Z],\n    [\"back\", gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n  ];\n\n  let texture = gl.createTexture();   // Create a texture object\n  if (!texture) {\n    console.log('Failed to create the texture object');\n    return null;\n  }\n\n  gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n  for (var i = 0; i < faces.length; ++i) {\n    let face = faces[i][0];\n    let faceId = faces[i][1]\n    let imageObj = images[face].img;  // Create the image object\n    if (!imageObj) {\n      console.log('Failed to create the image object');\n      break;\n    }\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, minParam || gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, magParam || gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, wrapSParam || gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, wrapTParam || gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_R, wrapRParam || gl.CLAMP_TO_EDGE);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(faceId, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, imageObj);\n  }\n  return texture;\n}\n\nexport function createNullTexture(gl, width, height, internalFormat, format, border, dataType, magParam, minParam, wrapSParam, wrapTParam) {\n  let texture = gl.createTexture();   // Create a texture object\n  if (!texture) {\n    console.log('Failed to create the texture object');\n    return false;\n  }\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, width, height, 0, format, dataType, null);\n  //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minParam);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magParam);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapSParam);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapTParam);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\n\nexport function updateNullTexture(gl, texture, width, height, internalFormat, format, border, dataType, magParam, minParam, wrapSParam, wrapTParam) {\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, width, height, 0, format, dataType, null);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n}\n\nexport function createBufferData(gl, data) {\n  let bufferObj = gl.createBuffer();\n  if (!bufferObj) {\n    console.log('Failed to create the buffer object');\n    return -1;\n  }\n  // Bind the buffer object to target\n  gl.bindBuffer(gl.ARRAY_BUFFER, bufferObj);\n  // Write date into the buffer object\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return bufferObj;\n}\n\nexport function createElementArrayBuffer(gl, data) {\n  let indexBuffer = gl.createBuffer();\n  if (!indexBuffer) {\n    console.log('Failed to create the index buffer.');\n    return -1;\n  }\n  // Bind the buffer object to target\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n  // Write date into the buffer object\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return indexBuffer;\n}\n/**\n * Sends data to an attribute variable using a buffer.\n *\n * @private\n * @param gl The WebGl context\n * @param {Number} buffer buffer object\n * @param {Number} dataCount The amount of data to pass per vertex\n * @param {String} attribName The name of the attribute variable\n * @param {Number} dataType Data type\n * @param {Number} stride The offset in bytes between the beginning of consecutive vertex attributes\n * @param {Number} offset An offset in bytes of the first component in the vertex attribute array\n */\nexport function sendAttributeBufferToGLSL(gl, buffer, dataCount, attribName, dataType = gl.FLOAT, stride = 0, offset = 0) {\n  if (!buffer) {\n    console.log('Invalid buffer object!');\n    return -1;\n  }\n  // Bind the buffer object to target\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n  let attribLoc = gl.getAttribLocation(gl.program, attribName);\n  if (attribLoc < 0) {\n    console.log('Failed to get the storage location of ' + attribName);\n    return -1;\n  }\n  // Enable the assignment to an attribute variable\n  gl.enableVertexAttribArray(attribLoc);\n  // Assign the buffer object to an attribute variable\n  gl.vertexAttribPointer(attribLoc, dataCount, dataType, false, stride, offset);\n  return attribLoc;\n}\n\n/**\n * set indices buffer\n *\n * @private\n * @param gl The WebGl context\n * @param {Uint8Array} indices Data being sent to attribute variable\n */\nexport function setIndexBuffer(gl, indices) {\n// Write the indices to the buffer object\n  let indexBuffer = gl.createBuffer();\n  if (!indexBuffer) {\n    console.log('Failed to create the buffer object');\n    return -1;\n  }\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n}\n/**\n * Draws the current buffer loaded. Buffer was loaded by sendAttributeBufferToGLSL.\n * @param gl The WebGl context\n * @param {Integer} pointCount The amount of indices being drawn from the buffer.\n */\nexport function tellGLSLToDrawCurrentBuffer(gl, pointCount) {\n  // Recommendations: Should only be one line of code.\n  gl.drawElements(gl.TRIANGLES, pointCount, gl.UNSIGNED_SHORT, 0);\n}\n\n/**\n * Draws the current buffer loaded. Buffer was loaded by sendAttributeBufferToGLSL.\n * @param gl The WebGl context\n * @param {Integer} pointCount The amount of vertices being drawn from the buffer.\n */\nexport function tellGLSLToDrawArrays(gl, pointCount) {\n  gl.drawArrays(gl.TRIANGLES, 0, pointCount);\n}\n\n/**\n * Sends a unsigned int value to the specified uniform variable within GLSL shaders.\n * Prints an error message if unsuccessful.\n *\n * @param gl The WebGl context\n * @param {int} val The float value being passed to uniform variable\n * @param {String} uniformName The name of the uniform variable\n */\nexport function sendUniformUintToGLSL(gl, val, uniformName) {\n  let val_loc = gl.getUniformLocation(gl.program, uniformName);\n  if (val_loc < 0) {\n    console.log('Failed to get the storage location of ' + uniformName);\n    return;\n  }\n  gl.uniform1ui(val_loc, val);\n}\n\n/**\n * Sends a float value to the specified uniform variable within GLSL shaders.\n * Prints an error message if unsuccessful.\n *\n * @param gl The WebGl context\n * @param {float} val The float value being passed to uniform variable\n * @param {String} uniformName The name of the uniform variable\n */\nexport function sendUniformFloatToGLSL(gl, val, uniformName) {\n  let val_loc = gl.getUniformLocation(gl.program, uniformName);\n  if (val_loc < 0) {\n    console.log('Failed to get the storage location of ' + uniformName);\n    return;\n  }\n  gl.uniform1f(val_loc, val);\n}\n\n/**\n * Sends an JavaSript array (vector) to the specified uniform variable within\n * GLSL shaders. Array can be of length 4.\n *\n * @param gl The WebGl context\n * @param {Array} val Array (vector) being passed to uniform variable\n * @param {String} uniformName The name of the uniform variable\n */\nexport function sendUniformVec4ToGLSL(gl, val, uniformName) {\n  let val_loc = gl.getUniformLocation(gl.program, uniformName);\n  if (val_loc < 0) {\n    console.log('Failed to get the storage location of ' + uniformName);\n    return;\n  }\n  gl.uniform4f(val_loc, val[0], val[1], val[2], val[3]);\n}\n\n/**\n * Sends an JavaSript array (vector) to the specified uniform variable within\n * GLSL shaders. Array can be of length 3.\n *\n * @param gl The WebGl context\n * @param {Array} val Array (vector) being passed to uniform variable\n * @param {String} uniformName The name of the uniform variable\n */\nexport function sendUniformVec3ToGLSL(gl, val, uniformName) {\n  let val_loc = gl.getUniformLocation(gl.program, uniformName);\n  if (val_loc < 0) {\n    console.log('Failed to get the storage location of ' + uniformName);\n    return;\n  }\n  gl.uniform3f(val_loc, val[0], val[1], val[2]);\n}\n\n/**\n * Sends an JavaSript array (vector) to the specified uniform variable within\n * GLSL shaders. Array can be of length 2.\n *\n * @param gl The WebGl context\n * @param {Array} val Array (vector) being passed to uniform variable\n * @param {String} uniformName The name of the uniform variable\n */\nexport function sendUniformVec2ToGLSL(gl, val, uniformName) {\n  let val_loc = gl.getUniformLocation(gl.program, uniformName);\n  if (val_loc < 0) {\n    console.log('Failed to get the storage location of ' + uniformName);\n    return;\n  }\n  gl.uniform2f(val_loc, val[0], val[1]);\n}\n\n/**\n * Sends data to a uniform variable expecting a matrix value.\n *\n * @private\n * @param gl The WebGl context\n * @param {Array} val Value being sent to uniform variable\n * @param {String} uniformName Name of the uniform variable recieving data\n */\nexport function sendUniformMat4ToGLSL(gl, val, uniformName) {\n   let val_loc = gl.getUniformLocation(gl.program, uniformName);\n   if (val_loc < 0) {\n     console.log('Failed to get the storage location of ' + uniformName);\n     return;\n   }\n   gl.uniformMatrix4fv(val_loc, false, val.elements);\n}\n","/**\n * Specifies a material object.\n *\n * @author \"Xiaoxuan Zhang\"\n * @this {Material}\n */\nclass Material {\n  /**\n   * Constructor for Material.\n   *\n   * @constructor\n   */\n  constructor(params = {}) {\n    const { uniforms, shaders } = params;\n    this.uniforms = uniforms;\n    this.shaderProgram = null;\n    this.shaders = shaders;\n    this.textureUnit = {}; //keep track of texture unit\n    this.textureUnitCount = 0;\n  }\n\n  setProgram(program) {\n    this.shaderProgram = program;\n  }\n  \n  getTextureUnit(name) {\n    if (!(name in this.textureUnit)) {\n      this.textureUnit[name] = this.textureUnitCount;\n      this.textureUnitCount++;\n    }\n    return this.textureUnit[name];\n  }\n\n}\n\nexport default Material;\n","// cuon-matrix.js (c) 2012 kanda and matsuda\r\n/**\r\n * This is a class treating 4x4 matrix.\r\n * This class contains the function that is equivalent to OpenGL matrix stack.\r\n * The matrix after conversion is calculated by multiplying a conversion matrix from the right.\r\n * The matrix is replaced by the calculated result.\r\n */\r\n\r\n/**\r\n * Constructor of Matrix4\r\n * If opt_src is specified, new matrix is initialized by opt_src.\r\n * Otherwise, new matrix is initialized by identity matrix.\r\n * @param opt_src source matrix(option)\r\n */\r\nvar Matrix4 = function(opt_src) {\r\n  var i, s, d;\r\n  if (opt_src && typeof opt_src === 'object' && Object.prototype.hasOwnProperty.call(opt_src, \"elements\")) {\r\n    s = opt_src.elements;\r\n    d = new Float32Array(16);\r\n    for (i = 0; i < 16; ++i) {\r\n      d[i] = s[i];\r\n    }\r\n    this.elements = d;\r\n  } else {\r\n    this.elements = new Float32Array([1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1]);\r\n  }\r\n};\r\n\r\n/**\r\n * Set the identity matrix.\r\n * @return this\r\n */\r\nMatrix4.prototype.setIdentity = function() {\r\n  var e = this.elements;\r\n  e[0] = 1;   e[4] = 0;   e[8]  = 0;   e[12] = 0;\r\n  e[1] = 0;   e[5] = 1;   e[9]  = 0;   e[13] = 0;\r\n  e[2] = 0;   e[6] = 0;   e[10] = 1;   e[14] = 0;\r\n  e[3] = 0;   e[7] = 0;   e[11] = 0;   e[15] = 1;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Copy matrix.\r\n * @param src source matrix\r\n * @return this\r\n */\r\nMatrix4.prototype.set = function(src) {\r\n  var i, s, d;\r\n\r\n  s = src.elements;\r\n  d = this.elements;\r\n\r\n  if (s === d) {\r\n    return;\r\n  }\r\n\r\n  for (i = 0; i < 16; ++i) {\r\n    d[i] = s[i];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the matrix from the right.\r\n * @param other The multiply matrix\r\n * @return this\r\n */\r\nMatrix4.prototype.concat = function(other) {\r\n  var i, e, a, b, ai0, ai1, ai2, ai3;\r\n\r\n  // Calculate e = a * b\r\n  e = this.elements;\r\n  a = this.elements;\r\n  b = other.elements;\r\n\r\n  // If e equals b, copy b to temporary matrix.\r\n  if (e === b) {\r\n    b = new Float32Array(16);\r\n    for (i = 0; i < 16; ++i) {\r\n      b[i] = e[i];\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < 4; i++) {\r\n    ai0=a[i];  ai1=a[i+4];  ai2=a[i+8];  ai3=a[i+12];\r\n    e[i]    = ai0 * b[0]  + ai1 * b[1]  + ai2 * b[2]  + ai3 * b[3];\r\n    e[i+4]  = ai0 * b[4]  + ai1 * b[5]  + ai2 * b[6]  + ai3 * b[7];\r\n    e[i+8]  = ai0 * b[8]  + ai1 * b[9]  + ai2 * b[10] + ai3 * b[11];\r\n    e[i+12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n  }\r\n\r\n  return this;\r\n};\r\nMatrix4.prototype.multiply = Matrix4.prototype.concat;\r\n\r\n/**\r\n * Multiply the three-dimensional vector.\r\n * @param pos  The multiply vector\r\n * @return The result of multiplication(Float32Array)\r\n */\r\nMatrix4.prototype.multiplyVector3 = function(pos) {\r\n  var e = this.elements;\r\n  var p = pos.elements;\r\n  var v = new Vector3();\r\n  var result = v.elements;\r\n\r\n  result[0] = p[0] * e[0] + p[1] * e[4] + p[2] * e[ 8] + e[12];\r\n  result[1] = p[0] * e[1] + p[1] * e[5] + p[2] * e[ 9] + e[13];\r\n  result[2] = p[0] * e[2] + p[1] * e[6] + p[2] * e[10] + e[14];\r\n\r\n  return v;\r\n};\r\n\r\n/**\r\n * Multiply the four-dimensional vector.\r\n * @param pos  The multiply vector\r\n * @return The result of multiplication(Float32Array)\r\n */\r\nMatrix4.prototype.multiplyVector4 = function(pos) {\r\n  var e = this.elements;\r\n  var p = pos.elements;\r\n  var v = new Vector4();\r\n  var result = v.elements;\r\n\r\n  result[0] = p[0] * e[0] + p[1] * e[4] + p[2] * e[ 8] + p[3] * e[12];\r\n  result[1] = p[0] * e[1] + p[1] * e[5] + p[2] * e[ 9] + p[3] * e[13];\r\n  result[2] = p[0] * e[2] + p[1] * e[6] + p[2] * e[10] + p[3] * e[14];\r\n  result[3] = p[0] * e[3] + p[1] * e[7] + p[2] * e[11] + p[3] * e[15];\r\n\r\n  return v;\r\n};\r\n\r\n/**\r\n * Transpose the matrix.\r\n * @return this\r\n */\r\nMatrix4.prototype.transpose = function() {\r\n  var e, t;\r\n\r\n  e = this.elements;\r\n\r\n  t = e[ 1];  e[ 1] = e[ 4];  e[ 4] = t;\r\n  t = e[ 2];  e[ 2] = e[ 8];  e[ 8] = t;\r\n  t = e[ 3];  e[ 3] = e[12];  e[12] = t;\r\n  t = e[ 6];  e[ 6] = e[ 9];  e[ 9] = t;\r\n  t = e[ 7];  e[ 7] = e[13];  e[13] = t;\r\n  t = e[11];  e[11] = e[14];  e[14] = t;\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Calculate the inverse matrix of specified matrix, and set to this.\r\n * @param other The source matrix\r\n * @return this\r\n */\r\nMatrix4.prototype.setInverseOf = function(other) {\r\n  var i, s, d, inv, det;\r\n\r\n  s = other.elements;\r\n  d = this.elements;\r\n  inv = new Float32Array(16);\r\n\r\n  inv[0]  =   s[5]*s[10]*s[15] - s[5] *s[11]*s[14] - s[9] *s[6]*s[15]\r\n            + s[9]*s[7] *s[14] + s[13]*s[6] *s[11] - s[13]*s[7]*s[10];\r\n  inv[4]  = - s[4]*s[10]*s[15] + s[4] *s[11]*s[14] + s[8] *s[6]*s[15]\r\n            - s[8]*s[7] *s[14] - s[12]*s[6] *s[11] + s[12]*s[7]*s[10];\r\n  inv[8]  =   s[4]*s[9] *s[15] - s[4] *s[11]*s[13] - s[8] *s[5]*s[15]\r\n            + s[8]*s[7] *s[13] + s[12]*s[5] *s[11] - s[12]*s[7]*s[9];\r\n  inv[12] = - s[4]*s[9] *s[14] + s[4] *s[10]*s[13] + s[8] *s[5]*s[14]\r\n            - s[8]*s[6] *s[13] - s[12]*s[5] *s[10] + s[12]*s[6]*s[9];\r\n\r\n  inv[1]  = - s[1]*s[10]*s[15] + s[1] *s[11]*s[14] + s[9] *s[2]*s[15]\r\n            - s[9]*s[3] *s[14] - s[13]*s[2] *s[11] + s[13]*s[3]*s[10];\r\n  inv[5]  =   s[0]*s[10]*s[15] - s[0] *s[11]*s[14] - s[8] *s[2]*s[15]\r\n            + s[8]*s[3] *s[14] + s[12]*s[2] *s[11] - s[12]*s[3]*s[10];\r\n  inv[9]  = - s[0]*s[9] *s[15] + s[0] *s[11]*s[13] + s[8] *s[1]*s[15]\r\n            - s[8]*s[3] *s[13] - s[12]*s[1] *s[11] + s[12]*s[3]*s[9];\r\n  inv[13] =   s[0]*s[9] *s[14] - s[0] *s[10]*s[13] - s[8] *s[1]*s[14]\r\n            + s[8]*s[2] *s[13] + s[12]*s[1] *s[10] - s[12]*s[2]*s[9];\r\n\r\n  inv[2]  =   s[1]*s[6]*s[15] - s[1] *s[7]*s[14] - s[5] *s[2]*s[15]\r\n            + s[5]*s[3]*s[14] + s[13]*s[2]*s[7]  - s[13]*s[3]*s[6];\r\n  inv[6]  = - s[0]*s[6]*s[15] + s[0] *s[7]*s[14] + s[4] *s[2]*s[15]\r\n            - s[4]*s[3]*s[14] - s[12]*s[2]*s[7]  + s[12]*s[3]*s[6];\r\n  inv[10] =   s[0]*s[5]*s[15] - s[0] *s[7]*s[13] - s[4] *s[1]*s[15]\r\n            + s[4]*s[3]*s[13] + s[12]*s[1]*s[7]  - s[12]*s[3]*s[5];\r\n  inv[14] = - s[0]*s[5]*s[14] + s[0] *s[6]*s[13] + s[4] *s[1]*s[14]\r\n            - s[4]*s[2]*s[13] - s[12]*s[1]*s[6]  + s[12]*s[2]*s[5];\r\n\r\n  inv[3]  = - s[1]*s[6]*s[11] + s[1]*s[7]*s[10] + s[5]*s[2]*s[11]\r\n            - s[5]*s[3]*s[10] - s[9]*s[2]*s[7]  + s[9]*s[3]*s[6];\r\n  inv[7]  =   s[0]*s[6]*s[11] - s[0]*s[7]*s[10] - s[4]*s[2]*s[11]\r\n            + s[4]*s[3]*s[10] + s[8]*s[2]*s[7]  - s[8]*s[3]*s[6];\r\n  inv[11] = - s[0]*s[5]*s[11] + s[0]*s[7]*s[9]  + s[4]*s[1]*s[11]\r\n            - s[4]*s[3]*s[9]  - s[8]*s[1]*s[7]  + s[8]*s[3]*s[5];\r\n  inv[15] =   s[0]*s[5]*s[10] - s[0]*s[6]*s[9]  - s[4]*s[1]*s[10]\r\n            + s[4]*s[2]*s[9]  + s[8]*s[1]*s[6]  - s[8]*s[2]*s[5];\r\n\r\n  det = s[0]*inv[0] + s[1]*inv[4] + s[2]*inv[8] + s[3]*inv[12];\r\n  if (det === 0) {\r\n    return this;\r\n  }\r\n\r\n  det = 1 / det;\r\n  for (i = 0; i < 16; i++) {\r\n    d[i] = inv[i] * det;\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Calculate the inverse matrix of this, and set to this.\r\n * @return this\r\n */\r\nMatrix4.prototype.invert = function() {\r\n  return this.setInverseOf(this);\r\n};\r\n\r\n/**\r\n * Set the orthographic projection matrix.\r\n * @param left The coordinate of the left of clipping plane.\r\n * @param right The coordinate of the right of clipping plane.\r\n * @param bottom The coordinate of the bottom of clipping plane.\r\n * @param top The coordinate of the top top clipping plane.\r\n * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n * @return this\r\n */\r\nMatrix4.prototype.setOrtho = function(left, right, bottom, top, near, far) {\r\n  var e, rw, rh, rd;\r\n\r\n  if (left === right || bottom === top || near === far) {\r\n    throw 'null frustum';\r\n  }\r\n\r\n  rw = 1 / (right - left);\r\n  rh = 1 / (top - bottom);\r\n  rd = 1 / (far - near);\r\n\r\n  e = this.elements;\r\n\r\n  e[0]  = 2 * rw;\r\n  e[1]  = 0;\r\n  e[2]  = 0;\r\n  e[3]  = 0;\r\n\r\n  e[4]  = 0;\r\n  e[5]  = 2 * rh;\r\n  e[6]  = 0;\r\n  e[7]  = 0;\r\n\r\n  e[8]  = 0;\r\n  e[9]  = 0;\r\n  e[10] = -2 * rd;\r\n  e[11] = 0;\r\n\r\n  e[12] = -(right + left) * rw;\r\n  e[13] = -(top + bottom) * rh;\r\n  e[14] = -(far + near) * rd;\r\n  e[15] = 1;\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the orthographic projection matrix from the right.\r\n * @param left The coordinate of the left of clipping plane.\r\n * @param right The coordinate of the right of clipping plane.\r\n * @param bottom The coordinate of the bottom of clipping plane.\r\n * @param top The coordinate of the top top clipping plane.\r\n * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n * @return this\r\n */\r\nMatrix4.prototype.ortho = function(left, right, bottom, top, near, far) {\r\n  return this.concat(new Matrix4().setOrtho(left, right, bottom, top, near, far));\r\n};\r\n\r\n/**\r\n * Set the perspective projection matrix.\r\n * @param left The coordinate of the left of clipping plane.\r\n * @param right The coordinate of the right of clipping plane.\r\n * @param bottom The coordinate of the bottom of clipping plane.\r\n * @param top The coordinate of the top top clipping plane.\r\n * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n * @return this\r\n */\r\nMatrix4.prototype.setFrustum = function(left, right, bottom, top, near, far) {\r\n  var e, rw, rh, rd;\r\n\r\n  if (left === right || top === bottom || near === far) {\r\n    throw 'null frustum';\r\n  }\r\n  if (near <= 0) {\r\n    throw 'near <= 0';\r\n  }\r\n  if (far <= 0) {\r\n    throw 'far <= 0';\r\n  }\r\n\r\n  rw = 1 / (right - left);\r\n  rh = 1 / (top - bottom);\r\n  rd = 1 / (far - near);\r\n\r\n  e = this.elements;\r\n\r\n  e[ 0] = 2 * near * rw;\r\n  e[ 1] = 0;\r\n  e[ 2] = 0;\r\n  e[ 3] = 0;\r\n\r\n  e[ 4] = 0;\r\n  e[ 5] = 2 * near * rh;\r\n  e[ 6] = 0;\r\n  e[ 7] = 0;\r\n\r\n  e[ 8] = (right + left) * rw;\r\n  e[ 9] = (top + bottom) * rh;\r\n  e[10] = -(far + near) * rd;\r\n  e[11] = -1;\r\n\r\n  e[12] = 0;\r\n  e[13] = 0;\r\n  e[14] = -2 * near * far * rd;\r\n  e[15] = 0;\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the perspective projection matrix from the right.\r\n * @param left The coordinate of the left of clipping plane.\r\n * @param right The coordinate of the right of clipping plane.\r\n * @param bottom The coordinate of the bottom of clipping plane.\r\n * @param top The coordinate of the top top clipping plane.\r\n * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n * @return this\r\n */\r\nMatrix4.prototype.frustum = function(left, right, bottom, top, near, far) {\r\n  return this.concat(new Matrix4().setFrustum(left, right, bottom, top, near, far));\r\n};\r\n\r\n/**\r\n * Set the perspective projection matrix by fovy and aspect.\r\n * @param fovy The angle between the upper and lower sides of the frustum.\r\n * @param aspect The aspect ratio of the frustum. (width/height)\r\n * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n * @return this\r\n */\r\nMatrix4.prototype.setPerspective = function(fovy, aspect, near, far) {\r\n  var e, rd, s, ct;\r\n\r\n  if (near === far || aspect === 0) {\r\n    throw 'null frustum';\r\n  }\r\n  if (near <= 0) {\r\n    throw 'near <= 0';\r\n  }\r\n  if (far <= 0) {\r\n    throw 'far <= 0';\r\n  }\r\n\r\n  fovy = Math.PI * fovy / 180 / 2;\r\n  s = Math.sin(fovy);\r\n  if (s === 0) {\r\n    throw 'null frustum';\r\n  }\r\n\r\n  rd = 1 / (far - near);\r\n  ct = Math.cos(fovy) / s;\r\n\r\n  e = this.elements;\r\n\r\n  e[0]  = ct / aspect;\r\n  e[1]  = 0;\r\n  e[2]  = 0;\r\n  e[3]  = 0;\r\n\r\n  e[4]  = 0;\r\n  e[5]  = ct;\r\n  e[6]  = 0;\r\n  e[7]  = 0;\r\n\r\n  e[8]  = 0;\r\n  e[9]  = 0;\r\n  e[10] = -(far + near) * rd;\r\n  e[11] = -1;\r\n\r\n  e[12] = 0;\r\n  e[13] = 0;\r\n  e[14] = -2 * near * far * rd;\r\n  e[15] = 0;\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the perspective projection matrix from the right.\r\n * @param fovy The angle between the upper and lower sides of the frustum.\r\n * @param aspect The aspect ratio of the frustum. (width/height)\r\n * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n * @return this\r\n */\r\nMatrix4.prototype.perspective = function(fovy, aspect, near, far) {\r\n  return this.concat(new Matrix4().setPerspective(fovy, aspect, near, far));\r\n};\r\n\r\n/**\r\n * Set the matrix for scaling.\r\n * @param x The scale factor along the X axis\r\n * @param y The scale factor along the Y axis\r\n * @param z The scale factor along the Z axis\r\n * @return this\r\n */\r\nMatrix4.prototype.setScale = function(x, y, z) {\r\n  var e = this.elements;\r\n  e[0] = x;  e[4] = 0;  e[8]  = 0;  e[12] = 0;\r\n  e[1] = 0;  e[5] = y;  e[9]  = 0;  e[13] = 0;\r\n  e[2] = 0;  e[6] = 0;  e[10] = z;  e[14] = 0;\r\n  e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the matrix for scaling from the right.\r\n * @param x The scale factor along the X axis\r\n * @param y The scale factor along the Y axis\r\n * @param z The scale factor along the Z axis\r\n * @return this\r\n */\r\nMatrix4.prototype.scale = function(x, y, z) {\r\n  var e = this.elements;\r\n  e[0] *= x;  e[4] *= y;  e[8]  *= z;\r\n  e[1] *= x;  e[5] *= y;  e[9]  *= z;\r\n  e[2] *= x;  e[6] *= y;  e[10] *= z;\r\n  e[3] *= x;  e[7] *= y;  e[11] *= z;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set the matrix for translation.\r\n * @param x The X value of a translation.\r\n * @param y The Y value of a translation.\r\n * @param z The Z value of a translation.\r\n * @return this\r\n */\r\nMatrix4.prototype.setTranslate = function(x, y, z) {\r\n  var e = this.elements;\r\n  e[0] = 1;  e[4] = 0;  e[8]  = 0;  e[12] = x;\r\n  e[1] = 0;  e[5] = 1;  e[9]  = 0;  e[13] = y;\r\n  e[2] = 0;  e[6] = 0;  e[10] = 1;  e[14] = z;\r\n  e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the matrix for translation from the right.\r\n * @param x The X value of a translation.\r\n * @param y The Y value of a translation.\r\n * @param z The Z value of a translation.\r\n * @return this\r\n */\r\nMatrix4.prototype.translate = function(x, y, z) {\r\n  var e = this.elements;\r\n  e[12] += e[0] * x + e[4] * y + e[8]  * z;\r\n  e[13] += e[1] * x + e[5] * y + e[9]  * z;\r\n  e[14] += e[2] * x + e[6] * y + e[10] * z;\r\n  e[15] += e[3] * x + e[7] * y + e[11] * z;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set the matrix for rotation.\r\n * The vector of rotation axis may not be normalized.\r\n * @param angle The angle of rotation (degrees)\r\n * @param x The X coordinate of vector of rotation axis.\r\n * @param y The Y coordinate of vector of rotation axis.\r\n * @param z The Z coordinate of vector of rotation axis.\r\n * @return this\r\n */\r\nMatrix4.prototype.setRotate = function(angle, x, y, z) {\r\n  var e, s, c, len, rlen, nc, xy, yz, zx, xs, ys, zs;\r\n\r\n  angle = Math.PI * angle / 180;\r\n  e = this.elements;\r\n\r\n  s = Math.sin(angle);\r\n  c = Math.cos(angle);\r\n\r\n  if (0 !== x && 0 === y && 0 === z) {\r\n    // Rotation around X axis\r\n    if (x < 0) {\r\n      s = -s;\r\n    }\r\n    e[0] = 1;  e[4] = 0;  e[ 8] = 0;  e[12] = 0;\r\n    e[1] = 0;  e[5] = c;  e[ 9] =-s;  e[13] = 0;\r\n    e[2] = 0;  e[6] = s;  e[10] = c;  e[14] = 0;\r\n    e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n  } else if (0 === x && 0 !== y && 0 === z) {\r\n    // Rotation around Y axis\r\n    if (y < 0) {\r\n      s = -s;\r\n    }\r\n    e[0] = c;  e[4] = 0;  e[ 8] = s;  e[12] = 0;\r\n    e[1] = 0;  e[5] = 1;  e[ 9] = 0;  e[13] = 0;\r\n    e[2] =-s;  e[6] = 0;  e[10] = c;  e[14] = 0;\r\n    e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n  } else if (0 === x && 0 === y && 0 !== z) {\r\n    // Rotation around Z axis\r\n    if (z < 0) {\r\n      s = -s;\r\n    }\r\n    e[0] = c;  e[4] =-s;  e[ 8] = 0;  e[12] = 0;\r\n    e[1] = s;  e[5] = c;  e[ 9] = 0;  e[13] = 0;\r\n    e[2] = 0;  e[6] = 0;  e[10] = 1;  e[14] = 0;\r\n    e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n  } else {\r\n    // Rotation around another axis\r\n    len = Math.sqrt(x*x + y*y + z*z);\r\n    if (len !== 1) {\r\n      rlen = 1 / len;\r\n      x *= rlen;\r\n      y *= rlen;\r\n      z *= rlen;\r\n    }\r\n    nc = 1 - c;\r\n    xy = x * y;\r\n    yz = y * z;\r\n    zx = z * x;\r\n    xs = x * s;\r\n    ys = y * s;\r\n    zs = z * s;\r\n\r\n    e[ 0] = x*x*nc +  c;\r\n    e[ 1] = xy *nc + zs;\r\n    e[ 2] = zx *nc - ys;\r\n    e[ 3] = 0;\r\n\r\n    e[ 4] = xy *nc - zs;\r\n    e[ 5] = y*y*nc +  c;\r\n    e[ 6] = yz *nc + xs;\r\n    e[ 7] = 0;\r\n\r\n    e[ 8] = zx *nc + ys;\r\n    e[ 9] = yz *nc - xs;\r\n    e[10] = z*z*nc +  c;\r\n    e[11] = 0;\r\n\r\n    e[12] = 0;\r\n    e[13] = 0;\r\n    e[14] = 0;\r\n    e[15] = 1;\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Multiply the matrix for rotation from the right.\r\n * The vector of rotation axis may not be normalized.\r\n * @param angle The angle of rotation (degrees)\r\n * @param x The X coordinate of vector of rotation axis.\r\n * @param y The Y coordinate of vector of rotation axis.\r\n * @param z The Z coordinate of vector of rotation axis.\r\n * @return this\r\n */\r\nMatrix4.prototype.rotate = function(angle, x, y, z) {\r\n  return this.concat(new Matrix4().setRotate(angle, x, y, z));\r\n};\r\n\r\n/**\r\n * Set the viewing matrix.\r\n * @param eyeX, eyeY, eyeZ The position of the eye point.\r\n * @param centerX, centerY, centerZ The position of the reference point.\r\n * @param upX, upY, upZ The direction of the up vector.\r\n * @return this\r\n */\r\nMatrix4.prototype.setLookAt = function(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ) {\r\n  var e, fx, fy, fz, rlf, sx, sy, sz, rls, ux, uy, uz;\r\n\r\n  fx = centerX - eyeX;\r\n  fy = centerY - eyeY;\r\n  fz = centerZ - eyeZ;\r\n\r\n  // Normalize f.\r\n  rlf = 1 / Math.sqrt(fx*fx + fy*fy + fz*fz);\r\n  fx *= rlf;\r\n  fy *= rlf;\r\n  fz *= rlf;\r\n\r\n  // Calculate cross product of f and up.\r\n  sx = fy * upZ - fz * upY;\r\n  sy = fz * upX - fx * upZ;\r\n  sz = fx * upY - fy * upX;\r\n\r\n  // Normalize s.\r\n  rls = 1 / Math.sqrt(sx*sx + sy*sy + sz*sz);\r\n  sx *= rls;\r\n  sy *= rls;\r\n  sz *= rls;\r\n\r\n  // Calculate cross product of s and f.\r\n  ux = sy * fz - sz * fy;\r\n  uy = sz * fx - sx * fz;\r\n  uz = sx * fy - sy * fx;\r\n\r\n  // Set to this.\r\n  e = this.elements;\r\n  e[0] = sx;\r\n  e[1] = ux;\r\n  e[2] = -fx;\r\n  e[3] = 0;\r\n\r\n  e[4] = sy;\r\n  e[5] = uy;\r\n  e[6] = -fy;\r\n  e[7] = 0;\r\n\r\n  e[8] = sz;\r\n  e[9] = uz;\r\n  e[10] = -fz;\r\n  e[11] = 0;\r\n\r\n  e[12] = 0;\r\n  e[13] = 0;\r\n  e[14] = 0;\r\n  e[15] = 1;\r\n\r\n  // Translate.\r\n  return this.translate(-eyeX, -eyeY, -eyeZ);\r\n};\r\n\r\n/**\r\n * Multiply the viewing matrix from the right.\r\n * @param eyeX, eyeY, eyeZ The position of the eye point.\r\n * @param centerX, centerY, centerZ The position of the reference point.\r\n * @param upX, upY, upZ The direction of the up vector.\r\n * @return this\r\n */\r\nMatrix4.prototype.lookAt = function(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ) {\r\n  return this.concat(new Matrix4().setLookAt(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ));\r\n};\r\n\r\n/**\r\n * Multiply the matrix for project vertex to plane from the right.\r\n * @param plane The array[A, B, C, D] of the equation of plane \"Ax + By + Cz + D = 0\".\r\n * @param light The array which stored coordinates of the light. if light[3]=0, treated as parallel light.\r\n * @return this\r\n */\r\nMatrix4.prototype.dropShadow = function(plane, light) {\r\n  var mat = new Matrix4();\r\n  var e = mat.elements;\r\n\r\n  var dot = plane[0] * light[0] + plane[1] * light[1] + plane[2] * light[2] + plane[3] * light[3];\r\n\r\n  e[ 0] = dot - light[0] * plane[0];\r\n  e[ 1] =     - light[1] * plane[0];\r\n  e[ 2] =     - light[2] * plane[0];\r\n  e[ 3] =     - light[3] * plane[0];\r\n\r\n  e[ 4] =     - light[0] * plane[1];\r\n  e[ 5] = dot - light[1] * plane[1];\r\n  e[ 6] =     - light[2] * plane[1];\r\n  e[ 7] =     - light[3] * plane[1];\r\n\r\n  e[ 8] =     - light[0] * plane[2];\r\n  e[ 9] =     - light[1] * plane[2];\r\n  e[10] = dot - light[2] * plane[2];\r\n  e[11] =     - light[3] * plane[2];\r\n\r\n  e[12] =     - light[0] * plane[3];\r\n  e[13] =     - light[1] * plane[3];\r\n  e[14] =     - light[2] * plane[3];\r\n  e[15] = dot - light[3] * plane[3];\r\n\r\n  return this.concat(mat);\r\n}\r\n\r\n/**\r\n * Multiply the matrix for project vertex to plane from the right.(Projected by parallel light.)\r\n * @param normX, normY, normZ The normal vector of the plane.(Not necessary to be normalized.)\r\n * @param planeX, planeY, planeZ The coordinate of arbitrary points on a plane.\r\n * @param lightX, lightY, lightZ The vector of the direction of light.(Not necessary to be normalized.)\r\n * @return this\r\n */\r\nMatrix4.prototype.dropShadowDirectionally = function(normX, normY, normZ, planeX, planeY, planeZ, lightX, lightY, lightZ) {\r\n  var a = planeX * normX + planeY * normY + planeZ * normZ;\r\n  return this.dropShadow([normX, normY, normZ, -a], [lightX, lightY, lightZ, 0]);\r\n};\r\n\r\n/**\r\n * Constructor of Vector2\r\n * If opt_src is specified, new vector is initialized by opt_src.\r\n * @param opt_src source vector(option)\r\n */\r\n var Vector2 = function(opt_src) {\r\n  var v = new Float32Array(2);\r\n  if (opt_src && typeof opt_src === 'object') {\r\n    v[0] = opt_src[0]; v[1] = opt_src[1]; \r\n  }\r\n  this.elements = v;\r\n}\r\n\r\n/**\r\n  * Normalize Vector2.\r\n  * @return this\r\n  */\r\nVector2.prototype.normalize = function() {\r\n  var v = this.elements;\r\n  var c = v[0], d = v[1], g = Math.sqrt(c*c+d*d);\r\n  if(g) {\r\n    if(g == 1)\r\n      return this;\r\n  } else {\r\n    v[0] = 0; v[1] = 0; \r\n    return this;\r\n  }\r\n  g = 1/g;\r\n  v[0] = c*g; v[1] = d*g; \r\n  return this;\r\n};\r\n\r\n/**\r\n  * Vector2 length.\r\n  * @return Length of the vector\r\n  */\r\nVector2.prototype.length = function() {\r\n  var v = this.elements;\r\n  return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2));\r\n}\r\n\r\n\r\n/**\r\n * Constructor of Vector3\r\n * If opt_src is specified, new vector is initialized by opt_src.\r\n * @param opt_src source vector(option)\r\n */\r\nvar Vector3 = function(opt_src) {\r\n  var v = new Float32Array(3);\r\n  if (opt_src && typeof opt_src === 'object') {\r\n    v[0] = opt_src[0]; v[1] = opt_src[1]; v[2] = opt_src[2];\r\n  }\r\n  this.elements = v;\r\n}\r\n\r\n/**\r\n  * Normalize.\r\n  * @return this\r\n  */\r\nVector3.prototype.normalize = function() {\r\n  var v = this.elements;\r\n  var c = v[0], d = v[1], e = v[2], g = Math.sqrt(c*c+d*d+e*e);\r\n  if(g){\r\n    if(g == 1)\r\n        return this;\r\n   } else {\r\n     v[0] = 0; v[1] = 0; v[2] = 0;\r\n     return this;\r\n   }\r\n   g = 1/g;\r\n   v[0] = c*g; v[1] = d*g; v[2] = e*g;\r\n   return this;\r\n};\r\n\r\n/**\r\n  * Vector length.\r\n  * @return Length of the vector\r\n  */\r\nVector3.prototype.length = function() {\r\n  var v = this.elements;\r\n\r\n  return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2) + Math.pow(v[2], 2));\r\n}\r\n\r\n/**\r\n * Constructor of Vector4\r\n * If opt_src is specified, new vector is initialized by opt_src.\r\n * @param opt_src source vector(option)\r\n */\r\nvar Vector4 = function(opt_src) {\r\n  var v = new Float32Array(4);\r\n  if (opt_src && typeof opt_src === 'object') {\r\n    v[0] = opt_src[0]; v[1] = opt_src[1]; v[2] = opt_src[2]; v[3] = opt_src[3];\r\n  }\r\n  this.elements = v;\r\n}\r\n\r\n/**\r\n * Vector subtract\r\n * @param other source vector\r\n */\r\nvar subtract = function(other) {\r\n  if (other.elements.length != this.elements.length) {\r\n    return null;\r\n  }\r\n  return this.elements.map( (e, i) => e - other.elements[i]);\r\n}\r\n\r\n/**\r\n * Vector add\r\n * @param other source vector\r\n */\r\n var add = function(other) {\r\n  if (other.elements.length != this.elements.length) {\r\n    return null;\r\n  }\r\n  return this.elements.map( (e, i) => e + other.elements[i]);\r\n}\r\n\r\n/**\r\n * Vector scalar\r\n * @param scalar \r\n */\r\n var scale = function(scalar) {\r\n  let results = this.elements.map( e => e * scalar);\r\n  return results;\r\n}\r\n\r\nVector2.prototype.subtract = function(other) {\r\n  const result = subtract.call(this, other);\r\n  return new Vector2(result);\r\n}\r\n\r\nVector3.prototype.subtract = function(other) {\r\n  const result = subtract.call(this, other);\r\n  return new Vector3(result);\r\n}\r\n\r\nVector4.prototype.subtract = function(other) {\r\n  const result = subtract.call(this, other);\r\n  return new Vector4(result);\r\n}\r\n\r\nVector2.prototype.add = function(other) {\r\n  const result = add.call(this, other);\r\n  return new Vector2(result);\r\n}\r\n\r\nVector3.prototype.add = function(other) {\r\n  const result = add.call(this, other);\r\n  return new Vector3(result);\r\n}\r\n\r\nVector4.prototype.add = function(other) {\r\n  const result = add.call(this, other);\r\n  return new Vector4(result);\r\n}\r\n\r\nVector2.prototype.scale = function(other) {\r\n  const result = scale.call(this, other);\r\n  return new Vector2(result);\r\n}\r\n\r\nVector3.prototype.scale = function(other) {\r\n  const result = scale.call(this, other);\r\n  return new Vector3(result);\r\n}\r\n\r\nVector4.prototype.scale = function(other) {\r\n  const result = scale.call(this, other);\r\n  return new Vector4(result);\r\n}\r\n\r\nexport default Matrix4;\r\nexport {\r\n  Vector4,\r\n  Vector3,\r\n  Vector2\r\n}\r\n","import Matrix4 from \"src/WebGL/lib/cuon-matrix.js\";\n\n/**\n * Base class for a geometric object.\n *\n * @author \"Xiaoxuan Zhang\"\n * @this {Geometry}\n */\nclass Geometry {\n  /**\n   * Constructor for Geometry.\n   *\n   * @constructor\n   */\n  constructor() {\n    this.vertices = []; // an array of vertices with coordinates of x,y,z\n    this.normals = []; //the corresponding normals to each vertex\n    this.UVs = []; //the corresponding UV to each vertex\n    this.indices = [];\n    this.tangents = [];\n    this.modelMatrix = new Matrix4(); // Model matrix applied to geometric object\n    this.normalMatrix = new Matrix4();\n    this.buffer = {};\n    this.attributes = {}; // List of attributes that might be including color, position...\n    this.translateValue = [0.0, 0.0, 0.0];\n    this.scaleValue = [1.0, 1.0, 1.0];\n    this.rotation = 0.0;\n    this.rotationAxis = [0, 0, 1];\n    this.autoRotate = false;\n    this.angle = 0.0;\n    this.visible = true;\n    this.material = null;\n    \n    this.now = performance.now();\n  }\n\n  addMaterial(materialObj) {\n    this.material = materialObj;\n  }\n\n  setBuffer(name, buffer, dataCount) {\n    this.buffer[name] = {buffer: buffer, dataCount: dataCount, binded: true};\n  }\n\n  /**\n   * Add attributes to this geometry\n   *\n   * @public\n   * @param {String} name attribute name\n   * @param {Object} value an object containing the value of this attribute\n   * @param {int} elements the number of elements to read every time\n   */\n  addAttributes(name, value, elements) {\n    let attr = {}\n    attr.value = value;\n    attr.elements = elements;\n    this.attributes[name] = attr;\n  }\n\n  translate(coords) {\n    this.translateValue = coords;\n  }\n\n  scale(scale) {\n    this.scaleValue = scale;\n  }\n\n  rotate(degree, axis) {\n    this.rotation = degree;\n    this.rotationAxis = axis;\n  }\n\n  /**\n   * Responsible for updating the geometry's modelMatrix for animation.\n   * Does nothing for non-animating geometry.\n   */\n   updateAnimation() {\n    this.modelMatrix.setTranslate(this.translateValue[0], this.translateValue[1], this.translateValue[2]);\n    this.modelMatrix.scale(this.scaleValue[0], this.scaleValue[1], this.scaleValue[2]);\n\n    if (this.autoRotate) {\n      var elapsed = performance.now() - this.now;\n      this.now = performance.now();\n      this.angle += (10 * elapsed) / 1000.0;\n      this.angle %= 360;\n      this.modelMatrix.rotate(this.angle, this.rotationAxis[0], this.rotationAxis[1], this.rotationAxis[2]);\n    } else {\n      this.modelMatrix.rotate(this.rotation, this.rotationAxis[0], this.rotationAxis[1], this.rotationAxis[2]);\n    }\n    this.normalMatrix.setInverseOf(this.modelMatrix);\n    this.normalMatrix.transpose();\n  }\n\n}\n\nexport default Geometry;\n","import Geometry from \"src/WebGL/geometries/geometry.js\";\n\n/**\n * Specifies a Square. A subclass of Geometry.\n *\n * @author \"Zhang Xiaoxuan\"\n * @this {Square}\n */\nclass Square extends Geometry {\n  /**\n   * Constructor for Square.\n   *\n   * @constructor\n   */\n  constructor() {\n    // Recommendations: Remember that Square is a subclass of Geometry.\n    // \"super\" keyword can come in handy when minimizing code reuse.\n    super();\n    this.generateSquareVertices();\n  }\n\n  /**\n   * Generates the vertices of the square.\n   *\n   * @private Generate a unit square\n   */\n  generateSquareVertices() {\n      this.vertices = [-1.0, -1.0, 0.0,\n                       1.0, -1.0, 0.0,\n                       1.0, 1.0, 0.0,\n                       1.0, 1.0, 0.0,\n                       -1.0, 1.0, 0.0,\n                       -1.0, -1.0, 0.0];\n      this.UVs = [0.0, 0.0,\n                  1.0, 0.0,\n                  1.0, 1.0,\n                  1.0, 1.0,\n                  0.0, 1.0,\n                  0.0, 0.0];\n      this.normals = [0, 0, 1,\n                      0, 0, 1,\n                      0, 0, 1,\n                      0, 0, 1,\n                      0, 0, 1,\n                      0, 0, 1]\n  }\n\n}\n\nexport default Square;","import * as  WebGLUtils from 'src/WebGL/lib/webgl-utils';\nimport * as WebGLFunc from 'src/WebGL/lib/webglFunctions.js';\nimport Material from \"src/WebGL/material.js\";\nimport Square from \"src/WebGL/geometries/square.js\";\nimport finalPassShader from \"src/WebGL/shaders/finalPass.js\";\n\n/**\n * A renderer that manages webgl resources\n *\n * @author \"Xiaoxuan Zhang\"\n * @this {Renderer}\n */\nclass Renderer {\n  constructor(divId) {\n    this.divId = divId;\n    this.gl = null;\n    // Resources\n    this.shaderProgram = {};\n    this.models = {};\n    this.framebuffer = {};\n    this.scene = null;\n    this.camera = null;\n    this.final = null;\n    this.multiPassEnabled = false;\n    this.frameBufferTexture = {};\n    this.fogNear = 0.1,\n    this.fogFar = 20.0;\n    this.fogAmount = 0.5;\n    this.fogColor = [255, 255, 255];\n    this.isMousedown = false;\n    this.lastMouse = [0.0, 0.0];\n    this.deltaMouse = [0.0, 0.0];\n    this.mousePos = [0.0, 0.0];\n\n    this.domElement = document.getElementById(divId);\n    if (!this.domElement) {\n      console.log('Fail to retrieve canvas element');\n      return false;\n    }\n    \n    this.gl = WebGLUtils.getWebGLContext(this.domElement, true);\n    if (!this.gl) {\n      console.log('Failed to get the webgl context');\n      return false;\n    }\n    this._initFramebuffers();\n    this._initEventHandelers();\n  }\n\n  init(scene, camera) {\n    this.scene = scene;\n    this.camera = camera;\n    this._initWebGLContext();\n    this._createTextures();\n    this._compileShaders();\n    this._createFinalSquad();\n    this._createBufferData();\n    this.resizeCanvas();\n  }\n\n  setFog(near, far, fogAmount, fogColor) {\n    this.fogNear = near,\n    this.fogFar = far;\n    this.fogAmount = fogAmount;\n    this.fogColor = fogColor;\n  }\n\n  resizeCanvas() {\n    const gl = this.gl;\n    let realToCSSPixels = window.devicePixelRatio;\n    // Lookup the size the browser is displaying the canvas in CSS pixels\n    // and compute a size needed to make our drawingbuffer match it in\n    // device pixels.\n    let displayWidth  = Math.floor(gl.canvas.clientWidth  * realToCSSPixels);\n    let displayHeight = Math.floor(gl.canvas.clientHeight * realToCSSPixels);\n\n    // Check if the canvas is not the same size.\n    if (gl.canvas.width  != displayWidth ||\n        gl.canvas.height != displayHeight) {\n\n      // Make the canvas the same size\n      gl.canvas.width  = displayWidth;\n      gl.canvas.height = displayHeight;\n    }\n    //console.log(gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    if (this.camera) {\n      this.camera.setAspectRatio(gl.canvas.clientWidth / gl.canvas.clientHeight);\n    }\n    this._updateRenderTexture();\n\n  }\n  \n  setMultiPass(enabled) {\n    this.multiPassEnabled = enabled;\n  }\n\n  render() {\n    const gl = this.gl;\n\n    // Update animations\n    this.scene.updateAnimation()\n    this.camera.updateAnimation();\n    \n    //first pass : render to framebuffer\n    if (this.multiPassEnabled) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer['first']);\n    } else {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    \n    this.scene.geometries.forEach( geo => {\n      this._renderObject(geo);\n    })\n    \n    gl.flush();\n    \n    if (this.scene.skybox) {\n      gl.disable(gl.CULL_FACE);\n      gl.depthFunc(gl.LEQUAL);\n      this._renderObject(this.scene.skybox);\n      gl.depthFunc(gl.LESS);\n      gl.enable(gl.CULL_FACE);\n    }\n\n    //Second pass : render to scene\n    if (this.multiPassEnabled) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n      this._renderObject(this.final);\n    }\n\n  }\n\n  _initWebGLContext() {\n    const gl = this.gl;\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.clearColor(0.5, 0.5, 0.5, 1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.DEPTH_TEST);\n    gl.enable(gl.CULL_FACE);\n    gl.frontFace(gl.CCW);\n  }\n  \n  _initFramebuffers() {\n    // Create and bind the framebuffer\n    const gl = this.gl;\n    let fb0 = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb0);\n    this.framebuffer['first'] = fb0;\n  \n    let colorTexture = WebGLFunc.createNullTexture(gl, gl.canvas.width, gl.canvas.height, gl.RGBA, gl.RGBA, 0, gl.UNSIGNED_BYTE, gl.NEAREST, gl.NEAREST, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE);\n    let depthTexture = WebGLFunc.createNullTexture(gl, gl.canvas.width, gl.canvas.height, gl.DEPTH_COMPONENT24, gl.DEPTH_COMPONENT, 0, gl.UNSIGNED_INT, gl.NEAREST, gl.NEAREST, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE);\n    \n    // Save to resources\n    this.frameBufferTexture['color'] = colorTexture;\n    this.frameBufferTexture['depth'] = depthTexture;\n\n    // set the texture as the first color attachment\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, colorTexture, 0);\n    // set the texture as the depth attachment\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthTexture, 0);\n  \n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  _updateRenderTexture() {\n    const gl = this.gl;\n    if ('color' in this.frameBufferTexture) {\n      WebGLFunc.updateNullTexture(gl, this.frameBufferTexture['color'], gl.canvas.width, gl.canvas.height, gl.RGBA, gl.RGBA, 0, gl.UNSIGNED_BYTE, gl.NEAREST, gl.NEAREST, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE);\n    }\n    if ('depth' in this.frameBufferTexture) {\n      WebGLFunc.updateNullTexture(gl, this.frameBufferTexture['depth'], gl.canvas.width, gl.canvas.height, gl.DEPTH_COMPONENT24, gl.DEPTH_COMPONENT, 0, gl.UNSIGNED_INT, gl.NEAREST, gl.NEAREST, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE);\n    }\n  }\n\n  _initEventHandelers() {\n    // Mouse drag\n    const canvas = this.domElement;\n    canvas.onmouseup = ev => {\n      this.isMousedown = false;\n    };\n    canvas.onmousedown = ev => {\n      this.isMousedown = true;\n      this._handleMouseClick(ev)\n    };\n    canvas.onmousemove = ev => {\n      if (this.isMousedown) {\n        this._handleMouseClick(ev);\n      } else {\n        let x = ev.clientX;\n        let y = ev.clientY;\n        let rect = ev.target.getBoundingClientRect();\n        x = (x - rect.left) * 2.0/canvas.width - 1.0;\n        y = (y - rect.top) * -2.0/canvas.height + 1.0;\n        this.lastMouse = [x, y];\n      }\n    };\n\n    // Camera movement with keyboard\n    document.addEventListener('keydown', (ev) => {\n      if (this.camera) {\n        if(ev.key == 'w') {\n          this.camera.move(\"forward\");\n        } else if (ev.key == 's') {\n          this.camera.move(\"backward\");\n        } else if (ev.key == 'a') {\n          this.camera.move(\"right\");\n        } else if (ev.key == 'd'){\n          this.camera.move(\"left\");\n        } else if (ev.key == 'i'){\n          this.camera.rotate(\"up\");\n        } else if (ev.key == 'k'){\n          this.camera.rotate(\"down\");\n        } else if (ev.key == 'j'){\n          this.camera.rotate(\"left\");\n        } else if (ev.key == 'l'){\n          this.camera.rotate(\"right\");\n        } else { return; } // Prevent the unnecessary drawing\n      }\n    });\n  }\n\n  _handleMouseClick(ev) {\n    const canvas = this.domElement;\n    let x = ev.clientX;\n    let y = ev.clientY;\n    let rect = ev.target.getBoundingClientRect();\n    x = (x - rect.left) * 2.0/canvas.width - 1.0;\n    y = (y - rect.top) * -2.0/canvas.height + 1.0;\n    let deltaMouse = [];\n    deltaMouse[0] = x - this.lastMouse[0];\n    deltaMouse[1] = y - this.lastMouse[1];\n    this.lastMouse = [x, y];\n    this.mousePos = [ev.clientX, rect.height - ev.clientY];\n    this.camera.rotateWithMouse(deltaMouse[0], deltaMouse[1]);\n  }\n\n  _createBufferData() {\n    this.scene.geometries.forEach( geo => {\n      WebGLUtils.useShader(this.gl, geo.material.shaderProgram);\n      geo.setBuffer('Vertices', WebGLFunc.createBufferData(this.gl, new Float32Array(geo.vertices)), 3);\n      geo.setBuffer('UVs', WebGLFunc.createBufferData(this.gl, new Float32Array(geo.UVs)), 2);\n      geo.setBuffer('Normals', WebGLFunc.createBufferData(this.gl, new Float32Array(geo.normals)), 3);\n      \n      if (geo.indices.length > 0) {\n        geo.setBuffer('Indices', WebGLFunc.createElementArrayBuffer(this.gl, new Uint16Array(geo.indices)), 3);\n      }\n      if (geo.tangents.length > 0) {\n        geo.setBuffer('Tangents', WebGLFunc.createBufferData(this.gl, new Float32Array(geo.tangents)), 3);\n      }\n    });\n\n    if (this.scene.skybox) {\n      const skybox = this.scene.skybox;\n      WebGLUtils.useShader(this.gl, skybox.material.shaderProgram);\n      skybox.setBuffer('Vertices', WebGLFunc.createBufferData(this.gl, new Float32Array(skybox.vertices)), 3);\n      skybox.setBuffer('UVs', WebGLFunc.createBufferData(this.gl, new Float32Array(skybox.UVs)), 2);\n      skybox.setBuffer('Normals', WebGLFunc.createBufferData(this.gl, new Float32Array(skybox.normals)), 3);\n    }\n  }\n  \n  _compileShaders() {\n    this.scene.geometries.forEach( geo => {\n      const { vertex, fragment } = geo.material.shaders;\n      geo.material.shaderProgram = WebGLUtils.createShader(this.gl, vertex, fragment);\n    });\n\n    if (this.scene.skybox) {\n      const skybox = this.scene.skybox;\n      const { vertex, fragment } = skybox.material.shaders;\n      skybox.material.shaderProgram = WebGLUtils.createShader(this.gl, vertex, fragment);\n    }\n  }\n\n  _createTextures() {\n    this.scene.geometries.forEach( geo => {\n      const uniforms = geo.material.uniforms;\n      this._assignTextureObj(uniforms);\n    });\n    \n    if (this.scene.skybox) {\n      const skybox = this.scene.skybox;\n      const uniforms = skybox.material.uniforms;\n      this._assignTextureObj(uniforms);\n    }\n  }\n\n  _assignTextureObj(uniforms) {\n    for (let key in uniforms) {\n      const {type, value} = uniforms[key];\n      if (!value || typeof value !== \"object\") {\n        continue;\n      }\n      if (type === \"texture\") {\n        const {image, properties: {minParam, magParam, wrapSParam, wrapTParam}} = value;\n        value[\"textureObj\"] = WebGLFunc.create2DTexture(this.gl, image, this.gl[minParam], this.gl[magParam], this.gl[wrapSParam], this.gl[wrapTParam]);\n      } else if (type === \"cubemap\") {\n        // create cubemap texture\n        const {image, properties: {minParam, magParam, wrapSParam, wrapTParam, wrapRParam}} = value;\n        value[\"textureObj\"] = WebGLFunc.createCubemapTexture(this.gl, image, this.gl[minParam], this.gl[magParam], this.gl[wrapSParam], this.gl[wrapTParam], this.gl[wrapRParam]);\n      }\n    }\n  }\n  \n  _createFinalSquad() {\n    const geo = new Square();\n    const uniforms = {\n      u_near: {type: \"f\", value: this.fogNear},\n      u_far: {type: \"f\", value: this.fogFar},\n      u_fog: {type: \"f\", value: this.fogAmount},\n      u_fogColor: {type: \"v3\", value: this.fogColor},\n      u_sample: {type: \"texture\", value: {textureObj: this.frameBufferTexture['color']}},\n      u_depth: {type: \"texture\", value: {textureObj: this.frameBufferTexture['depth']}},\n    };\n    const material = new Material({uniforms, shaders: finalPassShader});\n    geo.addMaterial(material);\n    this.final = geo;\n    \n    // Compile final pass shaders\n    const { vertex, fragment } = finalPassShader;\n    geo.material.shaderProgram = WebGLUtils.createShader(this.gl, vertex, fragment);\n    \n    // Create buffer data\n    geo.setBuffer('Vertices', WebGLFunc.createBufferData(this.gl, new Float32Array(geo.vertices)), 3);\n    geo.setBuffer('UVs', WebGLFunc.createBufferData(this.gl, new Float32Array(geo.UVs)), 2);\n    geo.setBuffer('Normals', WebGLFunc.createBufferData(this.gl, new Float32Array(geo.normals)), 3);\n    if (geo.indices.length > 0) {\n      geo.setBuffer('Indices', \n        WebGLFunc.createElementArrayBuffer(this.gl, new Float32Array(geo.indices)), 3);\n    }\n  }\n\n  _sendMaterialUniforms(materialObj) {\n    const { uniforms } = materialObj;\n    for(let key in uniforms) {\n      let name = key;\n      let type = \"f\";\n      let value = uniforms[key].value;\n\n      if (\"type\" in uniforms[key]) {\n        type = uniforms[key].type;\n      }\n\n      if (type === \"f\") {\n        WebGLFunc.sendUniformFloatToGLSL(this.gl, value, name);\n      } else if (type === \"t\") {\n        WebGLFunc.sendUniformFloatToGLSL(this.gl, performance.now() / 1000.0, name);\n      } else if (type === \"int\") {\n        WebGLFunc.sendUniformUintToGLSL(this.gl, value, name);\n      } else if (type === \"texture\") {\n        WebGLFunc.send2DTextureToGLSL(this.gl, value[\"textureObj\"], materialObj.getTextureUnit(name), name);\n      } else if (type === \"cubemap\") {\n        WebGLFunc.sendCubemapToGLSL(this.gl, value[\"textureObj\"], materialObj.getTextureUnit(name), name);\n      } else if (type === \"v2\") {\n        WebGLFunc.sendUniformVec2ToGLSL(this.gl, value, name);\n      } else if (type === \"v3\") {\n        WebGLFunc.sendUniformVec3ToGLSL(this.gl, value, name);\n      } else if (type === \"v4\") {\n        WebGLFunc.sendUniformVec4ToGLSL(this.gl, value, name);\n      } else if (type === \"mat4\") {\n        WebGLFunc.sendUniformMat4ToGLSL(this.gl, value, name);\n      } else if (type === \"mouse\") {\n        WebGLFunc.sendUniformVec2ToGLSL(this.gl, this.mousePos, name);\n      } else if (type === \"resolution\") {\n        const res = [this.gl.canvas.clientWidth, this.gl.canvas.clientHeight];\n        WebGLFunc.sendUniformVec2ToGLSL(this.gl, res, name);\n      }\n    }\n  }\n\n  _sendCameraUniforms() {\n    if (!this.camera) {\n      console.log(\"No camera is found.\");\n      return;\n    }\n    const { viewMatrix, projectionMatrix, position, viewProjectionInvMatrix } = this.camera;\n    WebGLFunc.sendUniformMat4ToGLSL(this.gl, viewMatrix, \"u_view\");\n    WebGLFunc.sendUniformMat4ToGLSL(this.gl, projectionMatrix, \"u_projection\");\n    WebGLFunc.sendUniformVec3ToGLSL(this.gl, position, \"u_cameraPos\");\n    if (this.scene.skybox) {\n      WebGLFunc.sendUniformMat4ToGLSL(this.gl, viewProjectionInvMatrix, \"u_viewProjectInvMatrix\");\n    }\n  }\n  \n  _sendLightUniforms() {\n    if (!this.scene.light) {\n      return;\n    }\n    const { position, color, specularColor } = this.scene.light;\n    WebGLFunc.sendUniformVec3ToGLSL(this.gl, position, 'u_lightPos');\n    WebGLFunc.sendUniformVec3ToGLSL(this.gl, color, 'u_lightColor');\n    WebGLFunc.sendUniformVec3ToGLSL(this.gl, specularColor, 'u_specularColor');\n  }\n\n  _renderObject(renderObj) {\n    const { material, vertices, normals, indices, UVs, buffer, tangents } = renderObj;\n    WebGLUtils.useShader(this.gl, material.shaderProgram);\n    \n    if (vertices.length > 0) {\n      WebGLFunc.sendAttributeBufferToGLSL(this.gl, buffer['Vertices'].buffer, buffer['Vertices'].dataCount, \"a_position\");\n    }\n    if (normals.length > 0) {\n      WebGLFunc.sendAttributeBufferToGLSL(this.gl, buffer['Normals'].buffer, buffer['Normals'].dataCount, \"a_normal\");\n    }\n    if (UVs.length > 0) {\n      WebGLFunc.sendAttributeBufferToGLSL(this.gl, buffer['UVs'].buffer, buffer['UVs'].dataCount, \"a_texCoord\");\n    }\n    if (tangents.length > 0) {\n      WebGLFunc.sendAttributeBufferToGLSL(this.gl, buffer['Tangents'].buffer, buffer['Tangents'].dataCount, \"a_tangent\");\n    }\n\n    this._sendMaterialUniforms(material);\n    this._sendCameraUniforms();\n    this._sendLightUniforms();\n\n    if (indices.length > 0) {\n      WebGLFunc.tellGLSLToDrawCurrentBuffer(this.gl, indices.length);\n    } else {\n      WebGLFunc.tellGLSLToDrawArrays(this.gl, vertices.length/3);\n    }\n    \n  }\n\n}\n\nexport default Renderer;\n","class UIComponent {\n    constructor() {\n        this.element = null;\n    }\n\n    getElement() {\n        return this.element;\n    }\n}\n\nexport default UIComponent;","import UIComponent from \"src/GUI/Components/UIComponent.js\";\n\nclass Sidebar extends UIComponent {\n  constructor(id) {\n    super();\n    const element = document.createElement(\"div\");\n    element.id = id;\n    element.className = \"side-bar-right\";\n    this.element = element;\n  }\n  \n}\n\nexport default Sidebar;\n","import UIComponent from \"src/GUI/Components/UIComponent.js\";\n\nclass TextEditor extends UIComponent {\n    constructor(id, title, text) {\n        super();\n        this.id = id;\n        this.textAreaId = `textarea-${id}`;\n        this.submitId = `submit-${id}`;\n        const editor = document.createElement(\"div\");\n        editor.setAttribute(\"id\", `editor-${id}`);\n        editor.setAttribute(\"class\", \"text-editor\");\n        editor.innerHTML = `\n            <form class=\"black-80\">\n                <div content-editable>\n                    <textarea id=${this.textAreaId} name=\"${id}\" class=\"textbox lh-copy db border-box hover-white w-100 ba pa2 br2 mb2 f6\" aria-describedby=\"${title}-desc\">\n                        ${text}\n                    </textarea>\n                </div>\n            </form>\n            <a id=${this.submitId} class=\"f7 link dim br1 ph3 pv2 mb2 mt2 dib white bg-dark-green\" href=\"#\">Update</>\n        `;\n        this.element = editor;\n    }\n\n    getTextAreaId() {\n        return this.textAreaId;\n    }\n    \n    getSubmitId() {\n        return this.submitId;\n    }\n\n    bindEvent(target, eventType, callback) {\n        let targetId = \"\";\n        switch(target) {\n            case \"textarea\":\n                targetId = this.textAreaId;\n                break;\n            case \"submit\":\n                targetId = this.submitId;\n                break;\n            default:\n                console.log(\"Invalid target\");\n                targetId = \"\";\n                break;\n        }\n        const ele = document.getElementById(targetId);\n        if (ele) {\n            ele.addEventListener(eventType, e => { \n                callback(e);\n            })\n        }\n    }\n}\n\nexport default TextEditor;\n  ","import UIComponent from \"src/GUI/Components/UIComponent.js\";\n\nclass Accordion extends UIComponent {\n  constructor() {\n    super();\n    this.element = document.createElement(\"div\");\n    this.element.setAttribute(\"class\", \"tabs\");\n    this.checkboxId = 0;\n  }\n\n  addItem({name, item}) {\n      /**\n       * <div class=\"tab\">\n       *    <input type=\"checkbox\" class=\"tab-input\" id=\"check-0\"></input>\n       *    <label class=\"tab-label\" for=\"check-0\"></label>\n       *    <div class=\"tab-content\">\n       *        {...content}\n       *    </div>\n       * </div> \n       */\n      // wrapper div\n      const newItem = document.createElement(\"div\");\n      newItem.setAttribute(\"class\", \"tab\");\n      // input\n      const input = document.createElement(\"input\");\n      input.setAttribute(\"type\", \"checkbox\");\n      input.setAttribute(\"class\", \"tab-input\");\n      const inputId = this._registerCheckboxId();\n      input.setAttribute(\"id\", inputId);\n      // label\n      const label = document.createElement(\"label\");\n      label.setAttribute(\"class\", \"tab-label f6\");\n      label.setAttribute(\"for\", inputId);\n      label.innerHTML = name;\n      // content div\n      const contentDiv = document.createElement(\"div\");\n      contentDiv.setAttribute(\"class\", \"tab-content\");\n      contentDiv.appendChild(item);\n      // put everything together\n      newItem.appendChild(input);\n      newItem.appendChild(label);\n      newItem.appendChild(contentDiv);\n      // add to parent\n      this.element.appendChild(newItem);\n  }\n\n  _registerCheckboxId() {\n      const currId = this.checkboxId;\n      this.checkboxId++;\n      return `check-${currId}`;\n  }\n\n}\n\nexport default Accordion;\n","import UIComponent from \"src/GUI/Components/UIComponent.js\";\n\nclass FileUploader extends UIComponent {\n    constructor(id, title, accept=\"*\", filename=\"\") {\n        super();\n        const element = document.createElement(\"div\");\n        element.id = id;\n        element.innerHTML = `\n            <label for=\"btn-${id}\" class=\"f7 mr2 white\">${title}</label>\n            <a \n                id=\"btn-${id}\" \n                onclick=document.getElementById(\"input-${id}\").click()\n                class=\"f7 link dim br2 ph2 pv1 mb1 mt1 dib white bg-mid-gray\"\n                style=\"cursor:pointer\"\n            >\n                <i class=\"fas fa-file-upload\"></i>\n            </a>\n            <input id=\"input-${id}\" type=\"file\" accept=\"${accept}\" name=\"model\" style=\"display:none\"></input>\n        `;\n        const fileName = document.createElement(\"span\");\n        fileName.id = \"filename\";\n        fileName.className = \"f7\";\n        fileName.innerText = filename;\n        element.appendChild(fileName);\n        this.id = id;\n        this.element = element;\n        this.fileName = fileName;\n    }\n\n    bindEvent(target=null, eventType, callback) {\n        const ele = this.element.querySelector(\"input\");\n        if (ele) {\n            ele.addEventListener(eventType, e => { \n                e.stopPropagation();\n                e.preventDefault();\n                const file = e.target.files[0];\n                this.fileName.innerText = file.name;\n                callback(file);\n            })\n        }\n    }\n}\n\nexport default FileUploader;","import UIComponent from \"src/GUI/Components/UIComponent.js\";\n\nclass Dropdown extends UIComponent {\n    constructor(id, title, items, selected=null) {\n        super();\n        const wrapperDiv = document.createElement(\"div\");\n        wrapperDiv.id = id;\n        const label = document.createElement(\"label\");\n        label.setAttribute(\"for\", `selector-${id}`);\n        label.setAttribute(\"class\", \"white mr2 f7\");\n        label.innerText = title;\n        wrapperDiv.appendChild(label);\n        const selector = document.createElement(\"select\");\n        selector.id = `selector-${id}`;\n        selector.className = \"f7 link dim br2 ph2 pv1 mb1 mt1 dib white bg-mid-gray\";\n        items.forEach( item => {\n          const option = document.createElement(\"option\");\n          option.value = item.toLowerCase();\n          option.innerText = item;\n          selector.appendChild(option);\n        })\n        if (selected) {\n          selector.value = selected.toLowerCase();\n      }\n        wrapperDiv.appendChild(selector);\n        this.element = wrapperDiv;\n    }\n}\n\nexport default Dropdown;","import UIComponent from \"src/GUI/Components/UIComponent.js\";\n\nclass Tabs extends UIComponent {\n    constructor(id, items, selected=null) {\n        super();\n        const wrapperDiv = document.createElement(\"div\");\n        wrapperDiv.id = id;\n        const selector = document.createElement(\"select\");\n        selector.id = `selector-${id}`;\n        selector.className = \"f7 link dim br2 ph2 pv1 mb2 dib white bg-mid-gray\";\n        items.forEach( item => {\n            const option = document.createElement(\"option\");\n            const { title } = item;\n            option.value = title.toLowerCase();\n            option.innerText = title;\n            selector.appendChild(option);\n        })\n        if (selected) {\n            selector.value = selected.toLowerCase();\n        }\n        wrapperDiv.appendChild(selector);\n        \n        items.forEach( item => {\n            let visible = selected === item.title ? true : false;\n            wrapperDiv.appendChild(this._createContent(item, visible));\n            visible = false;\n        })\n        selector.addEventListener(\"change\", e => {\n            const ele = document.getElementById(selector.id);\n            if (ele) {\n                const nodes = wrapperDiv.querySelectorAll(\".tab-content-wrapper\");\n                nodes.forEach( node => {\n                    if (node.id === `content-${ele.value}`) {\n                        node.style.display = \"block\";\n                    } else {\n                        node.style.display = \"none\";\n                    }\n                })\n            }\n        })\n        this.element = wrapperDiv;\n    }\n\n    _createContent(item, visible) {\n        const contentDiv = document.createElement(\"div\");\n        contentDiv.id = `content-${item.title.toLowerCase()}`;\n        contentDiv.className = \"tab-content-wrapper\";\n        contentDiv.style.display = visible ? \"block\" : \"none\";\n        contentDiv.appendChild(item.content);\n        return contentDiv;\n    }\n}\n\nexport default Tabs;","import Sidebar from 'src/GUI/Components/Sidebar';\nimport TextWidget from 'src/GUI/Components/TextWidget';\nimport Accordion from './Components/Accordion';\nimport FileLoader from \"./Components/FileUploader\";\nimport Dropdown from \"./Components/Dropdown\";\nimport Tabs from \"./Components/Tabs\";\n\n/**\n * UI component\n *\n * @author \"Xiaoxuan Zhang\"\n * @public\n */\nconst UIComponent = store => {\n  let sidebarId = \"main-panel\";\n  let listeners = {\n    \"SUBMIT_SHADER\": [],\n    \"SELECT_SCENE\": [],\n    \"UPDATE_MODEL\": [],\n    \"SELECT_SHADER_2D\": [],\n    \"SELECT_SHADER_3D\": []\n  };\n  let rootElement = document.createElement(\"div\");\n  rootElement.setAttribute(\"id\", \"ui-root\");\n  document.body.appendChild(rootElement);\n  const sidebar = new Sidebar(sidebarId);\n  \n  const modelOptions = createModelEditor(store);\n  const shaderOptions = createShaderEditor(store);\n\n  let accordion = new Accordion();\n  accordion.addItem({name: \"Settings\", item: modelOptions});\n  accordion.addItem({name: \"Shaders\", item: shaderOptions});\n  \n  sidebar.getElement().appendChild(accordion.getElement());\n  rootElement.appendChild(sidebar.getElement());\n\n  // Bind events\n  shaderOptions.querySelectorAll(\"textarea\").forEach( editor => {\n    editor.addEventListener(\"keyup\", e => {\n      if (e.target) {\n        sessionStorage.setItem(e.target.id, e.target.value);\n      }\n    });\n  })\n\n  shaderOptions.querySelectorAll(\"a\").forEach( btn => {\n    btn.addEventListener(\"click\", e => {\n      const sceneSelector = document.getElementById(\"selector-scene\");\n      const selectedScene = sceneSelector.options[sceneSelector.selectedIndex].text;\n      const shaderSelector = document.getElementById(`selector-shader-editor-${sceneSelector.value}`);\n      const selectedShader = shaderSelector.options[shaderSelector.selectedIndex].text;\n      listeners[\"SUBMIT_SHADER\"].forEach(func => func(selectedScene, selectedShader));\n    });\n  })\n\n  shaderOptions.querySelector(\"#selector-shader-editor-2d\").addEventListener(\"change\", e => {\n    const selectedShader = getSelectedOption(\"selector-shader-editor-2d\");\n    listeners[\"SELECT_SHADER_2D\"].forEach(func => func(selectedShader));\n  });\n\n  shaderOptions.querySelector(\"#selector-shader-editor-3d\").addEventListener(\"change\", e => {\n    const selectedShader = getSelectedOption(\"selector-shader-editor-3d\");\n    listeners[\"SELECT_SHADER_3D\"].forEach(func => func(selectedShader));\n  });\n\n  modelOptions.querySelector(\"#selector-scene\").addEventListener(\"change\", e => {\n    const selected = getSelectedOption(\"selector-scene\");\n    // Toggle on model loader if 3d is selected\n    toggleModelLoader(selected);\n    // Toggle corresponding shader tab\n    toggleShaderTab(selected);\n    listeners[\"SELECT_SCENE\"].forEach(func => func(selected));\n  });\n\n  modelOptions.querySelector(\"#model-editor-submit\").addEventListener(\"click\", e => {\n    listeners[\"UPDATE_MODEL\"].forEach(func => func());\n  })\n  \n  const addListener = (target, listener) => {\n    if (!(target in listeners)) {\n      listeners[target] = [];\n    }\n    listeners[target].push(listener);\n  }\n \n  return {\n    rootElement,\n    addListener\n  }\n};\n\nconst getSelectedOption = id => {\n  const ele = document.getElementById(id);\n  return ele.options[ele.selectedIndex].text;\n}\n\nconst addToList = (parent, child) => {\n  const li = document.createElement(\"li\");\n  li.className = \"pv1 ba bl-0 bt-0 br-0 b--dotted b--white-30\";\n  li.appendChild(child);\n  parent.appendChild(li);\n  return li;\n}\n\nconst getImageName = (imgObj) => {\n  let name = \"\";\n  if (imgObj) {\n    const src = imgObj.src;\n    name = getFileName(src);\n  }\n  return name;\n}\n\nconst getFileName = (filePath) => {\n  let name = \"\";\n  if (filePath !== \"\") {\n    name = filePath.substring(filePath.lastIndexOf(\"/\") + 1)\n  }\n  return name;\n}\n\nconst createModelLoader = (store) => {\n  const loaderDiv = document.createElement(\"div\");\n  loaderDiv.id = \"model-loader\";\n  const ul = document.createElement(\"ul\");\n  ul.className = \"list pl0 measure center mt1 mb1\";\n  loaderDiv.appendChild(ul);\n  const { currentModel, model } = store.get();\n  const { path, textures } = model[currentModel];\n\n  // Create model loader\n  const modelLoader = new FileLoader(\"model\", \"Model(.obj)\", \".obj\", getFileName(path));\n  modelLoader.bindEvent(null, \"change\", file => {\n    processObj(store, \"text\", file, updateObjToStore);\n  });\n  addToList(ul, modelLoader.getElement());\n\n  // Create texture loaders\n  Object.keys(textures).forEach( key => {\n    const texture = textures[key];\n    const fileLoaders = new FileLoader(key, texture.desc, \"image/*\", getImageName(texture.img));\n    fileLoaders.bindEvent(null, \"change\", file => {\n      processImage(store, key, file, updateTextureToStore);\n    })\n    addToList(ul, fileLoaders.getElement());\n  })\n  const submitBtn = document.createElement(\"a\");\n  submitBtn.id = \"model-editor-submit\";\n  submitBtn.className = \"f7 link dim br1 ph3 pv2 mb2 mt2 dib white bg-dark-green cursor-pointer\";\n  submitBtn.innerText = \"Update\";\n  loaderDiv.appendChild(submitBtn);\n  return loaderDiv;\n}\n\nconst processImage = (store, key, file, imageHandler) => {\n  const reader = new FileReader();\n  const image = new Image();\n  reader.onload = e => {\n    image.src = e.target.result;\n    imageHandler(store, key, image);\n  }\n  reader.readAsDataURL(file);\n}\n\nconst processObj = (store, key, file, objHandler) => {\n  const reader = new FileReader();\n  reader.onload = e => {\n    objHandler(store, key, e.target.result);\n  }\n  reader.readAsText(file);\n}\n\nconst updateTextureToStore = (store, key, fileObj) => {\n  const model = store.getById(\"model\");\n  const currentModel = store.getById(\"currentModel\");\n  model[currentModel].textures[key].img = fileObj;\n  store.setDataById(\"model\", model);\n}\n\nconst updateObjToStore = (store, key, fileObj) => {\n  const model = store.getById(\"model\");\n  const currentModel = store.getById(\"currentModel\");\n  model[currentModel][key] = fileObj;\n  store.setDataById(\"model\", model);\n}\n\nconst createModelEditor = (store) => {\n  const currentScene = store.getById(\"currentScene\");\n  const modelEditorDiv = document.createElement(\"div\");\n  modelEditorDiv.setAttribute(\"id\", \"model-editor\");\n  const sceneSelector = new Dropdown(\"scene\", \"Select a scene\", [\"3D\", \"2D\"], currentScene);\n  modelEditorDiv.appendChild(sceneSelector.getElement());\n  const divider = document.createElement(\"div\");\n  divider.className = \"divider\";\n  modelEditorDiv.appendChild(divider);\n  const modelLoader = createModelLoader(store);\n  if (currentScene === \"2D\") {\n    modelLoader.style.display = \"none\";\n  }\n  modelEditorDiv.appendChild(modelLoader);\n  \n  return modelEditorDiv;\n}\n\nconst toggleModelLoader = (type) => {\n  const enabled = type === \"2D\" ? false : true;\n  const ele = document.getElementById(\"model-loader\");\n  if (ele) {\n    ele.style.display = enabled ? \"block\" : \"none\";\n  }\n}\n\nconst toggleShaderTab = (type) => {\n  const enabled3D = type === \"3D\";\n  const div2d = document.getElementById(\"editor-2d\");\n  const div3d = document.getElementById(\"editor-3d\");\n  div2d.style.display = !enabled3D? \"block\" : \"none\";\n  div3d.style.display = enabled3D? \"block\" : \"none\";\n}\n\nconst createShaderEditor = (store) => {\n  const { shaders, currentShader, currentScene } = store.get();\n  const shaderEditorDiv = document.createElement(\"div\");\n  shaderEditorDiv.setAttribute(\"id\", \"shader-editor-wrapper\");\n  // Add wrappers for different shader types in order to respond to 3D/2D scene\n  Object.keys(shaders).forEach( type => {\n    const typeLower = type.toLowerCase();\n    const wrapper = document.createElement(\"div\");\n    wrapper.id = `editor-${typeLower}`;\n    const shaderItems = shaders[type];\n    // Add text widgets for all shaders\n    const items = [];\n    const current = currentShader[type];\n    Object.keys(shaderItems).forEach( id => {\n      const { fragment } = shaderItems[id];\n      const textWidget = new TextWidget(id, id, fragment);\n      items.push({title: id, content: textWidget.getElement()});\n    })\n    const tabs = new Tabs(`shader-editor-${typeLower}`, items, current);\n    wrapper.appendChild(tabs.getElement());\n    if (type !== currentScene) {\n      // Hide 2d/3d wrapper by default\n      wrapper.style.display = \"none\"\n    }\n    shaderEditorDiv.appendChild(wrapper);\n  })\n  return shaderEditorDiv\n}\n\nexport default UIComponent;\n","/**\n * Specifies a WebGL scene.\n *\n * @author \"Xiaoxuan Zhang\"\n * @this {Scene}\n */\nclass Scene {\n    constructor(gl) {\n        this.gl = gl;\n        this.geometries = []; // Geometries being drawn on canvas\n        this.sceneObjects = []; //Objects being added to scene\n        this.light = null;\n        this.skybox = null;\n        this.particleSystem = [];\n    }\n\n    /**\n     * Adds the given object to the scene.\n     *\n     * @param {Object} object object being added to scene\n    */\n    addSceneObject(object) {\n        this.sceneObjects.push(object);\n    }\n\n    /**\n     * Adds the given geometry to the scene.\n     *\n     * @param {Geometry} geometry Geometry being added to scene\n    */\n    addGeometry(geometry) {\n        this.geometries.push(geometry);\n    }\n\n    addParticles(particles) {\n        this.particleSystem.push(particles);\n    }\n\n    setLight(light) {\n        this.light = light;\n    }\n\n    /**\n     * Clears all geometries in the scene.\n     */\n    clear() {\n        this.geometries = [];\n        this.sceneObjects = [];\n        this.skybox = null;\n        this.particleSystem = [];\n        this.light = null;\n    }\n\n    /**\n     * Updates the animation for each geometry in geometries.\n     */\n    updateAnimation() {\n        // Recomendations: No rendering should be done here. Your Geometry objects\n        // in this.geometries should update their animations themselves through\n        // their own .updateAnimation() methods.\n        this.sceneObjects.forEach(function(object) {\n            object.updateAnimation();\n        });\n\n        this.geometries.forEach(function(geometry){\n            if (geometry.visible) {\n                geometry.updateAnimation();\n            }\n        });\n\n        if (this.skybox) {\n            this.skybox.updateAnimation();\n        }\n\n    }\n\n}\n\nexport default Scene;","import Matrix4 from \"src/WebGL/lib/cuon-matrix.js\";\nimport {\n  sendUniformMat4ToGLSL,\n  sendUniformVec3ToGLSL\n} from \"src/WebGL/lib/webglFunctions.js\";\n\n/**\n * Specifies a FPS Camera.\n *\n * @author \"Xiaoxuan Zhang\"\n * @this {Camera}\n */\nvar Camera = function(params={}) {\n  const { position, target } = params;\n  this.position = new Float32Array(position || [0.0, 0.0, 10.0]);\n  this.target = new Float32Array(target || [0.0, 0.0, 0.0]);\n  this.worldUp = new Float32Array([0, 1, 0]);\n  this.up = new Float32Array([0, 1, 0]);\n  this.front = new Float32Array([0, 0, -1]);\n  this.right = new Float32Array([0, 0, 0]);\n  this.yaw = -90.0;\n  this.pitch = 0.0;\n  this.fov = 60.0;\n  this.near = 0.1;\n  this.far = 1000.0;\n  this.aspectRatio = 1.2;\n  this.viewMatrix = new Matrix4();\n  this.projectionMatrix = new Matrix4();\n  this.projectionMatrix.setPerspective(this.fov, this.aspectRatio, this.near, this.far);\n  this.viewProjectionInvMatrix = new Matrix4();\n  this.deltaTime = 0.0;\n  this.lastTime = performance.now();\n  this.rotationSpeed = 0.5;\n  this.speed = 0.02;\n  this.sensitivity = 100.0;\n  this.update();\n}\n\n/**\n* Set camera's position\n**/\nCamera.prototype.setPosition = function(position) {\n  this.position = new Float32Array(position);\n  this.updateViewMatrix();\n}\n\n/**\n* Set camera's lookAt target\n**/\nCamera.prototype.setTarget = function(target) {\n  this.target = new Float32Array(target);\n  this.updateViewMatrix();\n}\n\n/**\n* Set camera's perspective\n**/\nCamera.prototype.setPerspective = function(fov, aspectRatio, near, far) {\n  this.fov = fov;\n  this.near = near;\n  this.far = far;\n  this.aspectRatio = aspectRatio;\n  this.updateProjectionMatrix();\n}\n\nCamera.prototype.setAspectRatio = function(aspectRatio) {\n  this.aspectRatio = aspectRatio;\n  this.updateProjectionMatrix();\n}\n\n/**\n* move camera in x-z plane\n**/\nCamera.prototype.move = function(direction) {\n  // move the camera around\n  let velocity = this.speed * this.deltaTime;\n  let offset = velocity;\n  if (direction == \"forward\" ) {\n    this.position[0] += this.front[0] * offset;\n    this.position[1] += this.front[1] * offset;\n    this.position[2] += this.front[2] * offset;\n\n  } else if (direction == \"backward\") {\n    this.position[0] -= this.front[0] * offset;\n    this.position[1] -= this.front[1] * offset;\n    this.position[2] -= this.front[2] * offset;\n  } else if (direction == \"left\") {\n    this.position[0] += this.right[0] * offset;\n    this.position[1] += this.right[1] * offset;\n    this.position[2] += this.right[2] * offset;\n  } else if (direction == \"right\"){\n    this.position[0] -= this.right[0] * offset;\n    this.position[1] -= this.right[1] * offset;\n    this.position[2] -= this.right[2] * offset;\n  }\n  this.updateViewMatrix();\n}\n\n/**\n* rotate camera with keyboard\n**/\nCamera.prototype.rotate = function(direction) {\n  let velocity = this.rotationSpeed * this.deltaTime;\n  if (direction == \"left\")\n  {\n    this.yaw -= velocity;\n  } else if (direction == \"right\")\n  {\n    this.yaw += velocity;\n  } else if (direction == \"up\")\n  {\n    this.pitch += velocity;\n  } else if (direction == \"down\")\n  {\n    this.pitch -= velocity;\n  }\n  if (this.pitch > 89.9) {\n    this.pitch = 89.9;\n  }\n  if (this.pitch < -89.9) {\n    this.pitch = -89.9;\n  }\n  this.update();\n}\n\n/**\n* rotate camera with mouse\n**/\nCamera.prototype.rotateWithMouse = function(deltaX, deltaY) {\n  this.yaw += deltaX * this.sensitivity;\n  this.pitch += deltaY * this.sensitivity;\n\n  if (this.pitch > 89.9) {\n    this.pitch = 89.9;\n  }\n  if (this.pitch < -89.9) {\n    this.pitch = -89.9;\n  }\n  this.update();\n}\n\n/**\n* zoom in and out with scroll\n**/\nCamera.prototype.zoom = function(offset) {\n  if (this.fov > 1.0 || this.fov < 45.0) {\n    this.fov += offset;\n  }\n}\n\nCamera.prototype.update = function() {\n  let cosPitch = Math.cos(this.pitch * Math.PI / 180.0);\n  let sinPitch = Math.sin(this.pitch * Math.PI / 180.0);\n  let cosYaw = Math.cos(this.yaw * Math.PI / 180.0);\n  let sinYaw = Math.sin(this.yaw * Math.PI / 180.0);\n\n  this.front[0] = cosYaw * cosPitch;\n  this.front[1] = sinPitch;\n  this.front[2] = sinYaw * cosPitch;\n  this.front = this.normalize(this.front);\n  this.getRight();\n  this.getUp();\n  this.updateViewMatrix();\n  this.updateViewProjectionInvMatrix();\n}\n\nCamera.prototype.getTarget = function() {\n  //for FPS, target = Front + Position\n  let target = new Float32Array([0, 0, 0]);\n  target[0] = this.front[0] + this.position[0];\n  target[1] = this.front[1] + this.position[1];\n  target[2] = this.front[2] + this.position[2];\n  this.target = target;\n  return this.target;\n}\n\nCamera.prototype.getFront = function() {\n  let front = new Float32Array([0, 0, 0]);\n  front[0] = this.target[0] - this.position[0];\n  front[1] = this.target[1] - this.position[1];\n  front[2] = this.target[2] - this.position[2];\n  this.front = this.normalize(front);\n  return this.front;\n}\n\nCamera.prototype.getRight = function() {\n  let right = new Float32Array([0, 0, 0]);\n  let ax = this.front[0], ay = this.front[1], az = this.front[2];\n  let bx = this.worldUp[0], by = this.worldUp[1], bz = this.worldUp[2];\n\n  right[0] = ay * bz - az * by;\n  right[1] = az * bx - ax * bz;\n  right[2] = ax * by - ay * bx;\n  this.right = this.normalize(right);\n  return this.right;\n}\n\nCamera.prototype.getUp = function() {\n  let up = new Float32Array([0, 0, 0]);\n  let ax = this.right[0], ay = this.right[1], az = this.right[2];\n  let bx = this.front[0], by = this.front[1], bz = this.front[2];\n\n  up[0] = ay * bz - az * by;\n  up[1] = az * bx - ax * bz;\n  up[2] = ax * by - ay * bx;\n  this.up = this.normalize(up);\n  return this.up;\n}\n\nCamera.prototype.normalize = function(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let len = x*x + y*y + z*z;\n  let out = new Float32Array(3);\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\nCamera.prototype.updateProjectionMatrix = function() {\n  this.projectionMatrix.setPerspective(this.fov, this.aspectRatio, this.near, this.far);\n}\n\nCamera.prototype.updateViewMatrix = function() {\n  this.getTarget();\n  this.viewMatrix.setLookAt(this.position[0], this.position[1], this.position[2],\n                      this.target[0], this.target[1], this.target[2], this.up[0], this.up[1], this.up[2]);\n}\n\n/*\n* For skybox, we want to transform each pixel on our quad to a direction in the world that the camera is looking towards.\nSo instead of using projection * view matrix to transform world space to camera space, we take the inverse of projectionViewMatrix.\nAnd since we only care about the direction (orientation), we ignore the translation part.\n*/\nCamera.prototype.updateViewProjectionInvMatrix = function() {\n  let m = new Matrix4();\n  m.set(this.projectionMatrix);\n  let v = new Matrix4();\n  v.set(this.viewMatrix);\n  //remove translation\n  v[12] = 0.0;\n  v[13] = 0.0;\n  v[14] = 0.0;\n  v[15] = 1.0;\n  m.concat(v); // projection * view\n  this.viewProjectionInvMatrix.setInverseOf(m); // get the inverse of the projectionViewMatrix\n}\n\nCamera.prototype.getViewDistance = function(target) {\n  let distance = Math.sqrt(Math.pow((target[0] - this.position[0]),2)\n                + Math.pow((target[1] - this.position[1]),2)\n                + Math.pow((target[2] - this.position[2]),2));\n  return distance;\n}\n\nCamera.prototype.getViewDistanceXZ = function(target) {\n  let distance = Math.sqrt(Math.pow((target[0] - this.position[0]),2)\n                + Math.pow((target[2] - this.position[2]),2));\n  return distance;\n}\n\nCamera.prototype.updateAnimation = function() {\n  let currTime = performance.now();\n  this.deltaTime = currTime - this.lastTime;\n  this.lastTime = currTime;\n}\n\nexport default Camera;\n","class Texture {\n    constructor(image, properties) {\n        this.image = image;\n        this.textureObj = null;\n        this.properties = {\n            minParam: \"LINEAR\",\n            magParam: \"LINEAR\",\n            wrapSParam: \"REPEAT\",\n            wrapTParam: \"REPEAT\",\n            ...properties\n        };\n    }\n}\n\nexport default Texture;","import Texture from \"src/WebGL/texture.js\";\n\nclass Cubemap extends Texture {\n    constructor(image, properties) {\n        super();\n        this.image = image;\n        this.textureObj = null;\n        this.properties = {\n            minParam: \"LINEAR\",\n            magParam: \"LINEAR\",\n            wrapSParam: \"CLAMP_TO_EDGE\",\n            wrapTParam: \"CLAMP_TO_EDGE\",\n            wrapRParam: \"CLAMP_TO_EDGE\",\n            ...properties\n        };\n    }\n}\n\nexport default Cubemap;","import Matrix4 from \"src/WebGL/lib/cuon-matrix.js\";\n\n/**\n * Specifies a Light.\n *\n * @author \"Xiaoxuan Zhang\"\n * @this {Light}\n */\n\n class SimpleLight {\n    /**\n     * Constructor for Light.\n     *\n     * @constructor\n     */\n    constructor(params={}) {\n      const {\n        position, \n        color, \n        specularColor\n      } = params;\n      this.position = new Float32Array(position || [0.0, 10.0, 5.0]);\n      this.color = new Float32Array(color || [1.0, 1.0, 1.0]);\n      this.specularColor = new Float32Array(specularColor || [1.0, 1.0, 1.0]);\n      this.lightSpaceMatrix = null;\n      this.near = 1.0;\n      this.far = 10.0;\n    }\n\n    setPosition(pos) {\n        this.position = new Float32Array(pos);\n    }\n\n    setLightColor(color) {\n        this.color = new Float32Array(color);\n    }\n\n    setSpecularColor(color) {\n        this.specularColor = new Float32Array(color);\n    }\n\n    updateMatrix() {\n      let projection = new Matrix4().setOrtho(-10.0, 10.0, -10.0, 10.0, this.near, this.far);\n      let view = new Matrix4().setLookAt(\n        this.position[0], this.position[1], this.position[2], \n        0, 0, 0, \n        0, 1, 0\n      );\n      this.lightSpaceMatrix = projection.multiply(view);\n    }\n}\n\nexport default SimpleLight;\n  ","import Geometry from \"src/WebGL/geometries/geometry.js\";\n\n/**\n * Specifies a cube. A subclass of Geometry.\n *\n * @author \"Zhang Xiaoxuan\"\n * @this {Cube}\n */\nclass Cube extends Geometry {\n  /**\n   * Constructor for cube.\n   *\n   * @constructor\n   */\n  constructor() {\n    // Recommendations: Remember that cube is a subclass of Geometry.\n    // \"super\" keyword can come in handy when minimizing code reuse.\n    super();\n    this.generateCubeVertices();\n  }\n\n  /**\n   * Generates the vertices of the cube.\n   *\n   * @private\n   */\n  generateCubeVertices() {\n    /*\n      7- - -6\n     /|    /|\n    3- - -2 |\n    | |   | |\n    | 4- -|-5\n    |/    |/\n    0- - -1\n  */\n\n    this.vertices = [\n      //back\n      -1.0, -1.0, -1.0, //4\n      1.0, 1.0, -1.0, //6\n      1.0, -1.0, -1.0, //5\n\n      1.0, 1.0, -1.0, //6\n      -1.0, -1.0, -1.0, //4\n      -1.0, 1.0, -1.0, //7\n\n      //front\n      -1.0, -1.0, 1.0, //0\n      1.0, -1.0, 1.0, //1\n      1.0, 1.0, 1.0, //2\n\n      1.0, 1.0, 1.0, //2\n      -1.0, 1.0, 1.0, //3\n      -1.0, -1.0, 1.0, //0\n\n      //left\n      -1.0, 1.0, 1.0, //3\n      -1.0, 1.0, -1.0, //7\n      -1.0, -1.0, -1.0, //4\n\n      -1.0, -1.0, -1.0, //4\n      -1.0, -1.0, 1.0, //0\n      -1.0, 1.0, 1.0,  //3\n\n      //right\n      1.0, 1.0, 1.0, //2\n      1.0, -1.0, -1.0, //5\n      1.0, 1.0, -1.0, //6\n\n      1.0, -1.0, -1.0, //5\n      1.0, 1.0, 1.0, //2\n      1.0, -1.0, 1.0, //1\n\n      //bottom\n      -1.0, -1.0, -1.0, //4\n      1.0, -1.0, -1.0, //5\n      1.0, -1.0, 1.0, //1\n\n      1.0, -1.0, 1.0, //1\n      -1.0, -1.0, 1.0, //0\n      -1.0, -1.0, -1.0, //4\n\n      //top\n      -1.0, 1.0, -1.0, //7\n      1.0, 1.0, 1.0, //2\n      1.0, 1.0, -1.0, //6\n\n      1.0, 1.0, 1.0, //2\n      -1.0, 1.0, -1.0, //7\n      -1.0, 1.0, 1.0 //3\n\n    ];\n    this.UVs = [\n      //back\n      0.0, 0.0, //4\n      1.0, 1.0, //6\n      1.0, 0.0, //5\n\n      1.0, 1.0, //6\n      0.0, 0.0, //4\n      0.0, 1.0, //7\n\n      //front\n      0.0, 0.0, //0\n      1.0, 0.0, //1\n      1.0, 1.0, //2\n\n      1.0, 1.0, //2\n      0.0, 1.0, //3\n      0.0, 0.0, //0\n\n      //left\n      1.0, 0.0, //3\n      1.0, 1.0, //7\n      0.0, 1.0, //4\n\n      0.0, 1.0, //4\n      0.0, 0.0, //0\n      1.0, 0.0, //3\n\n      //right\n      1.0, 0.0, //2\n      0.0, 1.0, //5\n      1.0, 1.0, //6\n\n      0.0, 1.0, //5\n      1.0, 0.0, //2\n      0.0, 0.0, //1\n\n      //bottom\n      0.0, 1.0, //4\n      1.0, 1.0, //5\n      1.0, 0.0, //1\n\n      1.0, 0.0, //1\n      0.0, 0.0, //0\n      0.0, 1.0, //4\n\n      //top\n      0.0, 1.0, //7\n      1.0, 0.0, //2\n      1.0, 1.0, //6\n\n      1.0, 0.0, //2\n      0.0, 1.0, //7\n      0.0, 0.0 //3\n    ];\n    this.normals = [\n      //back\n      0.0, 0.0, -1.0,\n      0.0, 0.0, -1.0,\n      0.0, 0.0, -1.0,\n      0.0, 0.0, -1.0,\n      0.0, 0.0, -1.0,\n      0.0, 0.0, -1.0,\n\n      //front\n      0.0, 0.0, 1.0,\n      0.0, 0.0, 1.0,\n      0.0, 0.0, 1.0,\n      0.0, 0.0, 1.0,\n      0.0, 0.0, 1.0,\n      0.0, 0.0, 1.0,\n\n      //left\n      -1.0, 0.0, 0.0,\n      -1.0, 0.0, 0.0,\n      -1.0, 0.0, 0.0,\n      -1.0, 0.0, 0.0,\n      -1.0, 0.0, 0.0,\n      -1.0, 0.0, 0.0,\n\n      //right\n      1.0, 0.0, 0.0,\n      1.0, 0.0, 0.0,\n      1.0, 0.0, 0.0,\n      1.0, 0.0, 0.0,\n      1.0, 0.0, 0.0,\n      1.0, 0.0, 0.0,\n\n      //bottom\n      0.0, -1.0, 0.0,\n      0.0, -1.0, 0.0,\n      0.0, -1.0, 0.0,\n      0.0, -1.0, 0.0,\n      0.0, -1.0, 0.0,\n      0.0, -1.0, 0.0,\n\n      //top\n      0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0\n    ];\n  }\n}\n\nexport default Cube;\n","import { Vector2, Vector3 } from \"src/WebGL/lib/cuon-matrix.js\";\n\nconst parseObj = (text, options={}) => {\n    const positions = [[0, 0, 0]];\n    const texCoords = [[0, 0]];\n    const normals = [[0, 0, 0]];\n    const textureStride = options.textureStride || 2;\n\n    const vertexData = [\n        positions,\n        texCoords,\n        normals\n    ];\n\n    let glVertexData = [\n        [], //positions\n        [], //texcoords\n        [] //normals\n    ];\n    \n    const vertIndexMap = {};\n    const glIndices = [];\n\n    const noop = () => {};\n\n    const addVertex = vert => {\n        const ptn = vert.split(\"/\");\n        const indices = ptn.map( (str, i) => {\n            if (!str) return;\n            const objIndex = parseInt(str);\n            const idx = objIndex + (objIndex >= 0 ? 0 : vertexData[i].length);\n            return idx;\n        })\n        const id =  indices.join(',');\n        let vertIndex = vertIndexMap[id];\n        if (!vertIndex) {\n            vertIndex = glVertexData[0].length / 3;\n            vertIndexMap[id] = vertIndex;\n            indices.forEach( (index, i) => {\n                if (index) {\n                    glVertexData[i].push(...vertexData[i][index]);\n                }\n            })\n        }\n        glIndices.push(vertIndex);\n    };\n\n    // triangulate and calculate tangent\n    const triangulate = (parts) => {\n        const numTriangles = parts.length - 2;\n        // populate triangles from face\n        for (let tri = 0; tri < numTriangles; ++tri) {\n            addVertex(parts[0]); \n            addVertex(parts[tri + 1]);\n            addVertex(parts[tri + 2]);\n        }\n    };\n    \n    const keywords = {\n        v(parts) {\n            positions.push(parts.map(parseFloat));\n        },\n        vn(parts) {\n            normals.push(parts.map(parseFloat));\n        },\n        vt(parts) {\n            // Deal with uv|uvw\n            const uvParts = parts.slice(0, textureStride);\n            texCoords.push(uvParts.map(parseFloat));\n        },\n        s: noop,\n        f(parts) {\n            triangulate(parts);\n        }\n    };\n    const keywordRE = /(\\w*)(?: )*(.*)/;\n    const lines = text.split(\"\\n\");\n    \n    for (let ln = 0; ln < lines.length; ++ln) {\n        const line = lines[ln].trim();\n        if (line === '' || line.startsWith(\"#\")) {\n            continue;\n        }\n        const m = keywordRE.exec(line);\n        if (!m) continue;\n        const [, keyword, unparsedArgs] = m;\n        const parts = line.split(/\\s+/).slice(1);\n        const handler = keywords[keyword];\n        if (!handler) {\n            console.warn(`unhandled keyword ${keyword} at line ${ln + 1}`);\n            continue;\n        }\n        handler(parts, unparsedArgs);\n    }\n\n    const tangents = calcTangents(glVertexData[0], glVertexData[1], glIndices);\n\n    let result = {\n        vertices: glVertexData[0],\n        texCoords: glVertexData[1],\n        normals: glVertexData[2],\n        tangents,\n        indices: glIndices\n    }\n    return result;\n} \n\nconst calcTangents = (vertices, UVs, indices) => {\n    const tangentsMap = {};\n    let tangents = [];\n    for (let i = 0; i < indices.length; i = i + 3) {\n      const id0 = indices[i];\n      const id1 = indices[i + 1];\n      const id2 = indices[i + 2];\n      \n      let v0 = new Vector3(vertices.slice(id0 * 3, id0 * 3 + 3));\n      let v1 = new Vector3(vertices.slice(id1 * 3, id1 * 3 + 3));\n      let v2 = new Vector3(vertices.slice(id2 * 3, id2 * 3 + 3));\n\n      let uv0 = new Vector2(UVs.slice(id0 * 2, id0 * 2 + 2));\n      let uv1 = new Vector2(UVs.slice(id1 * 2, id1 * 2 + 2));\n      let uv2 = new Vector2(UVs.slice(id2 * 2, id2 * 2 + 2));\n\n      // edges\n      let edge1 = v1.subtract(v0);\n      let edge2 = v2.subtract(v0);\n\n      // uv delta\n      let deltaUV1 = uv1.subtract(uv0).elements;\n      let deltaUV2 = uv2.subtract(uv0).elements;\n\n      let tangent = null;\n\n      let f = 1.0 / (deltaUV1[0] * deltaUV2[1] - deltaUV1[1] * deltaUV2[0]);\n      tangent = edge1.scale(deltaUV2[1]).subtract(edge2.scale(deltaUV1[1]));\n      tangent = tangent.scale(f);\n      // bitangent = edge2.scale(deltaUV1[0]).subtract(edge1.scale(deltaUV2[0]));\n      // bitangent = bitangent.scale(f);\n      \n      for (let j = 0; j < 3; ++j) {\n        let currentIndex = indices[i + j];\n        if (!(currentIndex in tangentsMap)) {\n          tangentsMap[currentIndex] = tangent;\n        } else {\n          tangentsMap[currentIndex] = tangentsMap[currentIndex].add(tangent); // average\n        }\n        // if (!(currentIndex in bitangentsMap)) {\n        //   bitangentsMap[currentIndex] = bitangent;\n        // } else {\n        //   bitangentsMap[currentIndex] = bitangentsMap[currentIndex].add(bitangent); // average\n        // }\n      }\n    }\n    for (let i = 0; i < Object.keys(tangentsMap).length; ++i) {\n      tangents.push(...tangentsMap[i].elements);\n    }\n    return tangents;\n}\n\nexport default parseObj;\nexport {\n    calcTangents\n};","import Geometry from \"src/WebGL/geometries/geometry.js\";\nimport { calcTangents } from \"src/WebGL/lib/objParser\";\n\n/**\n * Specifies a triangle which fluctuates in size (grows and shrinks).\n *\n * @author \"Zooey\"\n * @this {CustomObject}\n */\nclass CustomObject extends Geometry {\n  /**\n   * Constructor for FluctuatingTriangle.\n   *\n   * @constructor\n   * @param {Number} object imported mesh\n   */\n  constructor(object) {\n    super();\n    if (object) {\n      this.vertices = object.vertices || [];\n      this.UVs = object.texCoords || [];\n      this.normals = object.normals || [];\n      this.indices = object.indices || [];\n      this.colors = object.colors || [];\n      this.tangents = object.tangents || [];\n      if (this.tangents.length === 0) {\n        this.tangents = calcTangents(this.vertices, this.UVs, this.indices);\n      }\n    }\n  }\n}\n\n\nexport default CustomObject;\n","import WebGLRenderer from 'src/WebGL/renderer.js';\nimport UI from 'src/GUI/UI.js';\nimport Store from \"src/store.js\";\nimport Scene from \"src/WebGL/scene.js\";\nimport Camera from \"src/WebGL/camera.js\";\nimport Material from \"src/WebGL/material.js\";\nimport Texture from \"src/WebGL/texture.js\";\nimport Cubemap from \"src/WebGL/cubemap.js\";\nimport SimpleLight from \"src/WebGL/simpleLight.js\";\nimport Cube from \"src/WebGL/geometries/cube.js\";\nimport Square from \"src/WebGL/geometries/square.js\";\nimport CustomObject from \"src/WebGL/geometries/object.js\";\nimport parseObj from \"src/WebGL/lib/objParser\";\n\nconst CANVAS_ID = \"webgl-canvas\";\n\nconst _createCube = (data, {\n    translate=[0.0, 0.0, 0.0], \n    scale=[1.0, 1.0, 1.0], \n    rotateDegree=0.0, \n    rotateAxis=[0,1,0], \n    autoRotate=false\n}) => {\n    const geo = new Cube();\n    const { images, shaders } = data;\n    const texImg = images[\"wood\"].img;\n    const uniforms = {\n        u_model: {type: \"mat4\", value: geo.modelMatrix},\n        u_normalMatrix: {type: \"mat4\", value: geo.normalMatrix},\n        u_sample: {type: \"texture\", value: new Texture(texImg)},\n    };\n    const lightShader = shaders[\"3D\"][\"BasicLight\"];\n    const material = new Material({uniforms, shaders: lightShader});\n    geo.addMaterial(material);\n    geo.translate(translate);\n    geo.rotate(rotateDegree, rotateAxis);\n    geo.scale(scale);\n    geo.autoRotate = autoRotate;\n    return geo;\n}\n  \nconst _createGround = (data, {\n    translate=[0.0, 0.0, 0.0], \n    scale=[1.0, 1.0, 1.0], \n    rotateDegree=0.0, \n    rotateAxis=[0,1,0], \n    autoRotate=false\n}) => {\n    const geo = new Square();\n    const { shaders } = data;\n    const uniforms = {\n      u_model: {type: \"mat4\", value: geo.modelMatrix},\n      u_normalMatrix: {type: \"mat4\", value: geo.normalMatrix},\n      u_color: {type: \"v3\", value: [0.8, 0.8, 0.8]}\n    };\n    const colorShader = shaders[\"3D\"][\"SimpleColor\"];\n    const material = new Material({uniforms, shaders: colorShader});\n    geo.addMaterial(material);\n    geo.translate(translate);\n    geo.rotate(rotateDegree, rotateAxis);\n    geo.scale(scale);\n    geo.autoRotate = autoRotate;\n    return geo;\n}\n  \nconst _createSkybox = (data) => {\n    const geo = new Square();\n    const { images, shaders } = data;\n    const texImg = images[\"noise64\"].img;\n    const skyShader = shaders[\"3D\"][\"Sky\"];\n    const uniforms = {\n      u_noisemap: {type: \"texture\", value: new Texture(texImg)},\n      u_time: {type: \"t\", value: 0.0}\n    };\n    const material = new Material({uniforms, shaders: skyShader});\n    geo.addMaterial(material);\n    return geo;\n}\n  \nconst _createObject = (data) => {\n    const { model, shaders, currentModel } = data;\n    const customModel = model[currentModel];\n    if (!customModel.text) return null;\n    let meshData = customModel.model;\n    if (!meshData) {\n      meshData = parseObj(customModel.text);\n      customModel.model = meshData; // Temporarily mutate the store data\n    }\n    const geo = new CustomObject(meshData);\n    const transform = customModel[\"transform\"];\n    const translate = transform[\"translate\"] || [0.0, 0.0, 0.0];\n    const scale = transform[\"scale\"] || [1.0, 1.0, 1.0]; \n    const rotateDegree = transform[\"rotateDegree\"] || 0.0; \n    const rotateAxis = transform[\"rotateAxis\"] || [0, 1, 0];\n    const autoRotate = transform[\"autoRotate\"] || false;\n    geo.translate(translate);\n    geo.scale(scale);\n    geo.rotate(rotateDegree, rotateAxis);\n    geo.autoRotate = autoRotate;\n    const uniforms = {\n      u_model: {type: \"mat4\", value: geo.modelMatrix},\n      u_normalMatrix: {type: \"mat4\", value: geo.normalMatrix}\n    };\n    const maps = customModel.textures;\n    \n    Object.keys(maps).forEach(key => {\n      const img = maps[key].img;\n      if ( img ) {\n        uniforms[`u_${key}`] = {type: \"texture\", value: new Texture(maps[key].img)};\n      }\n    })\n    const material = new Material({uniforms, shaders: shaders[\"3D\"][\"PBR\"]});\n    geo.addMaterial(material);\n    return geo;\n}\n\nconst create3DScene = (store) => {\n    const storeData = store.get();\n    const { model, currentModel, cameraInfo, lightInfo } = storeData;\n    const newModel = model[currentModel];\n\n    const scene = new Scene();\n    const camera = new Camera({...cameraInfo});\n    camera.setPerspective(40.0, 2, 0.1, 100);\n    camera.setPosition([0.0, 0.0, 1.0]);\n    \n    if (newModel.modelType === \"custom\") {\n      const customObj = _createObject(storeData);\n      scene.addGeometry(customObj);\n    } else {\n      //  Add some 3D stuff\n      const cube = _createCube(storeData, {\n        translate: [-2.0, -1.0, -5.0],\n        scale: [0.5, 0.5, 0.5],\n        rotateDegree: 30,\n        rotateAxis: [0, 0, 1],\n        autoRotate: true\n      });\n      scene.addGeometry(cube);\n    }\n    \n    const ground = _createGround(storeData, {\n      translate: [0.0, -3.0, 0.0],\n      scale: [50.0, 50.0, 50.0],\n      rotateDegree: -90,\n      rotateAxis: [1, 0, 0]\n    });\n    scene.addGeometry(ground);\n  \n    // //Add a skybox\n    const skybox = _createSkybox(storeData);\n    scene.skybox = skybox;\n  \n    const light = new SimpleLight({...lightInfo});\n    scene.setLight(light);\n    return { scene, camera };\n}\n\nconst createFullScreenSquad = store => {\n    const scene = new Scene();\n    const camera = new Camera();\n\n    //  Add square\n    const geo = new Square();\n    const storeData = store.get();\n    const { textures, images, cubemaps, cubemapTextures } = storeData;\n    const uniforms = {\n      u_time: {type: \"t\"},\n      u_mouse: {type: \"mouse\"},\n      u_resolution: {type: \"resolution\"}\n    };\n    const currentShader = storeData.currentShader[\"2D\"];\n    const shader = storeData.shaders[\"2D\"][currentShader];\n    // Set 2D texture\n    if (currentShader in textures) {\n      textures[currentShader].forEach( (item, i) => {\n        let idx = i === 0 ? \"\" : i;\n        uniforms[`u_sample${idx}`] = {type: \"texture\", value: new Texture(images[item].img)};\n      })\n    }\n    // Set cubemap texture\n    if (currentShader in cubemapTextures) {\n      cubemapTextures[currentShader].forEach( (item, i) => {\n        let idx = i === 0 ? \"\" : i;\n        uniforms[`u_cubemap${idx}`] = {type: \"cubemap\", value: new Cubemap(cubemaps[item])};\n      })\n    }\n    const material = new Material({uniforms, shaders: shader});\n    geo.addMaterial(material);\n    scene.addGeometry(geo);\n    return { scene, camera };\n}\n\nconst initScene = (renderer, sceneType, store) => {\n  if (sceneType === \"3D\") {\n    const { scene, camera } = create3DScene(store);\n    renderer.init(scene, camera); \n  } else {\n    const { scene, camera } = createFullScreenSquad(store);\n    renderer.init(scene, camera);\n  }\n}\n\nconst render = () => {\n  const renderer = new WebGLRenderer(CANVAS_ID);\n  const ui = UI(Store, \"ui-wrapper\");\n  const currentScene = Store.getById(\"currentScene\");\n  // Initialize canvas and webgl context\n  initScene(renderer, currentScene, Store);\n\n  window.addEventListener(\"resize\", () => {\n    renderer.resizeCanvas();\n  }, false);\n\n  ui.addListener( \"SUBMIT_SHADER\", (selectedScene, selectedShader) => {\n    if (sessionStorage && `textarea-${selectedShader}` in sessionStorage) {\n      const currShaders = Store.getById(\"shaders\");\n      currShaders[selectedScene][selectedShader].fragment = sessionStorage[`textarea-${selectedShader}`];\n      Store.setDataById(\"shaders\", currShaders);\n    }\n    initScene(renderer, selectedScene, Store);\n  });\n\n  ui.addListener(\"SELECT_SCENE\", selected => {\n    initScene(renderer, selected, Store);\n  })\n\n  ui.addListener(\"UPDATE_MODEL\", () => {\n    initScene(renderer, \"3D\", Store);\n  })\n\n  ui.addListener(\"SELECT_SHADER_2D\", (selectedShader) => {\n    const currentShader = Store.getById(\"currentShader\");\n    currentShader[\"2D\"] = selectedShader;\n    Store.setDataById(\"currentShader\", currentShader);\n  })\n\n  ui.addListener(\"SELECT_SHADER_3D\", (selectedShader) => {\n    const currentShader = Store.getById(\"currentShader\");\n    currentShader[\"3D\"] = selectedShader;\n    Store.setDataById(\"currentShader\", currentShader);\n  })\n  \n  const animate = () => {\n    requestAnimationFrame(animate);\n    renderer.render();\n  }\n  animate();\n}\n\nexport {\n    create3DScene,\n    createFullScreenSquad,\n    render\n};","import './style/style.scss';\nimport Store from \"src/store.js\";\nimport { render } from \"src/app.js\";\n\nconst addModelLoaderPromise = model => {\n  return fetch(model.path)\n    .then(response => response.text())\n    .then(text => {\n      model.text = text;\n      return text;\n    })\n}\n\n// Create promises for loading images\nconst addImageLoaderPromises = images => {\n  return Object.keys(images).map( key => {\n    const imgPath = images[key].path;\n    if (!imgPath) return null;\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.addEventListener('load', () => resolve({img, key}));\n      img.addEventListener('error', (err) => reject(err));\n      img.src = images[key].path;\n    })\n    .then( ({img, key}) => {\n      images[key].img = img;\n      return {img, key};\n    })\n  })\n}\n\nconst loadContent = () => {\n  \n  // TODO: add an animated loading page\n  \n  // Load local resources\n  let promiseList = [];\n  const models = Store.getById(\"model\");\n\n  // Load example 3D model textures\n  Object.keys(models).forEach( key => {\n    const model = models[key];\n    const textures = model.textures;\n    promiseList = promiseList.concat(addImageLoaderPromises(textures));\n    promiseList.push(addModelLoaderPromise(model));\n  })\n\n  // Load images\n  const images = Store.getById(\"images\");\n  promiseList = promiseList.concat(addImageLoaderPromises(images));\n  \n  // Load cubemaps\n  const cubemaps = Store.getById(\"cubemaps\");\n  Object.keys(cubemaps).forEach( key => {\n    const cubemapTextures = cubemaps[key];\n    promiseList = promiseList.concat(addImageLoaderPromises(cubemapTextures));\n  })\n \n  // Wait for all promises to resolve before rendering\n  Promise.all(promiseList)\n  .then(() => {\n    /* \n      Update the upated values back to store, \n      even though the store data has already been mutated due to the shallow copy of the object.\n    */\n    document.getElementById(\"loading-screen\").style = \"display: none\";\n    Store.setDataById(\"model\", models);\n    Store.setDataById(\"images\", images);\n    render();\n  })\n  .catch( err => {\n    console.log(\"Error occurred when loading static files: \", err);\n  })\n  \n  return true;\n};\n\nwindow.onload = loadContent();\n\n\n\n/**\n * Provides requestAnimationFrame in a cross browser\n * way.\n */\nif (!window.requestAnimationFrame) {\n  window.requestAnimationFrame = (function() {\n    return window.requestAnimationFrame ||\n           window.webkitRequestAnimationFrame ||\n           window.mozRequestAnimationFrame ||\n           window.oRequestAnimationFrame ||\n           window.msRequestAnimationFrame ||\n           function(/* function FrameRequestCallback */ callback, /* DOMElement Element */ element) {\n             window.setTimeout(callback, 1000/60);\n           };\n  })();\n}\n\n/** * ERRATA: 'cancelRequestAnimationFrame' renamed to 'cancelAnimationFrame' to reflect an update to the W3C Animation-Timing Spec.\n *\n * Cancels an animation frame request.\n * Checks for cross-browser support, falls back to clearTimeout.\n * @param {number}  Animation frame request. */\nif (!window.cancelAnimationFrame) {\n  window.cancelAnimationFrame = (window.cancelRequestAnimationFrame ||\n                                 window.webkitCancelAnimationFrame || window.webkitCancelRequestAnimationFrame ||\n                                 window.mozCancelAnimationFrame || window.mozCancelRequestAnimationFrame ||\n                                 window.msCancelAnimationFrame || window.msCancelRequestAnimationFrame ||\n                                 window.oCancelAnimationFrame || window.oCancelRequestAnimationFrame ||\n                                 window.clearTimeout);\n}\n"],"sourceRoot":""}